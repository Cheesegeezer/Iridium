<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
      xmlns:cor="assembly://MSCorLib/System"
      xmlns:a="assembly://MediaBrowser/MediaBrowser"
	    xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
      xmlns:is="file://Iridium_Styles.mcml"
      xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
	  xmlns:isounds="resx://Iridium/Iridium.Resources/Sounds"
      xmlns:vi="resx://Iridium/Iridium.Resources/Images"
      xmlns:ib="resx://Iridium/Iridium.Resources/ItemButton"
      xmlns:lv="resx://Iridium/Iridium.Resources/LabelValue"
      xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
      xmlns:bi="resx://Iridium/Iridium.Resources/BusyIndicator"
      xmlns:st="resx://Iridium/Iridium.Resources/AutoScrollableText"
      xmlns:imb="resx://Iridium/Iridium.Resources/ImageButton"
      xmlns:vsb="resx://Iridium/Iridium.Resources/SimpleButton"
      xmlns:ft="resx://Iridium/Iridium.Resources/FancyText"
	  xmlns:hob="resx://Iridium/Iridium.Resources/HomeOptionButton"
	  xmlns:ym="resx://Iridium/Iridium.Resources/YearMov"
	  xmlns:gm="resx://Iridium/Iridium.Resources/GenreMov" 
      xmlns:ih="assembly://Iridium/Iridium"
      xmlns:me="Me" >
  

  <UI Name="HomePopup">
      <Properties>
        <lib:FolderModel Name="ParentFolder" FolderModel="$Required"/>
        <ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
        <a:Application Name="Application" Application="$Required"/>
        <Color Name="TitleColor" Color="color://is:XC_PopupMenuTitle" />
        <Font Name="Font" Font="font://is:XF_PopupMenuTitle"/>
		  <Index Name="TilesIndex" Index="null"/>
		  <Index Name="HeaderIndex" Index="null"/>
		  <cor:String Name="Label" String=""/>
       </Properties>
      <Locals>
		
		<Command Name="Dummy" />
		  
		<Command Name="RefreshRecCommand"/>
		<Command Name="RecRefresh"/>

		  <Command Name="ShuffleAccCommand"/>
		  <Command Name="AccShuffle"/>

		  <Command Name="RefreshRALCommand"/>
		  <Command Name="Refresh"/>
		  <Command Name="WatchedRefresh"/>
		  <Command Name="UnwatchedRefresh"/>
		  <Command Name="TileLostFocus"/>
		  
		  
        <cor:Int32 Name="Startup" />
		<Timer Name="TileGroupReset" AutoRepeat="false" Interval="200" Enabled="false"/>
        <lib:Item Name="SelectedItem" Item="[ParentFolder.SelectedChild]" />
        <ScrollingHandler Name="ScrollingHandler"  HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" />
        <ScrollingData Name="ScrollingData" LockedAlignment="0.1" LockedPosition="0.1" BeginPadding="50" EndPadding="50" BeginPaddingRelativeTo="Near" EndPaddingRelativeTo="Far" />
        <FlowLayout Name="HorizontalFlowLayout" Orientation="Horizontal" AllowWrap="true" RepeatGap="50,0" Spacing="50,50" ItemAlignment="Center" />
        <cor:String Name="RALOptionText" String="" />
      </Locals>
	  <Rules>

		  <Binding Target="[Application.CurrentItem]" Source="[ParentFolder.SelectedChild]" />
		  <Binding Target="[ThemeHelper.CurrentItem]" Source="[ParentFolder.SelectedChild]" />

		  <Binding Target="[RALItems.Folder]" Source="[ParentFolder.SelectedChild!lib:FolderModel]"/>
			  
		  <Changed Source="[ParentFolder.SelectedChild]" >
			  <Actions>
				  <Set Target="[RALItems.Folder]" Value="[ParentFolder.SelectedChild!lib:FolderModel]" InvokePolicy="AsynchronousLowPri" />
			  </Actions>
		  </Changed>

		  <Changed Source="[TileGroupReset.Tick]" >
			  <Actions>
				  <Set Target="[ScrollingData.LockedPosition]" Value="0.1" />
			  </Actions>
		  </Changed>

		  <Changed Source="[TileLostFocus.Invoked]" >
			  <Actions>
				  <Set Target="[ScrollingData.LockedPosition]" Value=".1" InvokePolicy="Synchronous" />
				  <Invoke Target="[TileGroupReset.Start]"  />
			  </Actions>
		  </Changed>

		  
		  <!--<Rule >
			  <Conditions>
				  <Equality Source="[ThemeHelper.Config.NonTVRalOption]" ConditionOp="Equals" Value="New" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RecentPanel.Visible]" Value="true" />
				  <Set Target="[WatchedPanel.Visible]" Value="false" />
				  <Set Target="[UnwatchedPanel.Visible]" Value="false" />
			  </Actions>
		  </Rule>
		  <Rule >
			  <Conditions>
				  <Equality Source="[ThemeHelper.Config.NonTVRalOption]" ConditionOp="Equals" Value="Watched" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RecentPanel.Visible]" Value="false" />
				  <Set Target="[WatchedPanel.Visible]" Value="true" />
				  <Set Target="[UnwatchedPanel.Visible]" Value="false" />
			  </Actions>
		  </Rule>
		  <Rule >
			  <Conditions>
				  <Equality Source="[ThemeHelper.Config.NonTVRalOption]" ConditionOp="Equals" Value="Unwatched" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RecentPanel.Visible]" Value="false" />
				  <Set Target="[WatchedPanel.Visible]" Value="false" />
				  <Set Target="[UnwatchedPanel.Visible]" Value="true" />
			  </Actions>
		  </Rule>-->

		  <Rule>
			  <Conditions>
				  <Equality Source="[Application.RecentItemOption]" ConditionOp="Equals" Value="added" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RALItems.Label]" Value="Recently Added" />
			  </Actions>
		  </Rule>
		  <Rule>
			  <Conditions>
				  <Equality Source="[Application.RecentItemOption]" ConditionOp="Equals" Value="watched" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RALItems.Label]" Value="Latest Watched" />
			  </Actions>
		  </Rule>

		  <Rule>
			  <Conditions>
				  <Equality Source="[Application.RecentItemOption]" ConditionOp="Equals" Value="unwatched" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RALItems.Label]" Value="Latest Unwatched" />
			  </Actions>
		  </Rule>
		  
		  
		  <Changed Source="[Application.RecentItemOption]"  >
			  <Conditions>
				  <Equality Source="[Application.RecentItemOption]" ConditionOp="Equals" Value="watched" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RALItems.Label]" Value="Latest Watched" />
			  </Actions>
		  </Changed>

		  <Changed Source="[Application.RecentItemOption]"  >
			  <Conditions>
				  <Equality Source="[Application.RecentItemOption]" ConditionOp="Equals" Value="added" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RALItems.Label]" Value="Recently Added" />
			  </Actions>
		  </Changed>

		  <Changed Source="[Application.RecentItemOption]"  >
			  <Conditions>
				  <Equality Source="[Application.RecentItemOption]" ConditionOp="Equals" Value="unwatched" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RALItems.Label]" Value="Latest Unwatched" />
			  </Actions>
		  </Changed>
		  
		  <Changed Source="[Refresh.Invoked]"  >
			  <Conditions>
				  <Equality Source="[Application.RecentItemOption]" ConditionOp="Equals" Value="added" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RALItems.Label]" Value="Latest Watched" />
				  <PlaySound Sound="sound://isounds:Miniselect" />
				  <Set Target="[Application.RecentItemOption]" Value="watched" />
				  <Invoke Target="[ParentFolder.RecentItemsChanged]"  InvokePolicy="Synchronous"/>
			  </Actions>
		  </Changed>
		  
		  <Changed Source="[Refresh.Invoked]" >
			  <Conditions>
				  <Equality Source="[Application.RecentItemOption]" ConditionOp="Equals" Value="watched" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RALItems.Label]" Value="Latest Unwatched" />
				  <PlaySound Sound="sound://isounds:Miniselect" />
				  <Set Target="[Application.RecentItemOption]" Value="unwatched" />
				  <Invoke Target="[ParentFolder.RecentItemsChanged]"  InvokePolicy="Synchronous"/>
			  </Actions>
		  </Changed>
		  
		  <Changed Source="[Refresh.Invoked]" >
			  <Conditions>
				  <Equality Source="[Application.RecentItemOption]" ConditionOp="Equals" Value="unwatched" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RALItems.Label]" Value="Recently Added" />
				  <PlaySound Sound="sound://isounds:Miniselect" />
				  <Set Target="[Application.RecentItemOption]" Value="added" />
				  <Invoke Target="[ParentFolder.RecentItemsChanged]"  InvokePolicy="Synchronous"/>
			  </Actions>
		  </Changed>

		  <!--<Changed Source="[RefreshRALCommand.Invoked]" >
			  <Conditions>
				  <Equality Source="[ThemeHelper.Config.NonTVRalOption]" ConditionOp="Equals" Value="New" />
			  </Conditions>
			  <Actions>
				  <PlaySound Sound="sound://isounds:Miniselect" />
				  <Invoke Target="[WatchedRefresh.Invoke]" />
				  <Set Target="[ThemeHelper.Config.NonTVRalOption]" Value="Watched" />
				  <Set Target="[RecentPanel.Visible]" Value="false" />
				  <Set Target="[WatchedPanel.Visible]" Value="true" />
				  <Set Target="[UnwatchedPanel.Visible]" Value="false" />
				  <Invoke Target="[WatchedTitle.NavigateInto]" />
			  </Actions>
		  </Changed>
		  
		  <Changed Source="[RefreshRALCommand.Invoked]" >
			  <Conditions>
				  <Equality Source="[ThemeHelper.Config.NonTVRalOption]" ConditionOp="Equals" Value="Watched" />
			  </Conditions>
			  <Actions>
				  <PlaySound Sound="sound://isounds:Miniselect" />
				  <Invoke Target="[UnwatchedRefresh.Invoke]" />
				  <Set Target="[ThemeHelper.Config.NonTVRalOption]" Value="Unwatched" />
				  <Set Target="[RecentPanel.Visible]" Value="false" />
				  <Set Target="[WatchedPanel.Visible]" Value="false" />
				  <Set Target="[UnwatchedPanel.Visible]" Value="true" />
				  <Invoke Target="[UnwatchedTitle.NavigateInto]" />
			  </Actions>
		  </Changed>-->

		  <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]" />

		  <Rule>
			  <Conditions>
				  <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp ="Equals" Value="true" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RecommendedPanel.Visible]" Value="false" />
				  <Set Target="[AcclaimedPanel.Visible]" Value="false" />
				  <Set Target="[NextUpPanel.Visible]" Value="true" />
				  <Set Target="[UpcomingPanel.Visible]" Value="true" />
			  </Actions>
		  </Rule>

		  <Changed Source="[ParentFolder.SelectedChild]" >
			  <Conditions>
				  <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp ="Equals" Value="true" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RecommendedPanel.Visible]" Value="false" />
				  <Set Target="[AcclaimedPanel.Visible]" Value="false" />
				  <Set Target="[NextUpPanel.Visible]" Value="true" />
				  <Set Target="[UpcomingPanel.Visible]" Value="true" />
			  </Actions>
		  </Changed>

		  <Rule>
			  <Conditions>
				  <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp ="Equals" Value="false" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RecommendedPanel.Visible]" Value="true" />
				  <Set Target="[AcclaimedPanel.Visible]" Value="true" />
				  <Set Target="[NextUpPanel.Visible]" Value="false" />
				  <Set Target="[UpcomingPanel.Visible]" Value="false" />
			  </Actions>
		  </Rule>
		  <Changed Source="[ParentFolder.SelectedChild]" >
			  <Conditions>
				  <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp ="Equals" Value="false" />
			  </Conditions>
			  <Actions>
				  <Set Target="[RecommendedPanel.Visible]" Value="true" />
				  <Set Target="[AcclaimedPanel.Visible]" Value="true" />
				  <Set Target="[NextUpPanel.Visible]" Value="false" />
				  <Set Target="[UpcomingPanel.Visible]" Value="false" />
			  </Actions>
		  </Changed>

		  <Changed Source="[RefreshRecCommand.Invoked]" >
			  <Actions>
				  <PlaySound Sound="sound://isounds:Miniselect" />
				  <Invoke Target="[RecRefresh.Invoke]" />
			  </Actions>
		  </Changed>

		  <Changed Source="[ShuffleAccCommand.Invoked]" >
			  <Actions>
				  <PlaySound Sound="sound://isounds:Miniselect" />
				  <Invoke Target="[AccShuffle.Invoke]" />
			  </Actions>
		  </Changed>
	  
	  
	  </Rules>

      <Content>

        <Panel Layout="Form" >
          <Children>

            <Panel Layout="Form" >
              <LayoutInput>
                <AnchorLayoutInput Left="Parent,0,20" Top="Parent,0,15" />
              </LayoutInput>
              <Children>
                <Text Name="HomeText" Color="color://is:XC_RALPopupItem" Font="font://is:XF_RALPopupItem" Content="" Margins="0,0,0,0"/>
              </Children>
            </Panel>

            <Panel Layout="HorizontalFlow" Name="HomeScrollers" >
                <Children>
                  <Scroller Orientation="Horizontal" Margins="25,0,0,0" Name="Scroller" FadeSize="-5" ScrollingData="[ScrollingData]" Visible="true" >
                  <Children>
                    <Panel Layout="Form">
                      <Layout>
                        <FlowLayout Orientation="Horizontal" Spacing="50,50" />
                      </Layout>
						<Children>

							<!--<Panel Layout="Form" Name="SpotlightPanel" >
								<Layout>
									<FlowLayout Orientation="Vertical"/>
								</Layout>
								<Children>
									<hob:HomeOptionButton Name="SpotlightTitle" Label="Spotlight" Command="[Dummy]" Margins="15,-25,0,0"/>
									<me:SpotlightGridLayout Application="[Application]" ThemeHelper="[ThemeHelper]" Item="[ParentFolder.SelectedChild]" Folder="[ParentFolder]" MaximumSize="1200,1000" Navigation="ContainHorizontal"/>
								</Children>
							</Panel>-->
							
							<Panel Layout="Form" Name="NextUpPanel" >
								<Layout>
									<FlowLayout Orientation="Vertical"/>
								</Layout>
								<Children>
									<hob:HomeOptionButton Name="NextTitle" Label="Next Up" Command="[Dummy]" LostFocus="[TileLostFocus]" Margins="15,-25,0,0" />
									<me:NextUpGridLayout Application="[Application]" ThemeHelper="[ThemeHelper]" Folder="[ParentFolder]"   MaximumSize="1200,800" Navigation="ContainHorizontal"/>
								</Children>
							</Panel>

							<Panel Layout="Form" Name="RecentPanel" >
								<Layout>
									<FlowLayout Orientation="Vertical"/>
								</Layout>
								<Children>
									<!--<hob:HomeOptionButton Name="RecentTitle" Command="[RefreshRALCommand]" LostFocus="[TileLostFocus]" Margins="15,-25,0,0"/>-->
									<me:RecentlyAddedGridLayout Name="RALItems" Label="[RALOptionText]" Application="[Application]" ThemeHelper="[ThemeHelper]" Click="[Refresh]" Folder="[ParentFolder]" MaximumSize="1400,1400" Navigation="ContainHorizontal"/>
								</Children>
							</Panel>

							<Panel Layout="Form" Name="ResumePanel"  >
								<Layout>
									<FlowLayout Orientation="Vertical"/>
								</Layout>
								<Children>
									<hob:HomeOptionButton Name="ResumeTitle" Label="Resume" LostFocus="[TileLostFocus]" Command="[Dummy]" Margins="15,-25,0,10" />
									<me:ResumeGridLayout Application="[Application]" ThemeHelper="[ThemeHelper]" Folder="[ParentFolder]" MaximumSize="300,505" Navigation="Column"  />
								</Children>
							</Panel>

							<Panel Layout="Form" Name="UpcomingPanel" >
								<Layout>
									<FlowLayout Orientation="Vertical"/>
								</Layout>
								<Children>
									<hob:HomeOptionButton Name="UpcomingTitle"  Label="UpcomingTV" Command="[Dummy]" LostFocus="[TileLostFocus]" Margins="15,-25,0,0"/>
									<me:UpcomingGridLayout Application="[Application]" ThemeHelper="[ThemeHelper]" Folder="[ParentFolder]" MaximumSize="1200,800" Navigation="ContainHorizontal"/>
								</Children>
							</Panel>

							<Panel Layout="Form" Name="RecommendedPanel" >
								<Layout>
									<FlowLayout Orientation="Vertical"/>
								</Layout>
								<Children>
									<hob:HomeOptionButton Name="Watched" Label="Because You Watched:" Command="[RefreshRecCommand]" LostFocus="[TileLostFocus]" Margins="20,-25,0,25" />
									<me:RecommendedGridLayout Name="RecommendedLayout" Click="[RecRefresh]" Application="[Application]" ThemeHelper="[ThemeHelper]" Folder="[ParentFolder]" MaximumSize="1400,800" Navigation="ContainHorizontal"/>
								</Children>
							</Panel>
							
							<Panel Layout="Form" Name="AcclaimedPanel" >
								<Layout>
									<FlowLayout Orientation="Vertical"/>
								</Layout>
								<Children>
									<hob:HomeOptionButton Name="AcclaimedTitle" Label="Critically Acclaimed" Command="[ShuffleAccCommand]" LostFocus="[TileLostFocus]" Margins="15,-25,0,0" />
									<me:AcclaimedGridLayout Application="[Application]" Click="[AccShuffle]" ThemeHelper="[ThemeHelper]" Folder="[ParentFolder]"  MaximumSize="1400,800" Navigation="ContainHorizontal"/>
								</Children>
							</Panel>
						</Children>
                      <Animations>
                        <Animation Type="Move">
                          <Keyframes>
                            <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25" />
                            <PositionKeyframe Time="0.65" RelativeTo="Final" />
                          </Keyframes>
                        </Animation>
                      </Animations>
                    </Panel>
                  </Children>
                </Scroller>
              </Children>
            </Panel>
          
          </Children>
        </Panel>
      </Content>
    </UI>
	
	<UI Name="SpotlightGridLayout">
    <Properties>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
      <a:Application Name="Application" Application="$Required"/>
      <Color Name="TitleColor" Color="color://is:XC_PopupMenuTitle" />
      <Font Name="Font" Font="font://is:XF_PopupMenuTitle"/>
      <Size Name="Size" Size="300,168"/>
      <Size Name="Size2" Size="296,164"/>
		<Command Name="Click"/>
    </Properties>
    <Locals>
      <cor:Int32 Name="Startup" />
      <ScrollingHandler Name="ScrollingHandler"  HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" />
      <ScrollingData Name="ScrollingData" LockedPosition="0.17" />
      <FlowLayout Name="HorizontalFlowLayout" Orientation="Horizontal" AllowWrap="true" RepeatGap="50,0" Spacing="50,50" ItemAlignment="Center" />
    </Locals>
    <Rules>

      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]" />
      <Default Target="[ScrollingData.Repeater]" Value="[RemainingItems]" />
      <Condition Source="[ThemeHelper.SpotlightCount]" ConditionOp="Equals" SourceValue="0" Target="[NoRecent.Visible]" Value="true" />

		<Changed Source="[Click.Invoked]" >
			<Actions>
				<Set Target="[FirstItem.Source]" Value="[ThemeHelper.GetSpotlightAddedItem]" />
				<!--<Set Target="[SecondItem.Source]" Value="[ThemeHelper.GetRandomResumeItem]" />
				<Set Target="[ThirdItem.Source]" Value="[ThemeHelper.ShowThirdNewItem]" />-->
				<Set Target="[RemainingItems.Source]" Value="[ThemeHelper.ShowRemainingNewItems]" />
			</Actions>
		</Changed>
		
		<Changed Source="[Folder.SelectedChild]" >
			<Actions>
				<Set Target="[FirstItem.Source]" Value="[ThemeHelper.GetSpotlightAddedItem]" />
				<!--<Set Target="[SecondItem.Source]" Value="[ThemeHelper.ShowSecondNewItem]" />
				<Set Target="[ThirdItem.Source]" Value="[ThemeHelper.ShowThirdNewItem]" />-->
				<Set Target="[RemainingItems.Source]" Value="[ThemeHelper.ShowRemainingNewItems]" />
			</Actions>
		</Changed>
		
	</Rules>

    <Content>

      <Panel Layout="Anchor">
        <Children>

			
          <Clip FadeAmount="1" Name="Scroller1" Margins="0,0,0,0" >
            <Children>
              <Text Name="NoRecent" Content="No Recommendations" Color="color://is:XC_NoRALPopupItem" Font="font://is:XF_NoRALPopupItem" Visible="false" Margins="0,50,0,0" />

              
                  <Panel Name="RALItems" Layout="Anchor" Margins="0,20,0,0" >
                    <Children>
                      
                      <Panel Name="FIP">
                        <Children>
                          <Repeater Source="[ThemeHelper.GetSpotlightAddedItem]" Name="FirstItem" DiscardOffscreenVisuals="false"  >
                            <Content>
                              <me:AddedItem Name="FIPAdded" Application="[Application]" Item="[RepeatedItem!lib:Item]" Index="[RepeatedItemIndex]" Size="[ThemeHelper.GetBigImageSize]" />
                            </Content>
                          </Repeater>
                        </Children>
                      </Panel>
                      
                      <Panel Name="SIP">
                        <LayoutInput>
                          <AnchorLayoutInput Left="FIP, 1,5" Top="FIP,0,0"/>
                        </LayoutInput>
                        <Children>
							<me:GenreTile Name="Genre" Application="[Application]" Item="[Folder.SelectedChild]"  Size="[Size2]"  />
							
                      <!--<Repeater Source="[ThemeHelper.ShowSecondNewItem]" Name="SecondItem" DiscardOffscreenVisuals="false" Margins="5,0,0,0" >
                        <Content>
                          
                        </Content>
                      </Repeater>-->
                        </Children>
                      </Panel>

                      <Panel Name="TIP" >
                        <LayoutInput>
                          <AnchorLayoutInput Left="SIP,0" Top="SIP,1,5"/>
                        </LayoutInput>
                        <Children>
							<me:YearTile Name="YearTile" Application="[Application]"  Size="[Size2]"  />
                          <!--<Repeater Source="[ThemeHelper.ShowThirdNewItem]" Name="ThirdItem" DiscardOffscreenVisuals="false" Margins="5,0,0,0" >
                            <Content>
                              
                            </Content>
                          </Repeater>-->
                        </Children>
                      </Panel>

                      <Panel Name="TheRest" >
                        <LayoutInput>
                          <AnchorLayoutInput Left="FIP,0" Top="FIP,1,2" Right="SIP,1"/>
                        </LayoutInput>
                        <Children><Scroller Orientation="Horizontal" Name="Scroller" FadeSize="-5" ScrollingData="[ScrollingData]" Visible="true" >
                            
                            <Children>
                              <Repeater Source="[ThemeHelper.ShowRemainingNewItems]" Name="RemainingItems" DiscardOffscreenVisuals="false" >
                                <Layout>
                                  <FlowLayout Orientation="Horizontal" AllowWrap="true" Spacing="4,4" />
                                </Layout>
                                <Content>
                                  <me:AddedItem Name="RestAdded" Application="[Application]" Item="[RepeatedItem!lib:Item]" Index="[RepeatedItemIndex]" Size="[Size]" />
									
                                </Content>
                                <Animations>
                                  <Animation Type="Move">
                                    <Keyframes>
                                      <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25" />
                                      <PositionKeyframe Time="0.35" RelativeTo="Final" />
                                    </Keyframes>
                                  </Animation>
                                </Animations>
                              </Repeater>
                            </Children>
                          </Scroller>
                        </Children>
                      </Panel>
                          
                    </Children>
                  </Panel>
                
              
            </Children>
          </Clip>
        </Children>
      </Panel>
    </Content>
  </UI>

  <UI Name="RecentlyAddedGridLayout">
    <Properties>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
      <a:Application Name="Application" Application="$Required"/>
      <Color Name="TitleColor" Color="color://is:XC_PopupMenuTitle" />
      <Font Name="Font" Font="font://is:XF_PopupMenuTitle"/>
		<Command Name="Click" Command="$Required"/>
		<cor:String Name="Label" cor:String="$Required" />
		<Size Name="Size" Size="300,196"/>
    </Properties>
    <Locals>
	  <Size Name="BigSize" Size="[ThemeHelper.GetBigImageSize]" />
		<Size Name="SmallSize" Size="[ThemeHelper.NormalImageSize]"/>
      <cor:Int32 Name="Startup" />
      <ScrollingHandler Name="ScrollingHandler"  HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" />
      <ScrollingData Name="ScrollingData" LockedPosition="0.17" />
      <FlowLayout Name="HorizontalFlowLayout" Orientation="Horizontal" AllowWrap="true" RepeatGap="50,0" Spacing="50,50" ItemAlignment="Center" />

	</Locals>
    <Rules>

		<Changed Source="[Click.Invoked]"  >
			<Conditions>
				<Equality Source="[Application.RecentItemOption]" ConditionOp="Equals" Value="added" />
			</Conditions>
			<Actions>
				<Set Target="[Application.RecentItemOption]" Value="watched" />
				<Invoke Target="[Folder.RecentItemsChanged]"  InvokePolicy="Synchronous"/>
				<Set Target="[RecentTitle.Label]" Value="[Label]" />
			</Actions>
		</Changed>

		<Changed Source="[Click.Invoked]" >
			<Conditions>
				<Equality Source="[Application.RecentItemOption]" ConditionOp="Equals" Value="watched" />
			</Conditions>
			<Actions>
				<Set Target="[Application.RecentItemOption]" Value="unwatched" />
				<Invoke Target="[Folder.RecentItemsChanged]"  InvokePolicy="Synchronous"/>
				<Set Target="[RecentTitle.Label]" Value="[Label]" />

			</Actions>
		</Changed>

		<Changed Source="[Click.Invoked]" >
			<Conditions>
				<Equality Source="[Application.RecentItemOption]" ConditionOp="Equals" Value="unwatched" />
			</Conditions>
			<Actions>
				<Set Target="[Application.RecentItemOption]" Value="added" />
				<Invoke Target="[Folder.RecentItemsChanged]"  InvokePolicy="Synchronous"/>
				<Set Target="[RecentTitle.Label]" Value="[Label]" />
			</Actions>
		</Changed>

		<!--<Changed Source="[Click.Invoked]" >
			<Actions>
				<Invoke Target="[Folder.RecentItemsChanged]"  InvokePolicy="Synchronous"/>
				<Set Target="[RALOptionsDesc.ChosenIndex]" Value="[RALOptions.ChosenIndex]" />
				<Set Target="[Application.RecentItemOption]" Value="[RALOptions.Chosen!cor:String]" />
				<Set Target="[RecentTitle.Label]" Value="[RALOptionsDesc.Chosen!cor:String]" />
			</Actions>
		</Changed>-->

		<Condition Source="[Folder.QuickListItems.Count]" ConditionOp="Equals" SourceValue="0">
			<Actions>
				<Set Target="[NoRecent.Visible]" Value="true" />
			</Actions>
		</Condition>
		
		
		<Binding Source="[Folder.QuickListItems]" Target="[RALItems.Source]" />
	</Rules>

    <Content>

      <Panel Layout="Anchor" >
		  <Layout>
			  <FlowLayout Orientation="Vertical" Spacing="5,5" StripAlignment="Near"/>
		  </Layout>
        <Children>

	    <hob:HomeOptionButton Name="RecentTitle" Label="[Label]" Command="[Click]" />
			
		<Clip FadeAmount="1" Name="Scroller1" Margins="0,50,0,0" >
			<Children>
				<Text Name="NoRecent" Content="No Recent Items" Color="color://is:XC_NoRALPopupItem" Font="font://is:XF_NoRALPopupItem" Visible="false" Margins="0,50,0,0" />
				<Repeater Name="RALItems" DiscardOffscreenVisuals="false" >
					<Layout>
						<GridLayout Orientation="Vertical" Columns="0" AllowWrap="true" Spacing="4,4" />
					</Layout>
					<Content>
						<me:AddedItem Name="AddedItem" Application="[Application]" Item="[RepeatedItem!lib:Item]" Index="[RepeatedItemIndex]" Size="[Size]" SizeSmall="[SmallSize]" />
					</Content>
				</Repeater>
			</Children>
          </Clip>
        </Children>
      </Panel>
    </Content>
  </UI>

  <UI Name="ResumeGridLayout">
    <Properties>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
      <a:Application Name="Application" Application="$Required"/>
      <Color Name="TitleColor" Color="color://is:XC_PopupMenuTitle" />
      <Font Name="Font" Font="font://is:XF_PopupMenuTitle"/>
    </Properties>
    <Locals>
      <cor:Int32 Name="Startup" />
	  <lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
      <ScrollingHandler Name="ScrollingHandler"  HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" />
      <ScrollingData Name="ScrollingData" LockedAlignment="0" LockedPosition="0" />
      <FlowLayout Name="HorizontalFlowLayout" Orientation="Horizontal" AllowWrap="true" RepeatGap="50,0" Spacing="5,5" ItemAlignment="Center" />
    </Locals>
    <Rules>


      <!-- Default Values-->
	  <Binding Target="[Repeater.Source]" Source="[ThemeHelper.GetResumeItems]" />
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]" />
      <Default Target="[ScrollingData.Repeater]" Value="[Repeater]" />

		<Rule>
			<Conditions>
				<Equality Source="[Application.NavigatingForward]" Value="true"/>
				<Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
			</Conditions>
			<Actions>
				<Set Target="[Repeater.Source]" Value="[ThemeHelper.GetResumeItems]" />
			</Actions>
		</Rule>
      <Condition Source="[ThemeHelper.ResumeSetCount]" ConditionOp="Equals" SourceValue="0" Target="[NoRecent.Visible]" Value="true" />

		<Rule>
			<Actions>
				<Set Target="[Repeater.Source]" Value="[ThemeHelper.GetResumeItems]" />
			</Actions>
		</Rule>
		
		<Changed Source="[Folder.SelectedChild]" >
			<Actions>
				<Set Target="[Repeater.Source]" Value="[ThemeHelper.GetResumeItems]" />
			</Actions>
		</Changed>
    </Rules>

    <Content>

      <Panel Layout="Anchor">
        <Children>
          
          <Clip FadeAmount="1" Name="Scroller1" Margins="0,0,0,0" >
            <Children>
				
              <Text Name="NoRecent" Content="No Resumable Items" Color="color://is:XC_NoRALPopupItem" Font="font://is:XF_NoRALPopupItem" Visible="false" Margins="0,50,0,0"  />
              <Scroller Orientation="Vertical" Margins="5,0,0,0" Name="Scroller" FadeSize="-5" ScrollingData="[ScrollingData]" Visible="true" MaximumSize="300,1000" >
                <Children>
                  <Repeater Name="Repeater" Source="[ThemeHelper.GetResumeItems]" >
                    <Layout>
                      <FlowLayout Orientation="Vertical" Spacing="5,5" AllowWrap="true" />
                    </Layout>
                    <Content>
                      <me:ResumeItem  Application="[Application]" Item="[RepeatedItem!lib:Item]" Index="[RepeatedItemIndex]" />
                    </Content>
                    <Animations>
                      <Animation Type="Move">
                        <Keyframes>
                          <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                          <PositionKeyframe Time="0.35" RelativeTo="Final"/>
                        </Keyframes>
                      </Animation>
                    </Animations>
                  </Repeater>
                </Children>
              </Scroller>
            </Children>
          </Clip>
        </Children>
      </Panel>
    </Content>
  </UI>
  
  <UI Name="RecommendedGridLayout">
    <Properties>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
      <a:Application Name="Application" Application="$Required"/>
      <Color Name="TitleColor" Color="color://is:XC_PopupMenuTitle" />
      <Font Name="Font" Font="font://is:XF_PopupMenuTitle"/>
	  <Command Name="Click" Command="$Required"/>
    </Properties>
    <Locals>
      <ScrollingHandler Name="ScrollingHandler"  HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" />
      <ScrollingData Name="ScrollingData" />
      <FlowLayout Name="HorizontalFlowLayout" Orientation="Horizontal" AllowWrap="true" RepeatGap="50,0" Spacing="50,50" ItemAlignment="Near" />
    </Locals>
    <Rules>

		<Changed Source="[Click.Invoked]" InitialEvaluate="true" >
			<Actions>
				<Set Target="[Repeater.Source]" Value="[ThemeHelper.GetRecommendedSet]" />
				<Set Target="[Why.Content]" Value="[ThemeHelper.RecommendedReason]" />
			</Actions>
		</Changed>

      <!-- Default Values-->
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]" />
      <Default Target="[ScrollingData.Repeater]" Value="[Repeater]" />
		<Default Target="[Repeater.Source]" Value="[ThemeHelper.GetRecommendedSet]" ConditionLogicalOp="Or" />

		<Changed Source="[Folder.SelectedChild]" >
			<Actions>
				<Set Target="[Repeater.Source]" Value="[ThemeHelper.GetRecommendedSet]" />
				<Set Target="[Why.Content]" Value="[ThemeHelper.RecommendedReason]" />
			</Actions>
		</Changed>
		
      <!-- RECENT ITEMS MODEL-->
      <Condition Source="[ThemeHelper.RecommendedSetCount]" ConditionOp="Equals" SourceValue="0" Target="[NoRecent.Visible]" Value="true" />
      <Binding Target="[Why.Content]" Source="[ThemeHelper.RecommendedReason]" />
    </Rules>

    <Content>

      <Panel Layout="VerticalFlow" Margins="20,-25,0,0" >
            <Children>

              <Panel Layout="Anchor">
                <Layout>
                  <FlowLayout Orientation="Vertical" />
                </Layout>
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0" Bottom="Parent,0"/>
                </LayoutInput>
                <Children>
					<Panel>
						<Children>
							<Text Name="Why" Content="[ThemeHelper.RecommendedReason]" Color="White" Font="font://is:XF_RALItemTitle" Margins="0,0,0,10"  />
						</Children>
					</Panel>
					<Panel>
						<Children>
							<Text Name="NoRecent" Content="No Recommendations" Color="color://is:XC_NoRALPopupItem" Font="font://is:XF_NoRALPopupItem" Visible="false" Margins="0,0,0,0"  />
						</Children>
					</Panel>
                </Children>
              </Panel>

              <Clip FadeAmount="1" Name="Scroller1" Margins="0,0,0,0">
                <Children>
                  
                  <Scroller Orientation="Horizontal" Margins="5,0,0,0" Name="Scroller" FadeSize="-5" ScrollingData="[ScrollingData]" Visible="true" MaximumSize="900,600" >
                    
                    <Children>
                        <Repeater Name="Repeater" Source="[ThemeHelper.GetRecommendedSet]" >
                          <Layout>
                            <FlowLayout Orientation="Vertical" Spacing="5,5" AllowWrap="true" />
                          </Layout>
                          <Content>
                            <me:AddedItem Application="[Application]" Item="[RepeatedItem!lib:Item]" Index="[RepeatedItemIndex]" />
                          </Content>
                          <Animations>
                            <Animation Type="Move">
                              <Keyframes>
                                <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                                <PositionKeyframe Time="0.35" RelativeTo="Final"/>
                              </Keyframes>
                            </Animation>
                          </Animations>
                        </Repeater>
                      </Children>
                    </Scroller>
                </Children>
              </Clip>
            </Children>
      </Panel>
    </Content>
  </UI>
  
  <UI Name="AcclaimedGridLayout">
    <Properties>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
      <a:Application Name="Application" Application="$Required"/>
      <Color Name="TitleColor" Color="color://is:XC_PopupMenuTitle" />
      <Font Name="Font" Font="font://is:XF_PopupMenuTitle"/>
	  <Command Name="Click" Command="$Required"/>
    </Properties>
    <Locals>
      <cor:Int32 Name="Startup" />
      <lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
      <ScrollingHandler Name="ScrollingHandler"  HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" />
      <ScrollingData Name="ScrollingData" />
      <FlowLayout Name="HorizontalFlowLayout" Orientation="Horizontal" AllowWrap="true" RepeatGap="50,0" Spacing="50,50" ItemAlignment="Near" />
    </Locals>
    <Rules>

		<Changed Source="[Click.Invoked]" >
			<Actions>
				<Set Target="[Repeater.Source]" Value="[ThemeHelper.ShuffleAcclaimedMovies]" />
			</Actions>
		</Changed>

      <!-- Default Values-->
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]" />
      <Default Target="[ScrollingData.Repeater]" Value="[Repeater]" />

		<Rule>
			<Conditions>
				<Equality Source="[Application.NavigatingForward]" Value="true"/>
				<Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
			</Conditions>
			<Actions>
				<Set Target="[Repeater.Source]" Value="[ThemeHelper.GetAcclaimedMovies]" InvokePolicy="AsynchronousLowPri" />
			</Actions>
		</Rule>
		<Changed Source="[Folder.SelectedChild]" >
			<Actions>
				<Set Target="[Repeater.Source]" Value="[ThemeHelper.GetAcclaimedMovies]" InvokePolicy="AsynchronousLowPri"/>
			</Actions>
		</Changed>

      <!-- RECENT ITEMS MODEL-->
      <Binding Target="[Repeater.Source]" Source="[ThemeHelper.GetAcclaimedMovies]"  />
      <Condition Source="[ThemeHelper.AcclaimedMoviesSetCount]" ConditionOp="Equals" SourceValue="0" Target="[NoRecent.Visible]" Value="true" />
    </Rules>

    <Content>

      <Panel Layout="VerticalFlow" Margins="0,0,0,0" >
            <Children>

              <Panel Layout="Anchor">
                <Layout>
                  <FlowLayout Orientation="Vertical" />
                </Layout>
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0" Bottom="Parent,0"/>
                </LayoutInput>
                <Children>
                  <Panel>
                    <Children>
                      <Text Name="NoRecent" Content="No Critically Acclaimed Items" Color="color://is:XC_NoRALPopupItem" Font="font://is:XF_NoRALPopupItem" Visible="false" Margins="0,50,0,0"  />
                    </Children>
                  </Panel>
                  
                </Children>
              </Panel>

              <Clip FadeAmount="1" Name="Scroller1" Margins="0,20,0,0">
                <Children>
                  
                  <Scroller Orientation="Horizontal" Margins="5,0,0,0" Name="Scroller" FadeSize="-5" ScrollingData="[ScrollingData]" Visible="true" MaximumSize="900,600" >
                    
                    <Children>
                        <Repeater Name="Repeater" >
                          <Layout>
                            <FlowLayout Orientation="Vertical" Spacing="5,5" AllowWrap="true" />
                          </Layout>
                          <Content>
                            <me:AddedItem Application="[Application]" Item="[RepeatedItem!lib:Item]" Index="[RepeatedItemIndex]" />
                          </Content>
                          <Animations>
                            <Animation Type="Move">
                              <Keyframes>
                                <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                                <PositionKeyframe Time="0.35" RelativeTo="Final"/>
                              </Keyframes>
                            </Animation>
                          </Animations>
                        </Repeater>
                      </Children>
                    </Scroller>
                </Children>
              </Clip>
            </Children>
      </Panel>
    </Content>
  </UI>

	<UI Name="NextUpGridLayout">
		<Properties>
			<lib:FolderModel Name="Folder" FolderModel="$Required"/>
			<ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
			<a:Application Name="Application" Application="$Required"/>
			<Color Name="TitleColor" Color="color://is:XC_PopupMenuTitle" />
			<Font Name="Font" Font="font://is:XF_PopupMenuTitle"/>
			<Size Name="Size" Size="300,168"/>
		</Properties>
		<Locals>
			<cor:Int32 Name="Startup" />
			<lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
			<ScrollingHandler Name="ScrollingHandler"  HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" />
			<ScrollingData Name="ScrollingData" />
			<FlowLayout Name="HorizontalFlowLayout" Orientation="Horizontal" AllowWrap="true" RepeatGap="50,0" Spacing="50,50" ItemAlignment="Center" />
		</Locals>
		<Rules>


			<!-- Default Values-->
			<Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]" />
			<Default Target="[ScrollingData.Repeater]" Value="[Repeater]" />

			<Rule>
				<Conditions>
					<Equality Source="[Application.NavigatingForward]" Value="true"/>
					<Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
				</Conditions>
				<Actions>
					<Set Target="[Repeater.Source]" Value="[ThemeHelper.GetNextUpEpisodes]" />
				</Actions>
			</Rule>
			<Changed Source="[Folder.SelectedChild]" >
				<Actions>
					<Set Target="[Repeater.Source]" Value="[ThemeHelper.GetNextUpEpisodes]" />
				</Actions>
			</Changed>

			<!-- RECENT ITEMS MODEL-->
			<Binding Target="[Repeater.Source]" Source="[ThemeHelper.GetNextUpEpisodes]"  />
			<Condition Source="[ThemeHelper.NextUpSetCount]" ConditionOp="Equals" SourceValue="0" Target="[NoRecent.Visible]" Value="true" />
		</Rules>

		<Content>

			<Panel Layout="VerticalFlow" Margins="0,0,0,0" >
				<Children>

					<Panel Layout="Anchor">
						<Layout>
							<FlowLayout Orientation="Vertical" />
						</Layout>
						<LayoutInput>
							<AnchorLayoutInput Left="Parent,0" Bottom="Parent,0"/>
						</LayoutInput>
						<Children>
							<Panel>
								<Children>
									<Text Name="NoRecent" Content="No Next Episodes to Watch" Color="color://is:XC_NoRALPopupItem" Font="font://is:XF_NoRALPopupItem" Visible="false" Margins="0,50,0,0"  />
								</Children>
							</Panel>

						</Children>
					</Panel>

					<Clip FadeAmount="1" Name="Scroller1" Margins="0,20,0,0">
						<Children>

							<Scroller Orientation="Horizontal" Margins="5,0,0,0" Name="Scroller" FadeSize="-5" ScrollingData="[ScrollingData]" Visible="true" MaximumSize="900,600" >

								<Children>
									<Repeater Name="Repeater" >
										<Layout>
											<FlowLayout  Orientation="Vertical" Spacing="5,5" AllowWrap="true" />
										</Layout>
										<Content>
											<me:AddedItem Application="[Application]" Item="[RepeatedItem!lib:Item]" Index="[RepeatedItemIndex]" />
										</Content>
										<Animations>
											<Animation Type="Move">
												<Keyframes>
													<PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
													<PositionKeyframe Time="0.35" RelativeTo="Final"/>
												</Keyframes>
											</Animation>
										</Animations>
									</Repeater>
								</Children>
							</Scroller>
						</Children>
					</Clip>
				</Children>
			</Panel>
		</Content>
	</UI>

	<UI Name="UpcomingGridLayout">
		<Properties>
			<lib:FolderModel Name="Folder" FolderModel="$Required"/>
			<ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
			<a:Application Name="Application" Application="$Required"/>
			<Color Name="TitleColor" Color="color://is:XC_PopupMenuTitle" />
			<Font Name="Font" Font="font://is:XF_PopupMenuTitle"/>

		</Properties>
		<Locals>
			<cor:Int32 Name="Startup" />
			<lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
			<ScrollingHandler Name="ScrollingHandler"  HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" />
			<ScrollingData Name="ScrollingData" />
			<FlowLayout Name="HorizontalFlowLayout" Orientation="Horizontal" AllowWrap="true" RepeatGap="50,0" Spacing="50,50" ItemAlignment="Center" />
		</Locals>
		<Rules>


			<!-- Default Values-->
			<Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]" />
			<Default Target="[ScrollingData.Repeater]" Value="[Repeater]" />

			<Rule>
				<Conditions>
					<Equality Source="[Application.NavigatingForward]" Value="true"/>
					<Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
				</Conditions>
				<Actions>
					<Set Target="[Repeater.Source]" Value="[ThemeHelper.GetUpcomingTV]" />
				</Actions>
			</Rule>
			
			<Changed Source="[Folder.SelectedChild]" >
				<Actions>
					<Set Target="[Repeater.Source]" Value="[ThemeHelper.GetUpcomingTV]" />
				</Actions>
			</Changed>

			<!-- RECENT ITEMS MODEL-->
			<Binding Target="[Repeater.Source]" Source="[ThemeHelper.GetUpcomingTV]"  />
			<Condition Source="[ThemeHelper.UpcomingTVSetCount]" ConditionOp="Equals" SourceValue="0" Target="[NoRecent.Visible]" Value="true" />
		</Rules>

		<Content>

			<Panel Layout="VerticalFlow" Margins="0,0,0,0" >
				<Children>

					<Panel Layout="Anchor">
						<Layout>
							<FlowLayout Orientation="Vertical" />
						</Layout>
						<LayoutInput>
							<AnchorLayoutInput Left="Parent,0" Bottom="Parent,0"/>
						</LayoutInput>
						<Children>
							<Panel>
								<Children>
									<Text Name="NoRecent" Content="No Upcoming Episodes" Color="color://is:XC_NoRALPopupItem" Font="font://is:XF_NoRALPopupItem" Visible="false" Margins="0,50,0,0"  />
								</Children>
							</Panel>

						</Children>
					</Panel>

					<Clip FadeAmount="1" Name="Scroller1" Margins="0,20,0,0">
						<Children>

							<Scroller Orientation="Horizontal" Margins="5,0,0,0" Name="Scroller" FadeSize="-5" ScrollingData="[ScrollingData]" Visible="true" MaximumSize="900,600" >

								<Children>
									<Repeater Name="Repeater" >
										<Layout>
											<FlowLayout Orientation="Vertical" Spacing="5,5" AllowWrap="true" />
										</Layout>
										<Content>
											<me:AddedItem Application="[Application]" Item="[RepeatedItem!lib:Item]" Index="[RepeatedItemIndex]" />
										</Content>
										<Animations>
											<Animation Type="Move">
												<Keyframes>
													<PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
													<PositionKeyframe Time="0.35" RelativeTo="Final"/>
												</Keyframes>
											</Animation>
										</Animations>
									</Repeater>
								</Children>
							</Scroller>
						</Children>
					</Clip>
				</Children>
			</Panel>
		</Content>
	</UI>


	<UI Name="AddedItem">
    <Properties>
      <a:Application Name="Application" Application="$Required" />
      <ih:IridiumHelper Name="ThemeHelper" />
      <lib:Item Name="Item" Item="$Required" />
      <Index Name="Index" Index="$Required"/>
      <Color Name="TitleColor" Color="color://is:XC_PopupMenuItem" />
      <Color Name="FocusColor" Color="color://is:XC_PopupMenuTitle" />
      <Font Name="Font" Font="font://is:SmallRALTitleText"/>
      <Size Name="Size" Size="300,168"/>
		<Size Name="SizeSmall" Size="100,100"/>
    </Properties>

    <Locals>
      <ClickHandler Name="Clicker"/>
      <Command Name="PlayCommand"/>
    </Locals>


    <Rules>
      <!--Binding Source="[Item.PhysicalParent.PreferredImage]" Target="[ItemPoster.Content]" ConditionLogicalOp="And">
          <Conditions>
            <IsValid Source="[Item.PhysicalParent]"/>
            <Equality Source="[ThemeHelper.Config.UseSeasonPosterInEHS]" ConditionOp="Equals" Value="true" />
            <Equality Source="[Item.ItemTypeString]" ConditionOp="Equals" Value="Episode" />
          </Conditions>
        </Binding-->

		


		<Changed Source="[PlayCommand.Invoked]">
        <Actions>
          <Invoke Target="[Application.Play]" item="[Item]"/>
        </Actions>
      </Changed>

      <Binding Target="[Title.Content]"     Source="[Item.Name]"/>
		<Binding Target="[SeriesTitle.Content]"     Source="[Item.PhysicalParent.PhysicalParent.Name]" >
			<Conditions>
				<Equality Source="[Item.ItemTypeString]" ConditionOp="Equals" Value="Episode" />
			</Conditions>
		</Binding>
      
      <Rule>
        <Conditions>
          <Equality Source="[Item.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[Divider.Visible]" Value="false" />
        </Actions>
      </Rule>
      
      <Binding Target="[SeasonNo.Content]"  Source="[Item.SeasonNumber]" >
        <Conditions>
          <Equality Source="[Item.ItemTypeString]" ConditionOp="Equals" Value="Episode" />
        </Conditions>
      </Binding>
		
		<Condition Source="[Item.ItemTypeString]" ConditionOp="Equals" SourceValue="Episode" Target="[SeriesInfo.Visible]" Value="true"/>
		<Condition Source="[Item.ItemTypeString]" ConditionOp="NotEquals" SourceValue="Episode" Target="[SeriesInfo.Visible]" Value="false"/>
		
      <!--PREFER THUMBS then BACKDROPS and fall back to POSTERS-->
      <!--USE THUMB IMAGE-->
      <Binding Source="[Item.ThumbnailImage]" Target="[ItemThumb.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
        </Conditions>
      </Binding>

      <!--USE BD IMAGE-->
      <Binding Source="[Item.BackdropImage]" Target="[ItemThumb.Content]"  >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
      </Binding>

      <!--<Binding Source="[Item.LogoImage]" Target="[Logo.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
      </Binding>-->

      <Binding Source="[Item.ThumbnailImage]" Target="[ItemThumb.Content]"  >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="false"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
        </Conditions>
      </Binding>

      <!--SHOW ONLY POSTERS ON MUSIC ITEMS-->
      <Binding Source="[Item.PrimaryImage]" Target="[ItemThumb.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>

      <!--FALL BACK TO POSTERS IF ABOVE LOGIC IS NOT MET-->
      <Binding Target="[ItemThumb.Content]" Source="[Item.PrimaryImage]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="false"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
      </Binding>

      <Changed Source="[Input.KeyFocus]" > 
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Application.CurrentItem]" Value="[Item]" />
          <Set Target="[ItemThumb.ColorFilter]" Value="White" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[TitleBackFill.Visible]" Value="true" />
          <Set Target="[SeasonNo.Visible]" Value="true" />
          <Set Target="[Divider.Visible]" Value="true" />
			<Set Target="[SeriesTitle.Visible]" Value="true" />
			<Set Target="[STitleBackFill.Visible]" Value="true" />
			<!--<Set Target="[Logo.Scale]" Value="0.65,0.65,0.65" />          
          <Set Target="[Summary.Visible]" Value="true" />
          <Set Target="[PlayButtonImage.Visible]" Value="true" />
          <Set Target="[SeasonNo.Visible]" Value="true" />
          <Set Target="[ProdYear.Visible]" Value="true" />-->
          
        </Actions>
      </Changed>

		
      <Changed Source="[Clicker.Invoked]">
        <Actions>
          <!--PlaySound Sound="sound://sounds:Miniselect" /-->
          <Invoke Target="[Application.Navigate]" item="[Item]"/>
        </Actions>
      </Changed>
    </Rules>

    <Content>
      
      <Panel Layout="Anchor" Name="Bg" MinimumSize="[Size]" MaximumSize="[Size]"  >
        <Children>

          <Panel Name="SeriesInfo" Visible="false">
					<LayoutInput>
						<AnchorLayoutInput Left="ItemThumb,0,1" Top="ItemThumb,0" Right="ItemThumb,1,-1" Bottom="ItemThumb,0,30"/>
					</LayoutInput>
					<Children>
						<Panel Layout="HorizontalFlow">
							<Children>
								<ft:FancyText AvailableSpaceInt="300" Name="SeriesTitle" Visible="false" HasFocus="false" Font="[Font]" Color="240,240,240" AllowMarquee="true" />
							</Children>
						</Panel>
						<Graphic Name="STitleBackFill" ColorFilter="0,155,255" Content="image://vi:SelectedTitleBG" Layout="Fill" Visible="false" Alpha="1" />
					</Children>
				</Panel>
              
              <Panel Name="EpisodeInfo">
                <LayoutInput>
                  <AnchorLayoutInput Left="ItemThumb,0,1" Bottom="ItemThumb,1" Right="ItemThumb,1,-1" Top="ItemThumb,1,-30"/>
                </LayoutInput>
                <Children>
                  <Panel Layout="HorizontalFlow">
                    <Children>
                      <Text Name="SeasonNo" Content="[Item.SeasonNumber]" Visible="false" Font="[Font]" Color="240,240,240"  />
                      <Text Name="Divider" Content=" | " Visible="false" Font="[Font]" Color="240,240,240" />
                      <Text Name="Title" Content="[Item.Name]" Visible="false" Font="[Font]" Color="240,240,240" />
                    </Children>
                  </Panel>
                <Graphic Name="TitleBackFill" ColorFilter="0,155,255" Content="image://vi:SelectedTitleBG" Layout="Fill" Visible="false" Alpha="1" />
                </Children>
              </Panel>
              
              <Graphic Name="ItemThumb" ColorFilter="100,100,100" MaintainAspectRatio="false" >
				  <LayoutInput>
					  <FormLayoutInput Vertical="Near" />
				  </LayoutInput>
                
              </Graphic>
          </Children>
          </Panel>
    </Content>
  </UI>

	
  <UI Name="ResumeItem">
    <Properties>
      <a:Application Name="Application" Application="$Required" />
      <ih:IridiumHelper Name="ThemeHelper" />
      <lib:Item Name="Item" Item="$Required" />
      <Index Name="Index" Index="$Required"/>
      <Color Name="TitleColor" Color="color://is:XC_PopupMenuItem" />
      <Color Name="FocusColor" Color="color://is:XC_PopupMenuTitle" />
      <Font Name="Font" Font="font://is:XF_PopupMenuTitle"/>
	<Size Name="Size" Size="300,168"/>
    </Properties>

    <Locals>
      <ClickHandler Name="Clicker"/>
      <Command Name="PlayCommand"/>
    </Locals>


    <Rules>
      
		<Binding Source="[Item]" Target="[ThemeHelper.TempItem]" />
		
      <Changed Source="[PlayCommand.Invoked]">
        <Actions>
          <Invoke Target="[Application.Play]" item="[Item]"/>
        </Actions>
      </Changed>
      
      <Binding Source="[Item.LastPlayedString]" Target="[LastPlayedValue.Content]" />
	  <Binding Source="[ThemeHelper.PercentWatchedString]" Target="[ProgressValue.Content]" />
	  <Binding Source="[ThemeHelper.TimeRemaining]" Target="[RemainingValue.Content]" />
	  <!--<Binding Source="[Item.CurrentTimeRemainingString]" Target="[RemainingValue.Content]" />-->
      
      <Condition Source="[Item.LastPlayedString]" ConditionOp="Equals" SourceValue="null" Target="[LastPlayedValue.Content]" Value="Never" />

      <!--Title-->
      
      <Binding Target="[Title.Content]"     Source="[Item.Name]"/>
      <Binding Target="[SeasonNo.Content]"  Source="[Item.SeasonNumber]" />
      <!--<Binding Target="[Summary.Text]"     Source="[Item.Overview]"/>-->

      <!--PREFER THUMBS then BACKDROPS and fall back to POSTERS-->
      <!--USE THUMB IMAGE-->
      <Binding Source="[Item.ThumbnailImage]" Target="[ItemThumb.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
        </Conditions>
      </Binding>

      <!--USE BD IMAGE-->
      <Binding Source="[Item.BackdropImage]" Target="[ItemThumb.Content]"  >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
      </Binding>

      <!--<Binding Source="[Item.LogoImage]" Target="[Logo.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
      </Binding>-->

      <Binding Source="[Item.ThumbnailImage]" Target="[ItemThumb.Content]"  >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="false"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
        </Conditions>
      </Binding>

      <!--SHOW ONLY POSTERS ON MUSIC ITEMS-->
      <Binding Source="[Item.PrimaryImage]" Target="[ItemThumb.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>

      <!--FALL BACK TO POSTERS IF ABOVE LOGIC IS NOT MET-->
      <Binding Target="[ItemThumb.Content]" Source="[Item.PrimaryImage]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="false"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
      </Binding>

      <Changed Source="[Input.KeyFocus]" > 
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Application.CurrentItem]" Value="[Item]" />
          <Set Target="[ItemThumb.ColorFilter]" Value="White" />
          <!--<Set Target="[Logo.Scale]" Value="0.65,0.65,0.65" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[Summary.Visible]" Value="true" />
          <Set Target="[PlayButtonImage.Visible]" Value="true" />
          <Set Target="[SeasonNo.Visible]" Value="true" />
          <Set Target="[ProdYear.Visible]" Value="true" />-->
          
        </Actions>
      </Changed>

      <Changed Source="[Clicker.Invoked]">
        <Actions>
          <!--PlaySound Sound="sound://sounds:Miniselect" /-->
          <Invoke Target="[Application.Navigate]" item="[Item]"/>
        </Actions>
      </Changed>
    
      
    </Rules>

    <Content>
      
      <Panel Layout="Anchor" Name="Bg" Navigation="RememberFocus">
        <Children>

          <Panel Name="ItemInfo" Layout="Anchor" >
            <Children>
              
              <Graphic Name="ItemThumb" MaximumSize="250,0" Scale="1,1,1" ColorFilter="100,100,100" MaintainAspectRatio="true" >
                
                <Animations>
                  <Animation Loop="0" CenterPointPercent="0.5,0.5,1.0" Type="Scale">
                    <Keyframes>
                      <ScaleKeyframe Time="0.00" RelativeTo="Current" Interpolation="Log" />
                      <ScaleKeyframe Time="0.4" RelativeTo="Final"/>
                    </Keyframes>
                  </Animation>
                </Animations>
              </Graphic>
              
              <Panel Layout="HorizontalFlow" Name="TitlePanel" Margins="0,0,0,0">
                <LayoutInput>
                  <AnchorLayoutInput Left="ItemThumb,0" Top="ItemThumb,1,5" Right="ItemThumb,1" />
                </LayoutInput>
                <Children>
                  <Text Name="SeasonNo" Color="color://is:XC_RALItemTitle" Font="font://is:XF_RALItemTitle" Visible="false" Margins="0,0,5,0" />
                  <Text Name="Title" Color="color://is:RALResumeItemTitleColor" Font="font://is:RALResumeItemTitleFont" Visible="true" Margins="0,0,0,10" WordWrap="true" />
                </Children>
              </Panel>
              
              <Panel Layout="Anchor" Name="SubInfo">
                <Layout>
                  <FlowLayout Orientation="Vertical" />
                </Layout>
                <LayoutInput>
                  <AnchorLayoutInput Left="TitlePanel,0" Top="TitlePanel,1,10" Right="TitlePanel,1" />
                </LayoutInput>
                <Children>
                  <Panel Layout="HorizontalFlow" Margins="0,0,0,10">
                    <Children>
                      <Text Name="LastPlayedLabel" Content="Last Played:  " Color="color://is:RALItemLabelColor" Font="font://is:RALItemLabelFont" />
                      <Text Name="LastPlayedValue"  Color="color://is:RALItemValueColor" Font="font://is:RALItemValueFont" Margins="0,-2,0,0" />
                     </Children>
                  </Panel>
                  <Panel Layout="HorizontalFlow" Margins="0,0,0,10">
                    <Children>
                  <Text Name="ProgressLabel" Content="Progress:  " Color="color://is:RALItemLabelColor" Font="font://is:RALItemLabelFont" />
                  <Text Name="ProgressValue" Color="color://is:RALItemValueColor" Font="font://is:RALItemValueFont" Margins="0,-2,0,0" />
                </Children>
                  </Panel>
                  <Panel Layout="HorizontalFlow" Margins="0,0,0,10">
                    <Children>
                      <Text Name="RemainingLabel" Content="Time Left:  " Color="color://is:RALItemLabelColor" Font="font://is:RALItemLabelFont" />
                      <Text Name="RemainingValue" Color="color://is:RALItemValueColor" Font="font://is:RALItemValueFont" Margins="0,-2,0,0" />
                    </Children>
                  </Panel>
                </Children>
              </Panel>
              
            <Graphic Name="PanelBG" Layout="Anchor" Content="image://vi:PanelBG" Alpha="1" ColorFilter="White" Navigation="None" Visible="true" >
              <LayoutInput>
                <AnchorLayoutInput Left="ItemThumb,0,-10" Top="ItemThumb,0,-10" Right="ItemThumb,1,10" Bottom="SubInfo,1,20"/>
              </LayoutInput>
            </Graphic>
              
            </Children>
          </Panel>
          </Children>
       </Panel>
    </Content>
  </UI>
	
	<UI Name="GenreTile">
    <Properties>
      <a:Application Name="Application" Application="$Required" />
      <ih:IridiumHelper Name="ThemeHelper" />
	  <lib:Item Name="Item" Item="$Required" />
      <Color Name="TitleColor" Color="color://is:XC_PopupMenuItem" />
      <Color Name="FocusColor" Color="color://is:XC_PopupMenuTitle" />
      <Font Name="Font" Font="font://is:XF_PopupMenuTitle"/>
	  <Size Name="Size" Size="300,168"/>
	  
    </Properties>

    <Locals>
      <ClickHandler Name="Clicker"/>
      <Command Name="PlayCommand"/>
    </Locals>


    <Rules>
      
      
      <!--PREFER THUMBS then BACKDROPS and fall back to POSTERS-->
      <!--USE THUMB IMAGE
      <Binding Source="[Item.ThumbnailImage]" Target="[ItemThumb.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
        </Conditions>
      </Binding>-->

      <!--USE BD IMAGE
      <Binding Source="[Item.BackdropImage]" Target="[ItemThumb.Content]"  >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
      </Binding>

      <Binding Source="[Item.ThumbnailImage]" Target="[ItemThumb.Content]"  >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="false"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
        </Conditions>
      </Binding>-->

      <!--SHOW ONLY POSTERS ON MUSIC ITEMS
      <Binding Source="[Item.PrimaryImage]" Target="[ItemThumb.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>-->

      <!--FALL BACK TO POSTERS IF ABOVE LOGIC IS NOT MET
      <Binding Target="[ItemThumb.Content]" Source="[Item.PrimaryImage]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="false"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
      </Binding>-->

      <Changed Source="[Input.KeyFocus]" > 
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Application.CurrentItem]" Value="[Item]" />
          <Set Target="[ItemThumb.ColorFilter]" Value="White" />
          <!--<Set Target="[Logo.Scale]" Value="0.65,0.65,0.65" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[Summary.Visible]" Value="true" />
          <Set Target="[PlayButtonImage.Visible]" Value="true" />
          <Set Target="[SeasonNo.Visible]" Value="true" />
          <Set Target="[ProdYear.Visible]" Value="true" />-->
          
        </Actions>
      </Changed>

      <Changed Source="[Clicker.Invoked]" >
			  <Actions>
				  <PlaySound Sound="sound://isounds:Miniselect" />
				  <Invoke Target="[ThemeHelper.GetGenres]" />
			  </Actions>
		  </Changed>
    
      
    </Rules>

    <Content>
      
      <Panel Layout="Anchor" Name="Bg" Navigation="RememberFocus">
        <Children>

          <Panel Name="ItemInfo" Layout="Anchor" >
            <Children>
              
				<gm:GenreMove Name="GenreEffect" >
					<LayoutInput>
						<AnchorLayoutInput Left="ItemThumb,0,10" Top="ItemThumb,0,50" Right="ItemThumb,1,-10" Bottom="ItemThumb,1,-30"/>
					</LayoutInput>
				</gm:GenreMove>
				<Panel MaximumSize="300,30" Name="EpisodeInfo">
                <LayoutInput>
                  <AnchorLayoutInput Left="ItemThumb,0,1" Bottom="ItemThumb,1" Right="ItemThumb,1,-1"/>
                </LayoutInput>
                <Children>
                  <Panel Layout="HorizontalFlow">
                    <Children>
						<ft:FancyText AvailableSpaceInt="300" Name="Title" Content="Genres" Visible="true" HasFocus="false" Font="[Font]" Color="240,240,240" AllowMarquee="true" />
                    </Children>
                  </Panel>
                <Graphic Name="TitleBackFill" ColorFilter="0,155,255" Content="image://vi:SelectedTitleBG" Layout="Fill" Visible="true" Alpha="1" />
                </Children>
              </Panel>
				
              <Graphic Name="ItemThumb" Content="image://vi:HomeBG" MaximumSize="250,164" Scale="1,1,1" ColorFilter="100,100,100" MaintainAspectRatio="false" >
                
                <Animations>
                  <Animation Loop="0" CenterPointPercent="0.5,0.5,1.0" Type="Scale">
                    <Keyframes>
                      <ScaleKeyframe Time="0.00" RelativeTo="Current" Interpolation="Log" />
                      <ScaleKeyframe Time="0.4" RelativeTo="Final"/>
                    </Keyframes>
                  </Animation>
                </Animations>
              </Graphic>
              
              
            </Children>
          </Panel>
          
          
        
      
          </Children>
       </Panel>
    </Content>
  </UI>
	
	   <UI Name="YearTile">
    <Properties>
      <a:Application Name="Application" Application="$Required" />
      <ih:IridiumHelper Name="ThemeHelper" />
	  <lib:FolderModel Name="Folder" />
      <Color Name="TitleColor" Color="color://is:XC_PopupMenuItem" />
      <Color Name="FocusColor" Color="color://is:XC_PopupMenuTitle" />
      <Font Name="Font" Font="font://is:XF_PopupMenuTitle"/>
	  <Size Name="Size" Size="300,168"/>
    </Properties>

    <Locals>
      <ClickHandler Name="Clicker"/>
      <Command Name="PlayCommand"/>
    </Locals>


    <Rules>
      
      
      <!--PREFER THUMBS then BACKDROPS and fall back to POSTERS-->
      <!--USE THUMB IMAGE
      <Binding Source="[Item.ThumbnailImage]" Target="[ItemThumb.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
        </Conditions>
      </Binding>-->

      <!--USE BD IMAGE
      <Binding Source="[Item.BackdropImage]" Target="[ItemThumb.Content]"  >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
      </Binding>

      <Binding Source="[Item.ThumbnailImage]" Target="[ItemThumb.Content]"  >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="false"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
        </Conditions>
      </Binding>-->

      <!--SHOW ONLY POSTERS ON MUSIC ITEMS
      <Binding Source="[Item.PrimaryImage]" Target="[ItemThumb.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>-->

      <!--FALL BACK TO POSTERS IF ABOVE LOGIC IS NOT MET
      <Binding Target="[ItemThumb.Content]" Source="[Item.PrimaryImage]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="false"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
      </Binding>-->

      <Changed Source="[Input.KeyFocus]" > 
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Application.CurrentItem]" Value="[Folder.SelectedChild]" />
          <Set Target="[ItemThumb.ColorFilter]" Value="White" />
          <!--<Set Target="[Logo.Scale]" Value="0.65,0.65,0.65" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[Summary.Visible]" Value="true" />
          <Set Target="[PlayButtonImage.Visible]" Value="true" />
          <Set Target="[SeasonNo.Visible]" Value="true" />
          <Set Target="[ProdYear.Visible]" Value="true" />-->
          
        </Actions>
      </Changed>

      <Changed Source="[Clicker.Invoked]">
        <Actions>
          <!--PlaySound Sound="sound://sounds:Miniselect" /-->
          <Invoke Target="[Application.Navigate]" item="[Folder.SelectedChild]"/>
        </Actions>
      </Changed>
    
      
    </Rules>

    <Content>
      
      <Panel Layout="Anchor" Name="Bg" Navigation="RememberFocus">
        <Children>

          <Panel Name="ItemInfo" Layout="Anchor" >
            <Children>
              
				<ym:YearMove Name="YearEffect" >
					<LayoutInput>
						<AnchorLayoutInput Left="ItemThumb,0,10" Top="ItemThumb,0,50" Right="ItemThumb,1,-10" Bottom="ItemThumb,1,-30"/>
					</LayoutInput>
				</ym:YearMove>
				
				<Panel MaximumSize="300,30" Name="EpisodeInfo">
                <LayoutInput>
                  <AnchorLayoutInput Left="ItemThumb,0,1" Bottom="ItemThumb,1" Right="ItemThumb,1,-1"/>
                </LayoutInput>
                <Children>
                  <Panel Layout="HorizontalFlow">
                    <Children>
						<ft:FancyText AvailableSpaceInt="300" Name="Title" Content="Years" Visible="true" HasFocus="false" Font="[Font]" Color="240,240,240" AllowMarquee="true" />
                    </Children>
                  </Panel>
                <Graphic Name="TitleBackFill" ColorFilter="0,155,255" Content="image://vi:SelectedTitleBG" Layout="Fill" Visible="true" Alpha="1" />
                </Children>
              </Panel>
				
              <Graphic Name="ItemThumb" Content="image://vi:HomeBG" MaximumSize="250,164" Scale="1,1,1" ColorFilter="100,100,100" MaintainAspectRatio="false" >
                
                <Animations>
                  <Animation Loop="0" CenterPointPercent="0.5,0.5,1.0" Type="Scale">
                    <Keyframes>
                      <ScaleKeyframe Time="0.00" RelativeTo="Current" Interpolation="Log" />
                      <ScaleKeyframe Time="0.4" RelativeTo="Final"/>
                    </Keyframes>
                  </Animation>
                </Animations>
              </Graphic>
			
				
			 
            </Children>
          </Panel>
          </Children>
       </Panel>
    </Content>
  </UI>

  <UI Name="FullInfoItem">
    <Properties>
      <a:Application Name="Application" Application="$Required" />
      <ih:IridiumHelper Name="ThemeHelper" />
      <lib:Item Name="Item" Item="$Required" />
      <Index Name="Index" Index="$Required"/>
      <Color Name="TitleColor" Color="color://is:XC_PopupMenuItem" />
      <Color Name="FocusColor" Color="color://is:XC_PopupMenuTitle" />
      <Font Name="Font" Font="font://is:XF_PopupMenuTitle"/>
    </Properties>

    <Locals>
      <ClickHandler Name="Clicker"/>
      <Command Name="PlayCommand"/>
    </Locals>


    <Rules>
      <!--Binding Source="[Item.PhysicalParent.PreferredImage]" Target="[ItemPoster.Content]" ConditionLogicalOp="And">
          <Conditions>
            <IsValid Source="[Item.PhysicalParent]"/>
            <Equality Source="[ThemeHelper.Config.UseSeasonPosterInEHS]" ConditionOp="Equals" Value="true" />
            <Equality Source="[Item.ItemTypeString]" ConditionOp="Equals" Value="Episode" />
          </Conditions>
        </Binding-->

      <Changed Source="[PlayCommand.Invoked]">
        <Actions>
          <Invoke Target="[Application.Play]" item="[Item]"/>
        </Actions>
      </Changed>

      <Binding Source="[Item.LastPlayedString]" Target="[LastPlayedValue.Content]" />

      <Condition Source="[Item.LastPlayedString]" ConditionOp="Equals" SourceValue="" Target="[LastPlayedValue.Content]" Value="Never" />

      <!--Title-->
      <Binding Target="[Title.Content]"     Source="[Item.Name]"/>
      <Binding Target="[SeasonNo.Content]"  Source="[Item.SeasonNumber]" />
      <!--<Binding Target="[Summary.Text]"     Source="[Item.Overview]"/>-->

      <!--ITEM INFORMATION-->
      <!--Use Production Year
      <Binding Target="[ProdYear.Content]"     Source="[Item.ProductionYearString]">
        <Conditions>
          <Equality Source="[Item.ItemTypeString]" ConditionOp="NotEquals" Value="Episode"/>
        </Conditions>
      </Binding>-->
      <!--Use First Air
      <Binding Target="[ProdYear.Content]"     Source="[Item.FirstAired]">
        <Conditions>
          <Equality Source="[Item.ItemTypeString]" ConditionOp="Equals" Value="Episode"/>
        </Conditions>
      </Binding>-->

      <!--PREFER THUMBS then BACKDROPS and fall back to POSTERS-->
      <!--USE THUMB IMAGE-->
      <Binding Source="[Item.ThumbnailImage]" Target="[ItemThumb.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
        </Conditions>
      </Binding>

      <!--USE BD IMAGE-->
      <Binding Source="[Item.BackdropImage]" Target="[ItemThumb.Content]"  >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
      </Binding>

      <!--<Binding Source="[Item.LogoImage]" Target="[Logo.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
      </Binding>-->

      <Binding Source="[Item.ThumbnailImage]" Target="[ItemThumb.Content]"  >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="false"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
        </Conditions>
      </Binding>

      <!--SHOW ONLY POSTERS ON MUSIC ITEMS-->
      <Binding Source="[Item.PrimaryImage]" Target="[ItemThumb.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>

      <!--FALL BACK TO POSTERS IF ABOVE LOGIC IS NOT MET-->
      <Binding Target="[ItemThumb.Content]" Source="[Item.PrimaryImage]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp ="Equals" Value="false"/>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
      </Binding>

      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Application.CurrentItem]" Value="[Item]" />
          <Set Target="[ItemThumb.Scale]" Value="1.1,1.1,1.1" />
          <Set Target="[ItemThumb.ColorFilter]" Value="White" />
          <!--<Set Target="[Logo.Scale]" Value="0.65,0.65,0.65" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[Summary.Visible]" Value="true" />
          <Set Target="[PlayButtonImage.Visible]" Value="true" />
          <Set Target="[SeasonNo.Visible]" Value="true" />
          <Set Target="[ProdYear.Visible]" Value="true" />-->

        </Actions>
      </Changed>

      <Changed Source="[Clicker.Invoked]">
        <Actions>
          <!--PlaySound Sound="sound://sounds:Miniselect" /-->
          <Invoke Target="[Application.Navigate]" item="[Item]"/>
        </Actions>
      </Changed>
    </Rules>

    <Content>

      <Panel Layout="Anchor" Name="Bg" Navigation="RememberFocus">
        <Children>

          <Panel Name="ItemInfo" Layout="Anchor" >
            <Layout>
              <FlowLayout Orientation="Vertical"/>
            </Layout>
            <Children>

              <Graphic Name="ItemThumb" MaximumSize="250,0" Scale="1,1,1" ColorFilter="100,100,100" MaintainAspectRatio="true" >
                <Animations>
                  <Animation Loop="0" CenterPointPercent="0.5,0.5,1.0" Type="Scale">
                    <Keyframes>
                      <ScaleKeyframe Time="0.00" RelativeTo="Current" Interpolation="Log" />
                      <ScaleKeyframe Time="0.4" RelativeTo="Final"/>
                    </Keyframes>
                  </Animation>
                </Animations>
              </Graphic>

              <Panel Layout="HorizontalFlow" Name="TitlePanel" Margins="0,10,0,0">
                <Children>
                  <Text Name="SeasonNo" Color="color://is:XC_RALItemTitle" Font="font://is:XF_RALItemTitle" Visible="false" Margins="0,0,5,0" />
                  <Text Name="Title" Color="color://is:RALResumeItemTitleColor" Font="font://is:RALResumeItemTitleFont" Visible="true" Margins="0,0,0,10" />
                </Children>
              </Panel>

              <Panel Layout="Anchor" Name="SubInfo">
                <Layout>
                  <FlowLayout Orientation="Vertical" />
                </Layout>
                <Children>
                  <Panel Layout="HorizontalFlow" Margins="0,0,0,15">
                    <Children>
                      <Text Name="LastPlayedLabel" Content="Last Played:  " Color="color://is:RALItemLabelColor" Font="font://is:RALItemLabelFont" />
                      <Text Name="LastPlayedValue" Color="color://is:RALItemValueColor" Font="font://is:RALItemValueFont" Margins="0,-2,0,0" />
                    </Children>
                  </Panel>
                  <Panel Layout="HorizontalFlow" Margins="0,0,0,15">
                    <Children>
                      <Text Name="ProgressLabel" Content="Progress:  " Color="color://is:RALItemLabelColor" Font="font://is:RALItemLabelFont" />
                      <Text Name="ProgressValue" Content="27%  " Color="color://is:RALItemValueColor" Font="font://is:RALItemValueFont" Margins="0,-2,0,0" />
                    </Children>
                  </Panel>
                  <Panel Layout="HorizontalFlow" Margins="0,0,0,15">
                    <Children>
                      <Text Name="RemainingLabel" Content="Time Left:  " Color="color://is:RALItemLabelColor" Font="font://is:RALItemLabelFont" />
                      <Text Name="RemainingValue" Content="102 mins  " Color="color://is:RALItemValueColor" Font="font://is:RALItemValueFont" Margins="0,-2,0,0" />
                    </Children>
                  </Panel>
                </Children>
              </Panel>

            </Children>
          </Panel>

          <Graphic Name="PanelBG" Content="image://vi:PanelBG" Alpha="1" ColorFilter="White" Navigation="None" Visible="true" >
            <LayoutInput>
              <AnchorLayoutInput Left="ItemInfo,0,-20" Top="ItemInfo,0,-10" Right="ItemInfo,0,20" Bottom="ItemInfo,0,10"/>
            </LayoutInput>
          </Graphic>


        </Children>
      </Panel>
    </Content>
  </UI>

  
</Mcml>