<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
      xmlns:addin="assembly://Microsoft.MediaCenter/Microsoft.MediaCenter.Hosting"
      xmlns:cor="assembly://MsCorLib/System"
	    xmlns:a="assembly://MediaBrowser/MediaBrowser"
      xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
	    xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
      xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
      xmlns:ib="resx://Iridium/Iridium.Resources/ImageButton"
      xmlns:s="file://Styles_DoNotEdit.mcml"
	    xmlns:f="file://Fonts_DoNotEdit.mcml"
      xmlns:is="file://Iridium_Styles.mcml"
      xmlns:vi="resx://Iridium/Iridium.Resources/Images"
      xmlns:anim="resx://Iridium/Iridium.Resources/Animations"
	    xmlns:vsb="resx://Iridium/Iridium.Resources/SimpleButton"
	    xmlns:sr="resx://Iridium/Iridium.Resources/StarRating"
	    xmlns:st="resx://Iridium/Iridium.Resources/AutoScrollableText"
	    xmlns:bd="resx://Iridium/Iridium.Resources/Backdrop"
      xmlns:gl="resx://MediaBrowser/MediaBrowser.Resources/GenreList"
      xmlns:mi="resx://MediaBrowser/MediaBrowser.Resources/MediaInfoPanel"
      xmlns:pda="resx://Iridium/Iridium.Resources/PageDetailArea"
      xmlns:vmpaa="resx://Iridium/Iridium.Resources/MPAARating"
      xmlns:vs="resx://Iridium/Iridium.Resources/Studio"     
      xmlns:fip="resx://Iridium/Iridium.Resources/FullInfoPanel"
      xmlns:xh="assembly://Iridium/Iridium"
      xmlns:pci="resx://Iridium/Iridium.Resources/PCIndicatorButton"
      xmlns:dcm="resx://Iridium/Iridium.Resources/DefaultContextMenu"
      xmlns:dob="resx://Iridium/Iridium.Resources/DetailsOptionButton"
      xmlns:actp="resx://Iridium/Iridium.Resources/ActorPopup"
      xmlns:me="Me"
    >

  <!-- Movie Details Page -->
  <UI Name="IridiumMovieView">
    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:Item Name="Item" Item="$Required"/>
      <FormLayoutInput Name="FullScreen" Bottom="Parent,1" Left="Parent,0" Right="Parent,1" Top="Parent,0"/>
      <Command Name="NextItemCommand" />
      <Command Name="PreviousItemCommand" />
     
    </Properties>

    <Locals>
      <a:Config Name="Config" Config="[Application.Config]"/>
      <addin:AddInHost Name="AddInHost" />
      <xh:IridiumHelper Name="ThemeHelper" CurrentItem="[Item]" />
      <cor:String Name="MediaPath" String="" />
      <lib:FolderModel Name="Folder"/>
      <cor:Int32 Name="Startup" />
      <Timer Name="MediaPlaying" Interval="300" AutoRepeat="true"/>

      <Command Name="Resume" />
      <Command Name="QuickPlay" />
      <Command Name="Play" />
      <Command Name="Refresh" />
      <Command Name="PlayTrailer" />
      <Command Name="ShowActors" />
      <Command Name="ShowReviews" />
      <Command Name="Delete" />
      <Command Name="ShowInfo" />
      <Command Name="ShowChapters" />
      <Command Name="ShowSpecials" />
      <Command Name="ShowSimilar" />

      <!--CONFIG PANEL COMMANDS-->
      <Command Name="NPVFocus" />
      <Command Name="NPVFocusLost" />
      <Command Name="GoToNowPlaying" />

      <Command Name="HomeFocus" />
      <Command Name="HomeFocusLost" />
      <Command Name="HomeButtonCommand" />

      <Command Name="UserFocus" />
      <Command Name="UserFocusLost" />
      <Command Name="CloseUserMenuCommand" />
      <Command Name="SwitchUserCommand" />
      <!--END CONFIG PANEL COMMANDS-->

      <ShortcutHandler Name="ChannelDown" Shortcut="ChannelDown" Handle="true" HandlerStage="Bubbled" Command="[PreviousItemCommand]"/>
      <ShortcutHandler Name="ChannelUp" Shortcut="ChannelUp" Handle="true" HandlerStage="Bubbled" Command="[NextItemCommand]"/>
      
      <TransformByAttributeAnimation Name="ShowSlideRight" Attribute="Width" Magnitude="1.0" Source="animation://anim:ShowSlideRight"/>
      <TransformByAttributeAnimation Name="ShowSlideLeft" Attribute="Width" Magnitude="1.0" Source="animation://anim:ShowSlideLeft"/>
      <TransformByAttributeAnimation Name="HideSlideRight" Attribute="Width" Magnitude="1.0" Source="animation://anim:HideSlideRight"/>
      <TransformByAttributeAnimation Name="HideSlideLeft" Attribute="Width" Magnitude="1.0" Source="animation://anim:HideSlideLeft"/>

      <BooleanChoice Name="OptionsScrollerHasFocus" Value="false"/>
      <KeyHandler Key="Up" Name="UpNav" Handle="false" HandlerStage="Bubbled"/>
      <Command Name="NavigateIntoCommand"/>
    </Locals>
    
    <Rules>

      <!--<Binding Source="[Item.IsPlayable]" Target="[NextPanel.Visible]" />
      <Binding Source="[Item.IsPlayable]" Target="[PrevPanel.Visible]" />
      <Binding Source="[Item.IsPlayable]" Target="[NextBG.Visible]" />
      <Binding Source="[Item.IsPlayable]" Target="[PrevBG.Visible]" />-->
      
      <Changed Source="[Item]" InitialEvaluate="true">
        <Actions>
          <Set Target="[ThemeHelper.CurrentItem]" Value="[Item]"/>
        </Actions>
      </Changed>

      <Changed Source="[Resume.Invoked]">
        <Actions>
          <Invoke Target="[Item.Resume]"/>
        </Actions>
      </Changed>

      <Changed Source="[Play.Invoked]">
        <Actions>
          <Invoke Target="[Application.Play]" item="[Item]"/>
        </Actions>
      </Changed>

      <Changed Source="[QuickPlay.Invoked]">
        <Actions>
          <Invoke Target="[Application.Play]" item="[Item]" resume="false" queue="false" shuffle="false" playIntros="false" />
        </Actions>
      </Changed>

      <Changed Source="[Refresh.Invoked]">
        <Actions>
          <Invoke Target="[Item.RefreshMetadata]"/>
        </Actions>
      </Changed>

      <Changed Source="[PlayTrailer.Invoked]">
        <Actions>
          <Invoke Target="[Item.PlayTrailers]"/>
        </Actions>
      </Changed>

      <Changed Source="[Delete.Invoked]">
        <Actions>
          <Invoke Target="[Application.DeleteMediaItem]">
            <Item>
              <lib:Item Item="[Item]"/>
            </Item>
          </Invoke>
        </Actions>
      </Changed>

      <!--<Changed Source="[UpNav.Invoked]">
        <Conditions>
          <Equality Source="[OptionsScrollerHasFocus.Value]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Invoke Target="[NextItemButton.NavigateInto]" />
        </Actions>
      </Changed>-->

      <Changed Source="[NextItemCommand.Invoked]">
        <Conditions>
          <Equality Source="[Item.PhysicalParent.Children.Count]" ConditionOp="GreaterThan" Value="1"/>
        </Conditions>
        <Actions>
          <Invoke Target="[MainPanel.AttachAnimation]" animation="[ShowSlideRight]" ExclusiveApply="false"/>
          <Invoke Target="[MainPanel.AttachAnimation]" animation="[HideSlideRight]" ExclusiveApply="false"/>
          <Set Target="[Item]" Value="[Item.PhysicalParent.NextChild]"/>
          <Set Target="[InfoPanel.Item]" Value="[Item]"/>
          <Set Target="[OptionsScroller.Item]" Value="[Item]"/>
          <Invoke Target="[MainPanel.ForceContentChange]"/>
        </Actions>
      </Changed>
      <Changed Source="[PreviousItemCommand.Invoked]">
        <Conditions>
          <Equality Source="[Item.PhysicalParent.Children.Count]" ConditionOp="GreaterThan" Value="1"/>
        </Conditions>
        <Actions>
          <Invoke Target="[MainPanel.AttachAnimation]" animation="[ShowSlideLeft]" ExclusiveApply="false"/>
          <Invoke Target="[MainPanel.AttachAnimation]" animation="[HideSlideLeft]" ExclusiveApply="false"/>
          <Set Target="[Item]" Value="[Item.PhysicalParent.PrevChild]" />
          <Set Target="[InfoPanel.Item]" Value="[Item]"/>
          <Set Target="[OptionsScroller.Item]" Value="[Item]"/>
          <Invoke Target="[MainPanel.ForceContentChange]"/>
        </Actions>
      </Changed>
      
      <Changed Source="[GoToNowPlaying.Invoked]">
        <Actions>
            <Invoke Target="[Application.PlaybackController.GoToFullScreen]"/> 
        </Actions>
      </Changed>
      
      <Changed Source="[ShowInfo.Invoked]">
        <Actions>
          <Set Target="[InfoPanel.Tab]" Value="Info"/>
        </Actions>
      </Changed>

      <Changed Source="[ShowActors.Invoked]">
        <Actions>
          <Set Target="[InfoPanel.Tab]" Value="Actors"/>
        </Actions>
      </Changed>

      <Changed Source="[ShowReviews.Invoked]">
        <Actions>
          <Set Target="[InfoPanel.Tab]" Value="Reviews"/>
        </Actions>
      </Changed>

      <Changed Source="[ShowChapters.Invoked]">
        <Actions>
          <Set Target="[InfoPanel.Tab]" Value="Chapters"/>
        </Actions>
      </Changed>

      <Changed Source="[ShowSpecials.Invoked]">
        <Actions>
          <Set Target="[InfoPanel.Tab]" Value="Specials"/>
        </Actions>
      </Changed>

      <Changed Source="[ShowSimilar.Invoked]">
        <Actions>
          <Set Target="[InfoPanel.Tab]" Value="Similar"/>
        </Actions>
      </Changed>
      
      <!--Conditions for displaying the Now Playing Icon-->
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[Application.PlaybackController.IsStopped]" ConditionOp="Equals" Value="true"></Equality>
        </Conditions>
        <Actions>
          <Set Target="[NowPlayKey.Visible]" Value="false"/>
        </Actions>
      </Rule>

      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[Application.PlaybackController.IsPlaying]" ConditionOp="Equals" Value="true"></Equality>
        </Conditions>
        <Actions>
          <Set Target="[NowPlayKey.Visible]" Value="true"/>
        </Actions>
      </Rule>

      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[Application.PlaybackController.IsPaused]" ConditionOp="Equals" Value="true"></Equality>
        </Conditions>
        <Actions>
          <Set Target="[NowPlayKey.Visible]" Value="true"/>
        </Actions>
      </Rule>

      <Rule>
        <Actions>
          <Invoke Target="[MediaPlaying.Start]" />
        </Actions>
      </Rule>

      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Modified Source="[GoToNowPlaying.Invoked]" />
        </Conditions>
        <Actions>
          <Invoke Target="[Application.PlaybackController.GoToFullScreen]"/>
        </Actions>
      </Rule>
      
      
      <!--CONFIG PANEL ICONS FOCUS/FOCUSLOST ACTIONS-->
      <Changed Source="[NPVFocus.Invoked]">
        <Actions>
          <Set Target="[NowPlayKey.Alpha]" Value="1" />
          <Set Target="[NowPlayKey.Scale]" Value="1.1,1.1,1.1" />
        </Actions>
      </Changed>

      <Changed Source="[NPVFocusLost.Invoked]">
        <Actions>
          <Set Target="[NowPlayKey.Alpha]" Value="0.5" />
          <Set Target="[NowPlayKey.Scale]" Value="1,1,1" />
        </Actions>
      </Changed>
    </Rules>


    <Content>
      <Panel Layout="Form"  >
        <Children>

          <!--Options buttons, Search, Settings and NPV button-->
          <Panel Name="ButtonPanel" Visible="true" Layout="Form" FocusOrder="400" >
            <Layout>
              <FlowLayout Orientation="Horizontal"/>
            </Layout>
            <LayoutInput>
              <FormLayoutInput Top="Parent,0,10" Right="Parent,1,-10"/>
            </LayoutInput>
            <Children>
              <Panel Name="NowPlayKey" Visible="false" FocusOrder="602" MouseInteractive="true">
                <Children>
                  <vsb:SimpleButton OnFocus="[NPVFocus]" Size="50,50" OnLooseFocus="[NPVFocusLost]" Name="NowPlayButton" Application="[Application]" FocusImage="image://vi:IconNowPlay" ImageNoFocus="image://vi:IconNowPlaySmall" Command="[GoToNowPlaying]" />
                </Children>
              </Panel>
              <Panel Name="PCBtn" Margins="0,0,0,0" Visible="true" FocusOrder="607">
                <Children>
                  <pci:PCIndicatorButton Application="[Application]" Size="50,50"/>
                </Children>
              </Panel>
            </Children>
          </Panel>
          
          <!--<Panel Name="NextPanel" FocusOrder="10">
            <LayoutInput>
              <FormLayoutInput Top="Parent,1,-390" Right="Parent,1,-25" />
            </LayoutInput>
            <Children>
              <dob:OptionButton Name="NextItemButton" Label="[Application.LocalStrings.#NextBtnStr!cor:String]" Command="[NextItemCommand]" Visible="true" />
            </Children>
          </Panel>
            
          <Panel Name="PrevPanel" FocusOrder="20" MouseInteractive="true" >
            <LayoutInput>
              <FormLayoutInput Top="Parent,1,-390" Left="Parent,0,25" />
            </LayoutInput>
            <Children>
              <dob:OptionButton Name="PreviousItemButton" Label="[Application.LocalStrings.#PrevBtnStr!cor:String]" Command="[PreviousItemCommand]" Visible="true" />
            </Children>
          </Panel>-->
          
          <me:OptionsScroller FocusOrder="0" 
                              Name="OptionsScroller" 
                              InFocus="[OptionsScrollerHasFocus]" 
                              Application="[Application]" 
                              Item="[Item]" 
                              Refresh="[Refresh]" 
                              QuickPlay="[QuickPlay]" 
                              Resume="[Resume]" 
                              Delete="[Delete]" 
                              ShowInfo="[ShowInfo]" 
                              PlayTrailer="[PlayTrailer]" 
                              ShowReviews="[ShowReviews]" 
                              ShowChapters="[ShowChapters]" 
                              ShowSpecials="[ShowSpecials]" 
                              Play="[Play]" 
                              ShowActors="[ShowActors]"
                              ShowSimilar="[ShowSimilar]">
            <LayoutInput>
              <FormLayoutInput Left="Parent,0,35" Top="Parent,0,20" Right="Parent,1" Horizontal="Fill" />
            </LayoutInput>
          </me:OptionsScroller>

          <Graphic Name="RootMenuBG" ColorFilter="0,155,255" Alpha="1" Navigation="None" Content="image://vi:MainVFBG" >
            <LayoutInput>
              <AnchorLayoutInput Left="Parent,0" Top="Parent,0,5" Right="Parent,1" Bottom="Parent,0,70"/>
            </LayoutInput>
          </Graphic>

          <Graphic Name="ChildBG" Content="image://vi:TestBanner" ColorFilter="color://is:XC_RALPanelFilterColor" Alpha="global://is:RALPanelAlpha">
            <LayoutInput>
              <AnchorLayoutInput Left="Parent,0" Top="Parent,0,5" Right="Parent,1" Bottom="Parent,0,70"/>
            </LayoutInput>
          </Graphic>

          <Panel Name="MainPanel"  Layout="Form" >
            <LayoutInput>
              <FormLayoutInput Bottom="Parent,0.9" Top="Parent,0.5" Left="Parent,0" Right="Parent,1"/>
            </LayoutInput>
            <Children>
              <fip:InfoPanelSelector Name="InfoPanel" Application="[Application]" Item="[Item]" ThemeHelper="[ThemeHelper]" />
            </Children>
          </Panel>

          <!--<Graphic Name="PrevBG" Navigation="None" Content="image://vi:PrevBG" MinimumSize="0,50" MaximumSize="0,80" ColorFilter="color://is:RootHorizontalBGoverlayColor" >
              <LayoutInput>
                <AnchorLayoutInput Left="Parent,0,-500" Top="Parent,1,-430" Right="Parent,0,200" Bottom="Parent,1,-350"/>
              </LayoutInput>
            </Graphic>

          <Graphic Name="NextBG" Navigation="None" Content="image://vi:NextBG" MinimumSize="0,50" MaximumSize="0,80" ColorFilter="color://is:RootHorizontalBGoverlayColor" >
            <LayoutInput>
              <AnchorLayoutInput Left="Parent,1,-200" Top="Parent,1,-430" Right="Parent,1,500" Bottom="Parent,1,-350"/>
            </LayoutInput>
          </Graphic>-->

		  <bd:NowPlayingBackdrop Name="NowPlayingBackdrop" Application="[Application]" />
          <Graphic Name="Overlay" Layout="Fill" Content="image://vi:BackgroundOverlay" Alpha="1"/>
          <bd:Backdrop4 Name="Backdrop"  Application="[Application]" Image="[Item.BackdropImage]" Item="[Item]"/>
         
        </Children>
      </Panel>
    </Content>
  </UI>
  
   <UI Name="OptionsScroller" >
    <Properties>
      <Command Name="Resume" Command="$Required"/>
      <Command Name="QuickPlay" Command="$Required" />
      <Command Name="Play" Command="$Required"/>
      <Command Name="PlayTrailer" Command="$Required"/>
      <Command Name="ShowActors" Command="$Required"/>
      <Command Name="ShowSpecials" Command="$Required"/>
      <Command Name="ShowReviews" Command="$Required"/>
      <Command Name="ShowChapters" Command="$Required" />
      <Command Name="Delete" Command="$Required"/>
      <Command Name="ShowInfo" Command="$Required"/>
      <Command Name="Refresh" Command="$Required"/>
      <Command Name="ShowSimilar" Command="$Required"/>
      <a:Application Name="Application" Application="$Required"/>
      <lib:Item Name="Item" Item="$Required"/>
      <xh:IridiumHelper Name="ThemeHelper" />

      <BooleanChoice Name="InFocus" BooleanChoice="$Required"/>
    </Properties>

    <Locals>
      <ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="ScrollingHandler"/>
      <ScrollingData Name="ScrollingData" LockedAlignment="0.05" LockedPosition="0.05" />
    </Locals>
    <Rules>
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]"/>

      <Binding Source="[Input.DeepKeyFocus]"  Target="[InFocus.Value]"/>
      
      
        <Binding Source="[Item.CanResume]" Target="[ResumeButton.Visible]" />
        <Binding Source="[Item.ContainsTrailers]" Target="[TrailerButton.Visible]" />

        <Rule>
            <Conditions>
                <Equality Source="[Item.Actors.Count]" ConditionOp="GreaterThan" Value="0" />
            </Conditions>
            <Actions>
                <Set Target="[CastButton.Visible]" Value="true" />
            </Actions>
        </Rule>

        <Rule>
          <Conditions>
            <Equality Source="[Item.Chapters.Count]" ConditionOp="GreaterThan" Value="0" />
          </Conditions>
          <Actions>
            <Set Target="[ChapterButton.Visible]" Value="true" />
          </Actions>
        </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[Item.ItemTypeString]" ConditionOp="Equals" Value="GameItem" />
        </Conditions>
        <Actions>
          <Set Target="[ChapterButton.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[Item.SpecialFeatures.Count]" ConditionOp="GreaterThan" Value="0" />
        </Conditions>
        <Actions>
          <Set Target="[SpecialsButton.Visible]" Value="true" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[Item.ItemTypeString]" ConditionOp="Equals" Value="GameItem" />
        </Conditions>
        <Actions>
          <Set Target="[SpecialsButton.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Application.Config.Advanced_EnableDelete]" ConditionOp="Equals" Value="true" />
          <Equality Source="[Application.Config.EnableAdvancedCmds]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[DeleteButton.Visible]" Value="true" />
        </Actions>
      </Rule>
      
      <Rule>
        <Conditions>
          <Equality Source="[Application.Config.Advanced_EnableDelete]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[DeleteButton.Visible]" Value="false"/>
          <Set Target="[RefreshButton.Margins]" Value="0,0,10,0"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[Application.Config.Advanced_EnableDelete]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[DeleteButton.Visible]" Value="true"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[Item.CanResume]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[ResumeButton.Visible]" Value="false"/>
        </Actions>
      </Rule>
      
      <Rule>
        <Conditions >
          <Equality Source="[Item.ContainsTrailers]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[TrailerButton.Visible]" Value="false"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions >
          <Equality Source="[Item.HasSpecialFeatures]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[SpecialsButton.Visible]" Value="true"/>
        </Actions>
      </Rule>
      
      <Rule>
        <Conditions >
          <Equality Source="[Item.HasSpecialFeatures]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[SpecialsButton.Visible]" Value="false"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions >
          <Equality Source="[Item.ItemTypeString]" ConditionOp="Equals" Value="GameItem" />
        </Conditions>
        <Actions>
          <Set Target="[QuickPlayButton.Visible]" Value="false"/>
        </Actions>
      </Rule>
      
      <Rule>
        <Conditions >
          <Equality Source="[Item.ItemTypeString]" ConditionOp="Equals" Value="GameItem" />
        </Conditions>
        <Actions>
          <Set Target="[CastButton.Visible]" Value="false"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions >
          <Equality Source="[Item.CriticRating]" ConditionOp="Equals" Value="0" />
        </Conditions>
        <Actions>
          <Set Target="[ReviewsButton.Visible]" Value="false"/>
        </Actions>
      </Rule>
      
    </Rules>


    <Content>
      <Scroller Name="OptionsScroller" Navigation="RememberFocus, ContainHorizontal" Orientation="Horizontal" ScrollingData="[ScrollingData]" FadeSize="50">
        <Children>
          <Panel>
            <Layout>
              <FlowLayout Orientation="Horizontal" ItemAlignment="Near" Repeat="Never" Spacing="50,50" />
            </Layout>
              <Children>
                <me:OptionItem Click="[Resume]"           Description="Resume"   Name="ResumeButton" />
                <!--<me:OptionItem Click="[Play]"             Description="Play"     Name="PlayButton" Visible="False"/>  -->
                <me:OptionItem Click="[QuickPlay]"        Description="QuickPlay" Name="QuickPlayButton" />
                <me:OptionItem Click="[PlayTrailer]"      Description="Trailer"  Name="TrailerButton" />
                <me:OptionItem Click="[ShowInfo]"         Description="Overview" Name="OverviewButton"/>
                <me:OptionItem Click="[ShowActors]"       Description="Cast"     Name="CastButton"/>
                <me:OptionItem Click="[ShowChapters]"     Description="Scenes" Name="ChapterButton"/>
                <me:OptionItem Click="[ShowSpecials]"     Description="Extras" Name="SpecialsButton"/>
                <me:OptionItem Click="[ShowReviews]"      Description="Reviews"  Name="ReviewsButton"/>
                <me:OptionItem Click="[ShowSimilar]"      Description="Similar"   Name="SimilarButton" />
                <me:OptionItem Click="[Refresh]"          Description="Refresh"  Name="RefreshButton" />
                <me:OptionItem Click="[Delete]"           Description="Delete"   Name="DeleteButton" />
                
              </Children>
            <Animations>
                      <Animation Type="Move">
                        <Keyframes>
                          <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                          <PositionKeyframe Time="0.65" RelativeTo="Final"/>
                        </Keyframes>
                  </Animation>
                    </Animations>
          </Panel>
        </Children>  
      </Scroller>
    </Content>
  </UI>

  <UI Name="OptionItem" >
    <Properties>
      <cor:String Name="Description" String="$Required"></cor:String>
      <Command Name="Click" Command="$Required"/>
    </Properties>
    
    <Locals>
      <Font Name="OptionSelected" Font="font://is:DetailSelOptionFont" />
      <Font Name="OptionNotSelected" Font="font://is:DetailOptionFont" />
      <ClickHandler Name="Clicker"/>
    </Locals>
    
    <Rules>
      <Changed Source="[Clicker.Invoked]" >
        <Actions>
          <Invoke Target="[Click.Invoke]"></Invoke>
        </Actions>
      </Changed>

      <Default Target="[Input.KeyInteractive]" Value="true"></Default>

      <Condition Source="[Input.KeyFocus]" SourceValue="true" Target="[Label.Color]" Value="color://is:DetailSelOptionColor">
        <Actions>
          <Set Target="[Label.Font]" Value="[OptionSelected]"></Set>
          <Set Target="[TextGlow.Visible]" Value="true" />
        </Actions>
      </Condition>
    </Rules>
    <Content>
      <Panel>
        <Children>
          <Text Name="Label" Content="[Description]" Font="[OptionNotSelected]" Color="color://is:DetailOptionColor"  Padding="0,-14,0,0" >
            <Children>
              <Graphic Name="TextGlow" ColorFilter="White" MaintainAspectRatio="true" Content="image://vi:MenuTextGlow" Alpha="0.8" Visible="false" SizingPolicy="SizeToContent"/>
            </Children>
          </Text>
        </Children>
      </Panel>
      
    </Content>
  </UI>
</Mcml>
