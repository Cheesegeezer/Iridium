<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
    xmlns:cor="assembly://MSCorLib/System"
    xmlns:a="assembly://MediaBrowser/MediaBrowser"
    xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
    xmlns:ib="resx://Iridium/Iridium.Resources/ItemButton"
    xmlns:is="file://Iridium_Styles.mcml"
    xmlns:s="file://Styles_DoNotEdit.mcml"
	  xmlns:f="file://Fonts_DoNotEdit.mcml"
    xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
    xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
    xmlns:xi="resx://Iridium/Iridium.Resources/Images"
	  xmlns:bd="resx://Iridium/Iridium.Resources/Backdrop"
    xmlns:mpaa="resx://Iridium/Iridium.Resources/MPAARating"
    xmlns:mip="resx://MediaBrowser/MediaBrowser.Resources/MediaInfoPanel"
    xmlns:sr="resx://Iridium/Iridium.Resources/StarRating"
    xmlns:lv="resx://Iridium/Iridium.Resources/LabelValue"
    xmlns:st="resx://Iridium/Iridium.Resources/AutoScrollableText"
    xmlns:dip="resx://Iridium/Iridium.Resources/DetailsInfo"
    xmlns:anim="resx://Iridium/Iridium.Resources/Animations"
    xmlns:ih="assembly://Iridium/Iridium"
    xmlns:me="me" >

  <UI Name="IridiumLayoutDetails">
    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required"/>
    </Properties>

    <Locals>
      <lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
      <Timer Name="InfoTimer" AutoRepeat="false" Interval="400" Enabled="false"/>
      <BooleanChoice Name="HasFocus" Value="false" />
    </Locals>

    <Rules>
      <!-- Set Folder Config Context-->
      <!-- IMPORTANT: There are timing issues using Folder.ActualThumbSize when the folder's display prefs haven't been loaded
                            yet.  So call LoadDisplayPrefs early and synchronously to ensure that all is initialized properly. 
      <Rule>
        <Actions>
          <Invoke Target="[ThemeHelper.GetFolderPrefsId]" folder="[Folder.PhysicalParent]" ResultTarget="[ThemeHelper.Config.ParentFolderId]" InvokePolicy="Synchronous" ExclusiveApply="false" />
          <Invoke Target="[ThemeHelper.GetFolderPrefsId]" folder="[Folder]" ResultTarget="[ThemeHelper.Config.FolderId]" InvokePolicy="Synchronous" ExclusiveApply="false" />
          <Invoke Target="[ThemeHelper.LoadDisplayPrefs]" folder="[Folder]" InvokePolicy="Synchronous" />
        </Actions>
      </Rule>
      <Binding Source="[Folder]" Target="[ThemeHelper.CurrentParent]" /> -->

      <Binding Target="[ThemeHelper.CurrentItem]" Source="[SelectedItem]" />
      <Binding Target="[Application.CurrentItem]" Source="[SelectedItem]" />

      <!-- Folder Pref Backdrop -->
      <Binding Source="[Folder.SelectedChild.BackdropImage]" Target="[Backdrop.Image]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdrop]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>
      <Binding Source="[Folder.SelectedChild]" Target="[Backdrop.Item]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdrop]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>

      <!-- Backdrop Overlay-->
      <Binding Target="[Overlay.Visible]"   Source="[ThemeHelper.Config.FolderShowBackdropOverlay]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdropOverlay]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>

      <!--Force focus to scroller-->
      <Changed Source="[InfoTimer.Tick]" ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Input.DeepKeyFocus]" ConditionOp="Equals" Value="false" />
          <Equality Source="[ThemeHelper.IsMenuOpen]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Invoke Target="[ListItems.NavigateInto]"></Invoke>
        </Actions>
      </Changed>

      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[HasFocus.Value]" Value="true"/>
        </Actions>
      </Changed>
      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[HasFocus.Value]" Value="false"/>
        </Actions>
      </Changed>

      <!--ITEM COUNTER-->
      <Binding Source="[Folder.SelectedChildIndex.ToString]" Target="[List_Counter.Content]" >
        <Transformer>
          <MathTransformer Add="1"/>
        </Transformer>
      </Binding>

      <Binding Source="[Folder.Children.Count]" Target="[List_Total.Content]" >
        <Transformer>
          <FormatTransformer Format="| {0}" />
        </Transformer>
      </Binding>

      <Binding Source="[ThemeHelper.CurrentItem]" Target="[MediaInfoPanel.Item]" />
      <Binding Target="[Summary.Text]" Source="[Folder.SelectedChild.Overview]"></Binding>
      <Binding Source="[Folder.SelectedChild.ImdbRating]" Target="[StarRating.Value]"></Binding>
      <Binding Source="[Folder.SelectedChild.RunningTimeString]" Target="[SideInfo.Value]"></Binding>
      <Binding Source="[Folder.SelectedChild.OfficialRating]" Target="[mpaa.Value]"></Binding>

      <Default Value="Runs " Target="[SideInfo.Label]"></Default>

      <Binding Source="[ThemeHelper.EndTime]" Target="[SideInfo1.Value]"></Binding>
      <Default Value=" Ends " Target="[SideInfo1.Label]"></Default>

      <!--LOGO'S LOGIC-->
      <Binding Target="[Title.Content]"       Source="[Folder.SelectedChild.Name]"/>
      <Binding Target="[LogoImage.Content]" Source="[Folder.SelectedChild.LogoImage]"/>

      <Rule>
        <Conditions>
          <Equality Source="[Folder.SelectedChild.HasLogoImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season"/>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode"/>
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
        </Actions>
      </Rule>
      <Default Target="[LogoImage.Visible]" Value="false"/>
      <Default Target="[Title.Visible]" Value="true"/>
    </Rules>
    <Content>

      <Panel Layout="Form" >
        <Children>

          <Panel Name="CounterPanel">
            <LayoutInput>
              <FormLayoutInput Top="Parent,1,-43" Bottom="Parent,1,0" Right="Parent,1,-25"/>
            </LayoutInput>
            <Children>
              <Panel Name="CounterPosition" Layout="HorizontalFlow">
                <Children>
                  <Text Name="List_Counter" Content="0" Color="color://is:counterColor" Font="font://is:counterFont" />
                  <Text Name="List_Total" Content="0" Color="color://is:totalCounterColor" Font="font://is:totalCounterFont"/>
                </Children>
              </Panel>
            </Children>
          </Panel>

          <Panel Name="ListPanel">
            <LayoutInput>
              <FormLayoutInput Left="Parent,0" Top="Parent,0,80" Right="Parent,1" Bottom="Parent,1" />
            </LayoutInput>
            <Children>
              <me:DetailQuickListScroller Name="ListItems" Application="[Application]" Folder="[Folder]" ThemeHelper="[ThemeHelper]" />
            </Children>
          </Panel>

          <Panel Name="InfoPanel">
            <LayoutInput>
              <FormLayoutInput Top="Parent,0.55" Horizontal="Center" />
            </LayoutInput>
            <Children>
              <!--MOVIE DETAILS INCLUDING SYNOPSIS, DIRECTORS RUNTIME ETC-->
              <Graphic Name="OverviewPanel" Padding="30,15,15,-5">
                <Layout>
                  <FlowLayout Orientation="Horizontal" Spacing="20,20"/>
                </Layout>
                <LayoutInput>
                  <FormLayoutInput Horizontal="Fill" Vertical="Fill"/>
                </LayoutInput>
                <Children>
                  <ColorFill Margins="0,14,0,0" Content="Transparent">
                    <Layout>
                      <FlowLayout Orientation="Vertical" StripAlignment="Near"/>
                    </Layout>
                    <Children>
                      <Panel Layout="VerticalFlow" MaximumSize="480,250">
                        <LayoutInput>
                          <FormLayoutInput Top="Parent,0,200" />
                        </LayoutInput>
                        <Children>
                          <Text Name="Title" Font="font://is:FinalDetailsTitle" Color="color://is:FinalDetailsTitleColor" Visible="false"/>
                          <Graphic Name="LogoImage" Margins="0,0,0,5" MaintainAspectRatio="true" MaximumSize="0,60" Visible="false" CenterPointPercent="0.5,0.5,0.5"/>
                          <st:ScrollableText Name="Summary" Font="font://is:OverviewFont" Color="color://is:OverviewColor" />
                        </Children>
                      </Panel>
                    </Children>
                  </ColorFill>

                  <Panel Layout="VerticalFlow" Margins="50,80,0,0" >
                    <Layout>
                      <FlowLayout Orientation="Vertical" StripAlignment="Near" ItemAlignment="Near"/>
                    </Layout>
                    <Children>
                      <lv:FinalLabelValue Name="TitleSupportlv"></lv:FinalLabelValue>
                      <lv:FinalLabelValue Name="TitleSupportlv1"></lv:FinalLabelValue>
                      <lv:FinalLabelValue Name="TitleSupportlv2"></lv:FinalLabelValue>
                      <lv:FinalLabelValue Name="TitleSupportlv3"></lv:FinalLabelValue>

                      <Panel Layout="HorizontalFlow" Name="RuntimeInfo" Visible="true">
                        <Children>
                          <lv:FinalLabelValue Name="SideInfo"></lv:FinalLabelValue>
                          <lv:FinalLabelValue Name="SideInfo1"></lv:FinalLabelValue>
                        </Children>
                      </Panel>
                      <sr:StarRating Margins="0,4,0,0" MaximumSize="0,20" Name="StarRating" ></sr:StarRating>
                      <mpaa:MPAARating Margins="0,7,0,0" MaximumSize="0,48" Name="mpaa" />
                    </Children>
                  </Panel>
                </Children>
              </Graphic>
            </Children>
          </Panel>


          <!--<Graphic Content="image://xi:RALBG" ColorFilter="color://is:XC_RALPanelFilterColor" Alpha="global://is:RALPanelAlpha">
            <LayoutInput>
              <AnchorLayoutInput Left="Parent,0,-100" Right="Parent,1,100" Top="Parent,0,-20" Bottom="Parent,1,37"  />
            </LayoutInput>
          </Graphic>-->
          <mip:MediaInfoPanel Name="MediaInfoPanel" Item="[SelectedItem]" MaximumSize="0,45" >
            <LayoutInput>
              <FormLayoutInput Top="InfoPanel,1,20" Horizontal="Center" />
            </LayoutInput>
          </mip:MediaInfoPanel>



          <ColorFill Name="Overlay" Layout="Fill" Visible="[ThemeHelper.Config.FolderShowBackdropOverlay]" Alpha="0.4" Content="Black" />
          <!-- Backdrop -->
          <bd:Backdrop4 LoadDelay="280" FadeTime="0.3"  Application="[Application]" Name="Backdrop" Visible="[ThemeHelper.Config.FolderShowBackdrop]" Image="[Folder.BackdropImage]" Item="[Folder.SelectedChild]"/>

        </Children>
      </Panel>


    </Content>
  </UI>

  <UI Name="DetailQuickListScroller">

    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
    </Properties>

    <Locals>
      <lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
      <!-- DETAILS SCROLLING DATA  -->
      <ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="DetailsSH"/>
      <ScrollingData Name="DetailsSD" LockedAlignment="0.1" LockedPosition="0.1"  />
      <!-- COVERFLOW SCROLLING DATA -->
      <ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="false" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="CoverFlowSH"/>
      <ScrollingData Name="CoverFlowSD" LockedAlignment="0.5" LockedPosition="0.5" ScrollStep="1" />
      <FlowLayout Name="Layout" Orientation="Horizontal" AllowWrap="true" Repeat="Never"  />
      <IntRangedValue Name="SelectRepeaterIndex"/>
      <ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled" Handle="true" />
      <ShortcutHandler Name="JumpBack" Shortcut="SkipBack" HandlerStage="Bubbled" Handle="true"/>

      <cor:Int32 Name="InfoTimer" Int32="1000" />
      <IntRangedValue Name="NavCount" Value="0" />

      <Command Name="ScrollUp"/>
      <Command Name="ScrollDown"/>
    </Locals>

    <Rules>

      <!-- Set the UI to be mouse and keyboard interactive. -->
      <Default Target="[Input.KeyInteractive]" Value="true"/>

      <!--Navigate to First Unwatched-->
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Modified Source="[Application]" InitialEvaluate="true"/>
          <Equality Source="[Application.NavigatingForward]" Value="true"/>
          <Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0"/>
        </Conditions>
        <Actions>
          <Invoke Target="[DetailsRepeater.NavigateIntoIndex]"  index="[Folder.FirstUnwatchedIndex]"/>
        </Actions>
      </Rule>

      <!-- DETAILS Give ScrollingData to ScrollingHandler. -->
      <Binding Target="[DetailsSH.ScrollingData]" Source="[DetailsSD]"/>
      <Default Target="[DetailsSD.Repeater]" Value="[DetailsRepeater]"/>
      <Binding Source="[Layout]" Target="[DetailsRepeater.Layout]"/>

      <!-- DETAILS Give ScrollingData to ScrollingHandler. -->
      <Binding Target="[CoverFlowSH.ScrollingData]" Source="[CoverFlowSD]"/>
      <Default Target="[CoverFlowSD.Repeater]" Value="[CoverRepeater]"/>
      <Binding Source="[Layout]" Target="[CoverRepeater.Layout]"/>

      <!--<Changed Source="[Folder.SelectedChildIndex]" ConditionLogicalOp="And">
                <Conditions>
                    <Equality Source="[Folder.SelectedChildIndex]" ConditionOp="NotEquals" Value="-1" />
                    <Equality Source="[Folder.SelectedChildIndex]" ConditionOp="Equals" Value="0" />
                </Conditions>
                <Actions>
                    <Set Target="[Folder.SelectedChildIndex]" Value="[Folder.Children.Count]">
                        <Transformer>
                            <MathTransformer SubtractInt="1" />
                        </Transformer>
                    </Set>
                  <Invoke Target="[CoverFlowSD.ScrollDown]"/>
                </Actions>
            </Changed>-->

      <Changed Source="[Folder.SelectedChildIndex]" >
        <Conditions>
          <Equality Source="[Folder.SelectedChildIndex]" ConditionOp="NotEquals" Value="0" />
          <Equality Source="[Folder.SelectedChildIndex]" ConditionOp="GreaterThan" Value="[SelectRepeaterIndex.Value]" />
        </Conditions>
        <Actions>
          <Invoke Target="[CoverFlowSD.ScrollUp]" >
            <Transformer>
              <MathTransformer AddInt="1" />
            </Transformer>
          </Invoke>
        </Actions>
      </Changed>

      <Changed Source="[Folder.SelectedChildIndex]" >
        <Conditions>
          <Equality Source="[Folder.SelectedChildIndex]" ConditionOp="NotEquals" Value="0" />
          <Equality Source="[Folder.SelectedChildIndex]" ConditionOp="LessThan" Value="[SelectRepeaterIndex.Value]" />
        </Conditions>
        <Actions>
          <Invoke Target="[CoverFlowSD.ScrollDown]" >
            <Transformer>
              <MathTransformer SubtractInt="1" />
            </Transformer>
          </Invoke>
        </Actions>
      </Changed>

      <Changed Source="[Folder.JILShift]">
        <Actions>
          <Invoke Target="[DetailsSD.Scroll]"  amount="[Folder.JILShift]"/>
        </Actions>
      </Changed>
      <Rule>
        <Conditions>
          <Modified Source="[JumpForward.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[DetailsSD.PageDown]"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Modified Source="[JumpBack.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[DetailsSD.PageUp]"/>
        </Actions>
      </Rule>
    </Rules>


    <Content>
      <Panel Layout="Form">
        <Children>
          <!-- List Repeater -->
          <Scroller Orientation="Vertical" Name="DetailsScroller" ScrollingData="[DetailsSD]" Navigation="Column,RememberFocus" FadeSize="15"  >
            <LayoutInput>
              <AnchorLayoutInput Name="ListPosition" Bottom="Parent,1, -110" Top="Parent,0.1" Left="Parent,0" Right="Parent,0.3" />
            </LayoutInput>
            <Children>
              <Repeater Source="[Folder.Children]" Name="DetailsRepeater" Layout="[Layout]" >
                <Layout>
                  <FlowLayout Orientation="Vertical"  Spacing="10,5" />
                </Layout>
                <Content>
                  <me:ListItems Application="[Application]"
                                ParentItem="[Folder]"
                                Item="[RepeatedItem!lib:Item]"
                                Index="[RepeatedItemIndex]"
                                InfoTimer="[InfoTimer]" NavCount="[NavCount]"
                                SelectRepeaterIndex="[SelectRepeaterIndex]" />

                </Content>
                <Animations>
                  <Animation Type="Move">
                    <Keyframes>
                      <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                      <PositionKeyframe Time="0.65" RelativeTo="Final"/>
                    </Keyframes>
                  </Animation>
                </Animations>
              </Repeater>
            </Children>
          </Scroller>

          <Scroller Orientation="Horizontal" Name="CoverFlowScroller" ScrollingData="[CoverFlowSD]" Navigation="None" FadeSize="15"  >
            <LayoutInput>
              <AnchorLayoutInput Name="CFPosition" Bottom="Parent,0.5" Top="Parent,0.1" Left="Parent,0.4" Right="Parent,1,100" />
            </LayoutInput>
            <Children>
              <Repeater Source="[Folder.Children]" Name="CoverRepeater" Layout="[Layout]" >
                <Layout>
                  <FlowLayout Orientation="Vertical"  Spacing="10,5" />
                </Layout>
                <Content>
                  <me:CoverFlowItem
                    Application="[Application]"
                    ParentItem="[Folder]"
                    ItemIndex="[RepeatedItemIndex]"
                    Item="[RepeatedItem!lib:Item]"
                    SelectRepeaterIndex="[SelectRepeaterIndex]"
                    ThemeHelper="[ThemeHelper]"/>

                </Content>
                <Animations>
                  <Animation Type="Move">
                    <Keyframes>
                      <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                      <PositionKeyframe Time="0.65" RelativeTo="Final"/>
                    </Keyframes>
                  </Animation>
                </Animations>
              </Repeater>
            </Children>
          </Scroller>



        </Children>
      </Panel>
    </Content>
  </UI>

  <UI Name="CoverFlowItem" >
    <Properties>
      <a:Application Name="Application" Application="$Required" />
      <ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
      <lib:Item Name="Item" Item="$Required" />
      <Image Name="Image" />
      <lib:FolderModel Name="ParentItem" FolderModel="$Required"/>
      <Index Name="ItemIndex" Index="$Required"/>
      <IntRangedValue Name="SelectRepeaterIndex" IntRangedValue="$Required"/>
    </Properties>

    <Locals>
      <Timer Name="AnimTimer" Interval="1000" Enabled="false" AutoRepeat="false"/>

    </Locals>

    <Rules>

      <Changed Source="[ParentItem.SelectedChildIndex]" >
        <Conditions>
          <Equality Source="[ParentItem.SelectedChild]" ConditionOp="Equals" Value="[Item]" />
        </Conditions>
        <Actions>
          <Set Target="[CoverFlowArt.Alpha]" Value="1"/>
        </Actions>
      </Changed>

      <Changed Source="[ParentItem.SelectedChildIndex]" >
        <Conditions>
          <Equality Source="[ParentItem.SelectedChildIndex]" ConditionOp="NotEquals" Value="[ItemIndex.SourceValue]" />
        </Conditions>
        <Actions>
          <Set Target="[CoverFlowArt.Alpha]" Value="0.3"/>
        </Actions>
      </Changed>

      <Binding Source="[Item.ThumbnailImage]" Target="[CoverFlowArt.Content]">
        <Conditions>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[CoverFlowArt.Content]" Value="[Item.ThumbnailImage]" />
        </Actions>
      </Binding>
      <Binding Source="[Item.BackdropImage]" Target="[CoverFlowArt.Content]">
        <Conditions>
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[CoverFlowArt.Content]" Value="[Item.BackdropImage]" />
        </Actions>
      </Binding>


      <!--<Condition Source="[SelectRepeaterIndex.Value]" ConditionOp="LessThanOrEquals" SourceValue="[ItemIndex.Value]" Target="[Main.Alpha]" Value="1" />
      <Condition Source="[SelectRepeaterIndex.Value]" ConditionOp="GreaterThan" SourceValue="[ItemIndex.Value]" Target="[Main.Alpha]" Value="0" />-->


    </Rules>

    <Content>

      <Graphic Name="CoverFlowMain" CenterPointPercent="0.5,1,0.5" Rotation="-5deg;0.5,1,0" Margins="5,0,5,0">
        <Layout>
          <AnchorLayout SizeToVerticalChildren="true"/>
          <!--<FlowLayout Orientation="Vertical" Spacing="0,-5"/>-->
        </Layout>
        <Children>
          <!-- Focus Outline-->
          <Graphic Name="FocusBg" Padding="5,5,5,5" SizingPolicy="SizeToChildren" Layout="VerticalFlow">
            <Children>

              <Clip Orientation="Horizontal" FadeSize="1" >
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0,-1" Right="Parent,1,1" Vertical="Fill"/>
                </LayoutInput>
                <Children>
                  <Graphic Name="CoverFlowArt" MaximumSize="200,0" SizingPolicy="SizeToConstraint" MaintainAspectRatio="true" Content="[Item.ThumbnailImage]" />
                </Children>
              </Clip>
            </Children>
          </Graphic>
        </Children>
      </Graphic>
    </Content>
  </UI>

  <UI Name="ListItems">
    <Properties>
      <a:Application Name="Application" Application="$Required" />
      <ih:IridiumHelper Name="ThemeHelper" />
      <lib:FolderModel Name="ParentItem" FolderModel="$Required"/>
      <lib:Item Name="Item" Item="$Required" />
      <Index Name="Index" Index="$Required"/>
      <cor:Int32 Name="InfoTimer" Int32="1000" />
      <IntRangedValue Name="SelectRepeaterIndex" IntRangedValue="$Required"/>
      <IntRangedValue Name="NavCount" IntRangedValue="$Required" />
    </Properties>

    <Locals>
      <ClickHandler Name="Clicker"/>
      <Timer Name="AnimTimer" Interval="[InfoTimer]" Enabled="false" AutoRepeat="false"/>
      <BooleanChoice Name="InFocus" Value="false" />
    </Locals>


    <Rules>

      <Default Target="[Input.KeyInteractive]" Value="true"/>
      <Default Target="[Input.MakeTopmostOnFocus]" Value="true"/>

      <Condition Source="[ParentItem.SelectedChildIndex]" ConditionOp="NotEquals" SourceValue="[Index.SourceValue]">
        <Actions>
          <Invoke Target="[AnimTimer.Stop]" />
          <Set Target="[NavCount.Value]" Value="[NavCount.Value]" ExclusiveApply="false">
            <Transformer>
              <MathTransformer Add="1"/>
            </Transformer>
          </Set>
        </Actions>
      </Condition>

      <Binding Target="[ThemeHelper.CurrentItem]" Source="[Item]" />
      <Binding Target="[Title.Content]" Source="[Item.Name]" />

      <Default Target="[Input.KeyInteractive]" Value="true" />

      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Title.Font]" Value="font://is:XF_DQLSelected" />
          <Set Target="[Title.Color]" Value="color://is:XC_DQLHighlighted"/>
          <Set Target="[ParentItem.SelectedChildIndex]" Value="[Index.SourceValue]"/>
          <Invoke Target="[AnimTimer.Start]" />
        </Actions>
      </Changed>

      <Changed Source="[AnimTimer.Tick]">
        <Actions>
          <Set Target="[InFocus.Value]" Value="true"/>
          <Set Target="[NavCount.Value]" Value="0" ExclusiveApply="false"/>
        </Actions>
      </Changed>

      <Condition Source="[Input.KeyFocus]" SourceValue="false">
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[Title.Color]" Value="color://is:XC_DQLUnselected"/>
        </Actions>
      </Condition>

      <Changed Source="[Clicker.Invoked]">
        <Actions>
          <!--PlaySound Sound="sound://sounds:Miniselect" /-->
          <Invoke Target="[Application.Navigate]" item="[Item]"/>
        </Actions>
      </Changed>
    </Rules>

    <Content>
      <Panel Name="Bg" >
        <Children>
          <Clip Layout="Anchor" Navigation="Column, RememberFocus" Name="ItemDetails"  >
            <LayoutInput>
              <AnchorLayoutInput Left="Parent,0" Top="Parent,0" Right="Parent,1" Bottom="Parent,1"/>
            </LayoutInput>
            <Children>

              <Text Name="Title" WordWrap="false" Font="font://is:XF_DQLUnselected" Margins="20,0,20,0" >
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0,20" Top="Parent,0,10" Right="Parent,0,300"/>
                </LayoutInput>
              </Text>
            </Children>
          </Clip>


        </Children>
      </Panel>
    </Content>
  </UI>
</Mcml>
