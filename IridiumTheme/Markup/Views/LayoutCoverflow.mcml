<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
    xmlns:cor="assembly://MSCorLib/System"
    xmlns:a="assembly://MediaBrowser/MediaBrowser"
    xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
    xmlns:ib="resx://Iridium/Iridium.Resources/ItemButton"
    xmlns:is="file://Iridium_Styles.mcml"
    xmlns:s="file://Styles_DoNotEdit.mcml"
	  xmlns:f="file://Fonts_DoNotEdit.mcml"
    xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
    xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
      xmlns:in="resx://MediaBrowser/MediaBrowser.Resources/InfoMarquee"
    xmlns:vi="resx://Iridium/Iridium.Resources/Images"
	  xmlns:bd="resx://Iridium/Iridium.Resources/Backdrop"
    xmlns:mpaa="resx://MediaBrowser/MediaBrowser.Resources/MPAARating"
    xmlns:mip="resx://MediaBrowser/MediaBrowser.Resources/MediaInfoPanel"
    xmlns:sr="resx://Iridium/Iridium.Resources/StarRating"
    xmlns:lv="resx://Iridium/Iridium.Resources/LabelValue"
    xmlns:ih="assembly://Iridium/Iridium"
    xmlns:jil="resx://MediaBrowser/MediaBrowser.Resources/JilSelector"
    xmlns:cf2="resx://Iridium/Iridium.Resources/LayoutCV2"
    xmlns:anim="resx://Iridium/Iridium.Resources/Animations"
    xmlns:me="me" >

  <UI Name="IridiumLayoutCoverflow">
    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required"/>
    </Properties>

    <Locals>
      <lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
      <Timer Name="InfoTimer" AutoRepeat="false" Interval="400" Enabled="false"/>
      
      <FormLayoutInput Name="ScrollerTop" Bottom="Parent,0.85" Top="Parent, 0.2" Left="Parent,0,15" Right="Parent,1,-15" />
      <FormLayoutInput Name="ScrollerMiddle" Bottom="Parent,1" Top="Parent, 0.21" Left="Parent,0,-100" Right="Parent,1,500" />
      <FormLayoutInput Name="ScrollerBottom" Bottom="Parent,0.85" Top="Parent, 0.5" Left="Parent,0,15" Right="Parent,1,-15" />
      
      <AnchorLayoutInput Name="StarRatingAnchorLayout" Horizontal="Center" Bottom="Parent,1,-2" />
      <AnchorLayoutInput Name="NumericRatingAnchorLayout" Right="Parent,1,-300" Bottom="Parent,1,-10" />
      

      <ShortcutHandler Name="Blue" Shortcut="Blue" HandlerStage="Bubbled" Handle="true"/>
      <KeyHandler Name="JilKey" Key="J" Handle="true" Modifiers="Control" HandlerStage="Bubbled"/>
      <Command Name="HideJil"/>
      
    </Locals>

    <Rules>

      <Binding Target="[Application.CurrentItem]" Source="[SelectedItem]" />
      <Binding Target="[ThemeHelper.CurrentItem]" Source="[SelectedItem]" />

      <!-- Folder Pref Backdrop -->
      <!-- Backdrop-->
      <Binding Target="[Backdrop.Image]" Source="[Folder.SelectedChild.BackdropImage]" />
      <Binding Target="[Backdrop.Item]" Source="[Folder.SelectedChild]" />
      <Binding Target="[Backdrop.Visible]"   Source="[ThemeHelper.Config.FolderShowBackdrop]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdrop]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>
      

      <!-- Backdrop Overlay-->
      <Binding Target="[Overlay.Visible]"   Source="[ThemeHelper.Config.FolderShowBackdropOverlay]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdropOverlay]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>
      
      <Binding Target="[Overlay.Alpha]" Source="[ThemeHelper.Config.FolderBackdropOverlayAlpha]"/>

      <Condition Source="[ThemeHelper.Config.FolderStarRatingStyle]" ConditionOp="Equals" SourceValue="Star Graph" Target="[RatingPanel.LayoutInput]" Value="[StarRatingAnchorLayout]" />
      <Condition Source="[ThemeHelper.Config.FolderStarRatingStyle]" ConditionOp="Equals" SourceValue="Numeric" Target="[RatingPanel.LayoutInput]" Value="[NumericRatingAnchorLayout]" />
      <Condition Source="[ThemeHelper.Config.FolderStarRatingStyle]" ConditionOp="Equals" SourceValue="Tomato" Target="[RatingPanel.LayoutInput]" Value="[NumericRatingAnchorLayout]" />
      <Condition Source="[ThemeHelper.Config.FolderStarRatingStyle]" ConditionOp="Equals" SourceValue="Numeric/Tomato" Target="[RatingPanel.LayoutInput]" Value="[NumericRatingAnchorLayout]" />

      <!-- JIL Command -->
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Modified Source="[JilKey.Invoked]"/>
          <Modified Source="[Blue.Invoked]"/>
        </Conditions>
        <Actions>
          <PlaySound Sound="sound://sounds:Miniselect" />
          <Set Target="[JilPanel.Visible]" Value="true" />
          <Invoke Target="[JilPanel.NavigateInto]" />
        </Actions>
      </Rule>

      <Changed Source="[HideJil.Invoked]" >
        <Actions>
          <Set Target="[JilPanel.Visible]" Value="false" />
        </Actions>
      </Changed>

      <Changed Source="[Folder.SelectedChildIndex]" InitialEvaluate="true">
        <Conditions>
          <Equality ConditionOp="NotEquals" Source="[Folder.SelectedChildIndex]" Value="-1"></Equality>
        </Conditions>
        <Actions>
          <Set Target="[InfoTimer.Enabled]" Value="true"/>
          <Invoke Target="[InfoTimer.Stop]" />
          <Invoke Target="[InfoTimer.Start]" />
        </Actions>
      </Changed>

      <Changed Source="[InfoTimer.Tick]">
        <Actions>
          <Set Target="[SelectedItem]" Value="[Folder.SelectedChild]" />
        </Actions>
      </Changed>

      <!--ITEM COUNTER-->
      <Binding Source="[Folder.SelectedChildIndex.ToString]" Target="[List_Counter.Content]" >
        <Transformer>
          <MathTransformer Add="1"/>
        </Transformer>
      </Binding>
      <Binding Source="[Folder.Children.Count]" Target="[List_Total.Content]" >
        <Transformer>
          <FormatTransformer Format="| {0}" />
        </Transformer>
      </Binding>
    
    
    <!--BOTTOM BAR INFO-->

      <Binding Source="[ThemeHelper.Config.FolderShowBottomInfoBar]" Target="[BottomInfoBar.Visible]" />
      <Binding Source="[Application.CurrentItem]" Target="[MediaInfoPanel.Item]" />
      <Binding Source="[SelectedItem.MpaaRating]" Target="[mpaa.Value]" />
      <Binding Source="[SelectedItem.ProductionYearString]" Target="[ProdYear.Value]" />
      <Binding Source="[SelectedItem.RunningTimeString]" Target="[Runtime.Value]" />
      <Binding Source="[SelectedItem.Status]" Target="[TVStatus.Value]" />

      <!-- IMDB RATINGS VALUES -->
      <Binding Source="[SelectedItem.ImdbRating]" Target="[StarRating.Value]"></Binding>
      <Binding Source="[SelectedItem.ImdbRating]" Target="[StarRating.ImdbValue]"></Binding>
      <Binding Source="[SelectedItem.CriticRating]" Target="[StarRating.RTValue]" />
      <Binding Source="[SelectedItem.RottenTomatoImage]" Target="[StarRating.RTImage]" />

      <!--LOGO'S LOGIC
      <Binding Target="[Title.Content]"       Source="[SelectedItem.Name]"/>
      <Binding Target="[LogoImage.Content]" Source="[SelectedItem.LogoImage]"/>

      <Rule>
        <Conditions>
          <Equality Source="[SelectedItem.HasLogoImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season"/>
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode"/>
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
        </Actions>
      </Rule>
      <Default Target="[LogoImage.Visible]" Value="false"/>
      <Default Target="[Title.Visible]" Value="true"/>-->

      <!-- Conditions for Title or Fanart views-->
      <Binding Source="[SelectedItem.Name]" Target="[Title.Content]" />
      <Binding Source="[SelectedItem.LogoImage]" Target="[LogoImage.Content]" />
      <Binding Source="[SelectedItem.ArtImage]" Target="[ClearArtImage.Content]" />
      <Binding Source="[SelectedItem.ThumbnailImage]" Target="[ThumbnailImage.Content]" />

      <!--Logos-->
      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Logo" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="Equals" Value="Song" />
          <Equality Source="[SelectedItem.HasLogoImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>
      
      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Logo" />
          <Equality Source="[SelectedItem.HasLogoImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Logo" />
          <Equality Source="[SelectedItem.HasLogoImage]" ConditionOp="Equals" Value="false" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <!--ClearArt-->
      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ClearArt" />
          <Equality Source="[SelectedItem.HasArtImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ClearArtImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ClearArt" />
          <Equality Source="[SelectedItem.HasArtImage]" ConditionOp="Equals" Value="false" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ClearArtImage.Visible]" Value="false" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <!--ThumbNailArt-->
      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ThumbArt" />
          <Equality Source="[SelectedItem.HasThumbnailImage]" ConditionOp ="Equals" Value="True"/>
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ThumbnailImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ThumbArt" />
          <Equality Source="[SelectedItem.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
        </Actions>
      </Rule>
      <Default Target="[ThumbnailImage.Visible]" Value="false" />
      <Default Target="[Title.Visible]" Value="true" />
      <Default Target="[LogoImage.Visible]" Value="false" />
      <Default Target="[ClearArtImage.Visible]" Value="false" />
      <!--END BOTTOM BAR INFO-->

      <Condition Source="[ThemeHelper.Config.FolderShowFlatCoverflow]" ConditionOp="Equals" SourceValue="true" Target="[CF2Items.Visible]" Value="true" />
      <Condition Source="[ThemeHelper.Config.FolderShowFlatCoverflow]" ConditionOp="Equals" SourceValue="false" Target="[CF2Items.Visible]" Value="false" />
      <Condition Source="[ThemeHelper.Config.FolderShowFlatCoverflow]" ConditionOp="Equals" SourceValue="true" Target="[CVItems.Visible]" Value="false" />
      <Condition Source="[ThemeHelper.Config.FolderShowFlatCoverflow]" ConditionOp="Equals" SourceValue="false" Target="[CVItems.Visible]" Value="true" />

      <!--<Condition Source="[ThemeHelper.Config.FolderFlatCFPosition]" ConditionOp="Equals" SourceValue="Top" Target="[CF2Items.LayoutInput]" Value="[ScrollerTop]" />-->
      <Condition Source="[ThemeHelper.Config.FolderFlatCFPosition]" ConditionOp="Equals" SourceValue="Middle" Target="[CF2Items.LayoutInput]" Value="[ScrollerMiddle]" />
      <!--<Condition Source="[ThemeHelper.Config.FolderFlatCFPosition]" ConditionOp="Equals" SourceValue="Bottom" Target="[CF2Items.LayoutInput]" Value="[ScrollerBottom]" />-->

    </Rules>
    <Content>

      <Panel Layout="Form" Navigation="ContainHorizontal">
        <Children>

          <!--Jil Selector-->
          <Panel Name="JilPanel" Visible="false" Layout="Scale" Margins="150,0,150,20">
            <LayoutInput>
              <FormLayoutInput Top="Parent,0,100" />
            </LayoutInput>
            <Animations>
              <Animation Type="Show" >
                <Keyframes>
                  <AlphaKeyframe Time="0.0" Value="0" />
                  <AlphaKeyframe Time="0.4" Value="1" Interpolation="SCurve" />
                  <PositionKeyframe Time="0.0" Value="0,-50,0" />
                  <PositionKeyframe Time="0.4" Value="0,0,0" Interpolation="SCurve" />
                </Keyframes>
              </Animation>
            </Animations>
            <Children>
              <jil:JilSelector Name="JIL" Application="[Application]" Folder="[Folder]" LostFocus="[HideJil]" Margins="0,0,4,0"/>
            </Children>
          </Panel>
          
          <Panel Name="CounterPanel">
            <LayoutInput>
              <FormLayoutInput Top="Parent,1,-43" Bottom="Parent,1,0" Right="Parent,1,-25"/>
            </LayoutInput>
            <Children>
              <Panel Name="CounterPosition" Layout="HorizontalFlow">
                <Children>
                  <Text Name="List_Counter" Content="0" Color="color://is:counterColor" Font="font://is:counterFont" />
                  <Text Name="List_Total" Content="0" Color="color://is:totalCounterColor" Font="font://is:totalCounterFont"/>
                </Children>
              </Panel>
            </Children>
          </Panel>

          <me:CV2Scroller Name="CVItems" Application="[Application]" Folder="[Folder]" ThemeHelper="[ThemeHelper]">
            <LayoutInput>
              <AnchorLayoutInput Name="CVPosition" Bottom="Parent,0.90" Top="Parent, 0.25" Left="Parent, 0.01" Right="Parent, 0.99" />
            </LayoutInput>
          </me:CV2Scroller>

          <cf2:Coverflow2Scroller Name="CF2Items" Application="[Application]" Folder="[Folder]" ThemeHelper="[ThemeHelper]" LayoutInput="[ScrollerMiddle]" />

          <!--BOTTOM BAR LAYOUT-->
          <Panel Name="BottomInfoBar" Layout="Form">
            <Children>
              
              <Panel Name="ItemPanel" Layout="VerticalFlow" Visible="true">
                <LayoutInput>
                  <AnchorLayoutInput Horizontal="Center" Bottom="Parent,1,-20" />
                </LayoutInput>
                <Children>
                  <Text Name="Title" Content="[SelectedItem.Name]" Font="font://is:BottomBarTitleFont" Color="color://is:BottomBarTitleColor" Visible="false"/>
                  <Graphic Name="LogoImage" Margins="0,0,0,5" MaintainAspectRatio="true" MaximumSize="0,100" Visible="false" CenterPointPercent="0.5,0.5,0.5"/>
                  <Graphic Name="ClearArtImage" Margins="0,0,0,5" MaintainAspectRatio="true" MaximumSize="350,100" Visible="false" CenterPointPercent="0.5,0.5,0.5"/>
                  <Graphic Name="ThumbnailImage" Margins="0,0,0,5" MaintainAspectRatio="true" MaximumSize="350,100" Visible="false" CenterPointPercent="0.5,0.5,0.5"/>
                </Children>
              </Panel>

              <Panel Name="YearPanel" Layout="VerticalFlow" >
                <LayoutInput>
                  <AnchorLayoutInput Right="MPAARatingPanel,0,-10" Bottom="Parent,1,-2" />
                </LayoutInput>
                <Children>
                  <lv:BBarLabelValue Name="ProdYear" MaximumSize="0,55" Margins="0,0,0,0"/>
                  <lv:BBarLabelValue Name="Runtime" MaximumSize="0,55" />
                </Children>
              </Panel>

              <Panel Name="TVStatusPanel">
                <LayoutInput>
                  <AnchorLayoutInput Right="YearPanel,0,-10" Bottom="Parent,1,-2" />
                </LayoutInput>
                <Children>
                  <lv:BBarLabelValue Name="TVStatus" MaximumSize="0,55" />
                </Children>
              </Panel>

              <Panel Name="RatingPanel"  >
                <Children>
                  <sr:StarRating MaximumSize="0,40" Name="StarRating" Margins="0,0,0,0" ThemeHelper="[ThemeHelper]" LayoutInput="[StarRatingAnchorLayout]"/>
                </Children>
              </Panel>
                

              <Panel Name="MPAARatingPanel" >
                <LayoutInput>
                  <AnchorLayoutInput Right="Parent,1,-100" Bottom="Parent,1,-10" />
                </LayoutInput>
                <Children>
                  <mpaa:MPAARating MaximumSize="65,55" Name="mpaa" Visible="true"/>
                </Children>
              </Panel>

              <Panel Name="MediaInfo" >
                <LayoutInput>
                  <AnchorLayoutInput Bottom="Parent,1,-10" Horizontal="Near" />
                </LayoutInput>
                <Children>
                  <mip:MediaInfoPanel Name="MediaInfoPanel" Item="[SelectedItem]" MaximumSize="0,55" />
                </Children>
              </Panel>

              <Clip Name="BottomBarGraphic" ColorFilter="color://is:BottomBarColorOverlay" >
                <LayoutInput>
                  <FormLayoutInput Left="Parent,0" Right="Parent,1" Bottom="Parent,1" Top="Parent,1,-100" />
                </LayoutInput>
                <Children>
                  <Graphic Name="BottomBar" Content="image://vi:PanelBG" MaximumSize="0,100" MaintainAspectRatio="true" />
                </Children>
              </Clip>
            </Children>
          </Panel>

          <!-- Welcome to MB & Update Info Panel-->
          <Panel Name="MBInfo" Alpha="0.7" >
            <LayoutInput>
              <AnchorLayoutInput Top="Parent,0.77" Left="Parent,0,-20" />
            </LayoutInput>
            <Children>
              <in:InfoMarquee Application="[Application]" />
            </Children>
          </Panel>

          <Graphic Name="GlassBG" Layout="Fill" Content="image://vi:GlassBG" Visible="[ThemeHelper.Config.FolderShowFlatCoverflow]" Alpha="1" ColorFilter="Black"/>
			<Graphic Name="RootMenuBG" ColorFilter="0,155,255" Alpha="1" Navigation="None" Content="image://vi:MainVFBG">
				<LayoutInput>
					<AnchorLayoutInput Left="Parent,0" Top="Parent,0,5" Right="Parent,1" Bottom="Parent,0,75" />
				</LayoutInput>
			</Graphic>

			<Graphic Name="ChildBG" Content="image://vi:TestBanner" ColorFilter="color://is:XC_RALPanelFilterColor" Alpha="global://is:RALPanelAlpha">
				<LayoutInput>
					<AnchorLayoutInput Left="Parent,0" Top="Parent,0,5" Right="Parent,1" Bottom="Parent,0,75" />
				</LayoutInput>
			</Graphic>

			<bd:NowPlayingBackdrop Name="NowPlayingBackdrop" Application="[Application]" />
			<Graphic Name="Overlay" Layout="Fill" Visible="[ThemeHelper.Config.FolderShowBackdropOverlay]" Alpha="[ThemeHelper.Config.FolderBackdropOverlayAlpha]" Content="image://vi:BackgroundOverlay" />
			<bd:Backdrop4 LoadDelay="280" FadeTime="[ThemeHelper.Config.BackdropTransitionTime]" Application="[Application]" Name="Backdrop" Visible="[ThemeHelper.Config.FolderShowBackdrop]" Image="[Folder.SelectedChild.BackdropImage]" Item="[Folder.SelectedChild]" />

          
        </Children>
      </Panel>
    </Content>
  </UI>


	<UI Name="CV2Scroller">
		<Properties>
			<a:Application Name="Application" Application="$Required"/>
			<lib:FolderModel Name="Folder" FolderModel="$Required"/>
			<ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required"></ih:IridiumHelper>
		</Properties>

		<Locals>
			<ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="ScrollingHandler"/>
			<ScrollingData Name="SD" LockedAlignment="0.47" LockedPosition="0.47" />
			<IntRangedValue Name="SelectRepeaterIndex"/>

			<!--ScaleLayout Name="MyLayout" AllowScaleUp="true" /-->
			<FlowLayout Name="RepeaterLayout" Orientation="Horizontal" Repeat="WhenTooBig"  />
			<IntRangedValue Name="NavCount" Value="0" />

			<ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled" Handle="true" />
			<ShortcutHandler Name="JumpBack" Shortcut="SkipBack" HandlerStage="Bubbled" Handle="true"/>

			<cor:Int32 Name="NormalKeyRepeat" Int32="20"/>
			<!-- This must be less than anim delay -->
			<cor:Int32 Name="FastKeyRepeat" Int32="10"/>
			<cor:Int32 Name="AnimDelay" Int32="30" />
			<!-- This must be greater than NormalKeyRepeat-->
			<cor:Int32 Name="SpeedUpDelay" Int32="2"/>
		</Locals>

		<Rules>
			<Rule>
				<Conditions>
					<Modified Source="[JumpForward.Invoked]"/>
				</Conditions>
				<Actions>
					<Invoke Target="[SD.PageDown]"/>
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Modified Source="[JumpBack.Invoked]"/>
				</Conditions>
				<Actions>
					<Invoke Target="[SD.PageUp]"/>
				</Actions>
			</Rule>

			<Changed Source="[Folder.JILShift]">
				<Actions>
					<Invoke Target="[SD.Scroll]"  amount="[Folder.JILShift]"/>
				</Actions>
			</Changed>

			<Changed Source="[Application]" InitialEvaluate="true">
				<Actions>
					<Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
				</Actions>
			</Changed>

			<Changed Source="[NavCount.Value]">
				<Conditions>
					<Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="[SpeedUpDelay]"/>
				</Conditions>
				<Actions>
					<Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[FastKeyRepeat]" />
				</Actions>
			</Changed>

			<Changed Source="[NavCount.Value]">
				<Conditions>
					<Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="0"/>
				</Conditions>
				<Actions>
					<Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
				</Actions>
			</Changed>

			<Default Target="[ScrollingHandler.ScrollingData]" Value="[SD]"/>
			<Default Target="[SD.Repeater]" Value="[CoverRepeater]"/>
			<Binding Source="[RepeaterLayout]" Target="[CoverRepeater.Layout]"/>

			<!-- Update cover repeater on items change. -->
			<Changed Source="[Folder.Children]">
				<Actions>
					<Set Target="[CoverRepeater.Source]" Value="[Folder.Children]" />
					<Set  Target="[Folder.SelectedChildIndex]" Value="-1"/>
				</Actions>
			</Changed>

			<Rule ConditionLogicalOp="And">
				<Conditions>
					<Modified Source="[Application]" InitialEvaluate="true"/>
					<Equality Source="[Application.NavigatingForward]" Value="true"/>
					<Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
				</Conditions>
				<Actions>
					<Invoke Target="[CoverRepeater.NavigateIntoIndex]"  index="[Folder.FirstUnwatchedIndex]"/>
				</Actions>
			</Rule>
		</Rules>

		<Content>
			<!-- Coverflow Scroller -->
			<Scroller Orientation="Horizontal" Name="Scroller" Navigation="RememberFocus,ContainHorizontal" ScrollingData="[SD]" FadeSize="5" >
				<Children>
					<Repeater Name="CoverRepeater" Source="[Folder.Children]" Layout="[RepeaterLayout]" DiscardOffscreenVisuals="false">
						<Animations>
							<Animation Type="Move">
								<Keyframes>
									<PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
									<PositionKeyframe Time="0.65" RelativeTo="Final"/>
								</Keyframes>
							</Animation>
						</Animations>
						<Content>
							<me:CoverflowItem
								  Application="[Application]"
								  ParentItem="[Folder]"
								  ThemeHelper="[ThemeHelper]"
								  ItemIndex="[RepeatedItemIndex]"
								  Item="[RepeatedItem!lib:Item]"
								  SelectRepeaterIndex="[SelectRepeaterIndex]"
								  ImageSize="[Folder.ActualThumbSize]"
								  AnimDelay="[AnimDelay]" NavCount="[NavCount]"
								  UnwatchedCountFont="font://is:UnwatchedCountFont"
								  ShowLabels="[Folder.DisplayPrefs.ShowLabels]"
								  TopLabelFont="font://is:CV_PosterTopLabelFont" />
						</Content>
					</Repeater>
				</Children>
			</Scroller>
		</Content>
	</UI>

	<UI Name="CoverflowItem" BaseUI="ib:ItemButton">
		<Properties>
			<lib:SizeRef Name="ImageSize" SizeRef="$Required"/>
			<Image Name="FocusImage" Image="image://i:ZoomPane"/>
			<Image Name="FolderImage" Image="image://i:Folder"/>
			<Image Name="BlankImage" Image="null"/>
			<BooleanChoice Name="ShowLabels" BooleanChoice="$Required" />
			<Image Name="Image" />
			<cor:Int32 Name="AnimDelay" Int32="1000" />
			<lib:FolderModel Name="ParentItem" FolderModel="$Required"/>
			<Index Name="ItemIndex" Index="$Required"/>
			<Rotation Name="RRotate" Rotation="-40deg;0,1,0"/>
			<Rotation Name="LRotate" Rotation="40deg;0,1,0"/>
			<IntRangedValue Name="SelectRepeaterIndex" IntRangedValue="$Required"/>
			<IntRangedValue Name="NavCount" IntRangedValue="$Required" />
			<Font Name="UnwatchedCountFont" Font="$Required"/>
			<Font Name="TopLabelFont" Font="$Required"/>
		</Properties>

		<Locals>
			<Timer Name="AnimTimer" Interval="[AnimDelay]" Enabled="false" AutoRepeat="false"/>
			<BooleanChoice Name="InFocus" Value="false" />
			<Rotation Name="DefaultRotation" Rotation="0deg;0,0,0" />
			<Command Name="ApplyRotation" />
		</Locals>

		<Rules>

			<!-- Set the UI to be mouse and keyboard interactive. -->
			<Default Target="[Input.KeyInteractive]" Value="true"/>
			<Default Target="[Input.MakeTopmostOnFocus]" Value="true"/>
			<Default Target="[Label.Visible]" Value="true">
				<Conditions>
					<Equality Source="[Item.HasPreferredImage]" ConditionOp="Equals" Value="false" />
					<!--<Equality Source="[ShowLabels.Value]" ConditionOp="Equals" Value="false" />-->
				</Conditions>
			</Default>


			<Binding Source="[Item.PreferredImageSmall]" Target="[MainArt.Content]" />
			<Binding Source="[Item.PreferredImageSmall]" Target="[MirrorArt.Content]" />
			<Binding Source="[ImageSize.Value]" Target="[Item.PreferredImageSmallSize]" />

			<Binding Source="[ImageSize.Value]" Target="[IndicatorPanel.MaximumSize]" />
			<Binding Source="[ImageSize.Value]" Target="[IndicatorPanel.MinimumSize]" />
			<Binding Source="[ImageSize.Value]" Target="[MirrorContstraintPanel.MaximumSize]" />
			<Binding Source="[ImageSize.Value]" Target="[MirrorContstraintPanel.MinimumSize]" />
			<Binding Source="[ImageSize.Value]" Target="[BelowLabelPanel.MaximumSize]" />
			<Binding Source="[ParentItem.DisplayPrefs.UseBanner.Value]" Target="[Item.PreferBanner]" />

			<!-- Selected state, true if item last had focus -->
			<Condition Source="[ParentItem.SelectedChildIndex]" ConditionOp="Equals" SourceValue="[ItemIndex.SourceValue]">
				<Actions>
					<Set Target="[IndicatorPanel.ColorFilter]" Value="White" />
					<Set Target="[IndicatorPanel.Alpha]" Value="1" />
				</Actions>
			</Condition>

			<Condition Source="[ParentItem.SelectedChildIndex]" ConditionOp="NotEquals" SourceValue="[ItemIndex.SourceValue]">
				<Actions>
					<Invoke Target="[AnimTimer.Stop]" />
					<Set Target="[NavCount.Value]" Value="[NavCount.Value]" ExclusiveApply="false">
						<Transformer>
							<MathTransformer Add="1"/>
						</Transformer>
					</Set>
				</Actions>
			</Condition>

			<Changed Source="[Input.KeyFocus]" >
				<Conditions>
					<Equality Source="[Input.KeyFocus]" Value="true" />
				</Conditions>
				<Actions>
					<Set Target="[Mirror.Visible]" Value="true"/>
					<Invoke Target="[Main.AttachAnimation]" animation="animation://anim:CVFocusGained" />
					<Set Target="[ParentItem.SelectedChildIndex]" Value="[ItemIndex.SourceValue]"/>
					<Set Target="[SelectRepeaterIndex.Value]" Value="[ItemIndex.Value]"/>
					<Invoke Target="[AnimTimer.Start]" />
				</Actions>
			</Changed>

			<Changed Source="[AnimTimer.Tick]">
				<Actions>
					<Set Target="[InFocus.Value]" Value="true"/>
					<Set Target="[NavCount.Value]" Value="0" ExclusiveApply="false"/>
					<Set Target="[MainArt.Content]" Value="[Item.PreferredImage]" />
				</Actions>
			</Changed>

			<Condition Source="[Input.KeyFocus]" ConditionOp="Equals" SourceValue="false">
				<Actions>
					<Set Target="[MainArt.Content]" Value="[Item.PreferredImage]" />
					<Set Target="[Mirror.Visible]" Value="false"/>
					<Invoke Target="[Main.AttachAnimation]" animation="animation://anim:CVFocusLost" />
				</Actions>
			</Condition>

			<Condition Source="[Application.Config.DimUnselectedPosters]" ConditionOp="Equals" SourceValue="false" Target="[IndicatorPanel.ColorFilter]" Value="White" />
			<Condition Source="[Application.Config.DimUnselectedPosters]" ConditionOp="Equals" SourceValue="false" Target="[IndicatorPanel.Alpha]" Value="1" />

			<!-- Set proper rotation. -->
			<Changed Source="[ParentItem.SelectedChildIndex]" ConditionLogicalOp="And">
				<Conditions>
					<Equality Source="[ParentItem.SelectedChildIndex]" ConditionOp="Equals" Value="[ItemIndex.SourceValue]" />
				</Conditions>
				<Actions>
					<Set Target="[DefaultRotation]" Value="0deg;0,1,0" />
					<Set Target="[Main.Rotation]" Value="0deg;0,1,0" />
				</Actions>
			</Changed>


			<Rule ConditionLogicalOp="And">
				<Conditions>
					<Equality Source="[SelectRepeaterIndex.Value]" ConditionOp="LessThan" Value="[ItemIndex.Value]" />
				</Conditions>
				<Actions>
					<Set Target="[Main.Rotation]" Value="[LRotate]" />
				</Actions>
			</Rule>

			<Rule ConditionLogicalOp="And">
				<Conditions>
					<Equality Source="[SelectRepeaterIndex.Value]" ConditionOp="GreaterThan" Value="[ItemIndex.Value]" />
				</Conditions>
				<Actions>
					<Set Target="[Main.Rotation]" Value="[RRotate]" />
				</Actions>
			</Rule>
			<!--Poster (un)Watched/HD/Count/New Icons-->
			<!--Poster (un)Watched/HD/Count/New Icons-->
			<Binding Source="[Item.IsHD]" Target="[HDIndicator.Visible]"  ConditionLogicalOp="And"  >
				<Conditions>
					<Equality Source="[Application.Config.ShowHDIndicatorOnPosters]" Value="true" />
				</Conditions>
			</Binding>
			<Condition Source="[Item.HDType]" ConditionOp="Equals" SourceValue="720" Target="[HDImage.Content]" Value="image://i:HDLogo720" />
			<Condition Source="[Item.HDType]" ConditionOp="Equals" SourceValue="1080" Target="[HDImage.Content]" Value="image://i:HDLogo1080" />

			<Binding Source="[Item.HaveWatched]" Target="[TickPanel.Visible]" />
			<Binding Source="[Item.UnwatchedCountString]" Target="[UnwatchedCount.Content]" />
			<Binding Source="[Item.ShowUnwatched]" Target="[UnwatchedIndicator.Visible]" />
			<Binding Source="[Item.IsMissing]" Target="[MissingIndicator.Visible]" />
			<Binding Source="[Item.IsFuture]" Target="[FutureIndicator.Visible]" />

			<Changed Source="[Application.Config.ShowWatchedTickOnFolders]" InitialEvaluate="true">
				<Conditions>
					<Equality Source="[Item.IsPlayable]" Value="false" />
				</Conditions>
				<Actions>
					<Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchedTickOnFolders]" />
				</Actions>
			</Changed>

			<Changed Source="[Application.Config.ShowWatchTickInPosterView]" InitialEvaluate="true">
				<Conditions>
					<Equality Source="[Item.IsPlayable]" Value="true" />
				</Conditions>
				<Actions>
					<Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchTickInPosterView]" />
				</Actions>
			</Changed>

			<Changed Source="[Item.ShowUnwatched]">
				<Actions>
					<Set Target="[UnwatchedCount.Content]" Value="[Item.UnwatchedCountString]" />
				</Actions>
			</Changed>

			<Binding Target="[MainArt.MaintainAspectRatio]" Source="[Item.SmallImageIsDistorted]">
				<Transformer>
					<BooleanTransformer Inverse="true"/>
				</Transformer>
			</Binding>

			<Binding Source="[ShowLabels.Value]" Target="[BelowLabelPanel.Visible]" />
			<Binding Source="[Item.Name]" Target="[BelowLabelPanel.Content]" />
			<Binding Target="[Mirror.NearOffset]" Source="[ImageSize.Value.Height]">
				<Transformer>
					<MathTransformer DivideInt="2"/>
				</Transformer>
			</Binding>
			<Binding Target="[Mirror.FadeSize]" Source="[ImageSize.Value.Height]">
				<Transformer>
					<MathTransformer DivideInt="4"/>
				</Transformer>
			</Binding>
			<Binding Target="[Main.Margins.Bottom]" Source="[ImageSize.Value.Height]">
				<Transformer>
					<MathTransformer DivideInt="-2"/>
				</Transformer>
			</Binding>
			<Condition Source="[Item.ParentalAllowed]" ConditionOp="Equals" SourceValue="false" Target="[PCLock.Visible]" Value="true" />
		</Rules>

		<Content>
			<Graphic Name="Main" Content="[BlankImage]" CenterPointPercent="0.5,0.5,0.5" Margins="-30,0,-30,0" >
				<!--Rotation="40deg;0.13,1,0"-->
				<Layout>
					<AnchorLayout SizeToVerticalChildren="true"/>
				</Layout>
				<Children>
					<!-- Focus Outline-->
					<Graphic Name="FocusBg" Content="[BlankImage]" Padding="5,5,5,5" SizingPolicy="SizeToChildren" Layout="VerticalFlow" >
						<Children>
							<Panel Name="IndicatorPanel" CenterPointPercent="0.5,0.5,0.5" Padding="0,0,0,0" MaximumSize="[ImageSize.Value]" MinimumSize="[ImageSize.Value]" ColorFilter="150,150,150" >
								<Layout>
									<AnchorLayout SizeToHorizontalChildren="false" SizeToVerticalChildren="false"/>
								</Layout>
								<Children>
									<Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Alpha="0.8" Name="TickIndicatorPanel" Visible="[Application.Config.ShowWatchTickInPosterView]" MaximumSize="42,42" Margins="5,5,0,0">
										<LayoutInput>
											<AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
										</LayoutInput>
										<Children>
											<Panel Name="TickPanel" Layout="Center">
												<Children>
													<Graphic Content="image://i:Watched"  MaximumSize="40,40"  />
												</Children>
											</Panel>
										</Children>
									</Panel>

									<Panel  Margins="2,2,0,0" Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Name="UnwatchedIndicator" MaximumSize="42,42" >
										<LayoutInput>
											<AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
										</LayoutInput>
										<Children>
											<Text Name="UnwatchedCount" Content="" Color="color://s:FontColorLight" Font="[UnwatchedCountFont]" Margins="0,0,0,0"></Text>
											<Graphic Visible="global://s:ShowWatchedMarkerBackgrounds" Content="image://i:GreenCircle"  MinimumSize="40,40" MaximumSize="40,40" MaintainAspectRatio="true" Layout="Center" ></Graphic>
										</Children>
									</Panel>

									<Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="HDIndicator" >
										<LayoutInput>
											<AnchorLayoutInput Horizontal="Far" Vertical="Far"/>
										</LayoutInput>
										<Children>
											<Graphic Name="HDImage" Content="image://i:HDLogo" Margins="0,0,5,5" MaximumSize="48,35" MaintainAspectRatio="true">
												<LayoutInput>
													<AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
												</LayoutInput>
											</Graphic>
										</Children>
									</Panel>

									<Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="MissingIndicator">
										<LayoutInput>
											<AnchorLayoutInput Horizontal="Far" Vertical="Near"/>
										</LayoutInput>
										<Children>
											<Graphic Name="MissingImage" Content="image://i:MissingBanner" Margins="0,0,0,0" MaximumSize="75,75" MaintainAspectRatio="true">
												<LayoutInput>
													<AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
												</LayoutInput>
											</Graphic>
										</Children>
									</Panel>
									<Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="FutureIndicator">
										<LayoutInput>
											<AnchorLayoutInput Horizontal="Far" Vertical="Near"/>
										</LayoutInput>
										<Children>
											<Graphic Name="FutureImage" Content="image://i:FutureBanner" Margins="0,0,0,0" MaximumSize="75,75" MaintainAspectRatio="true">
												<LayoutInput>
													<AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
												</LayoutInput>
											</Graphic>
										</Children>
									</Panel>

									<Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="PCLock" >
										<LayoutInput>
											<AnchorLayoutInput Horizontal="Near" Vertical="Far"/>
										</LayoutInput>
										<Children>
											<Graphic Name="PCLockImage" Content="image://i:Lock" Margins="0,0,5,5" MaximumSize="30,30" MaintainAspectRatio="true">
												<LayoutInput>
													<AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
												</LayoutInput>
											</Graphic>
										</Children>
									</Panel>

									<Graphic Name="MainArt" SizingPolicy="SizeToConstraint" MaintainAspectRatio="true" Content="[Item.PreferredImage]"  >
										<!--Rotation="70deg;0,1,0"-->
										<Children>
											<Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Center">
												<LayoutInput>
													<AnchorLayoutInput Horizontal="Fill" Vertical="Fill"/>
												</LayoutInput>
												<Children>
													<Text Alpha="1" Name="Label" Visible="false" Color="color://s:FontColorLight" Content="[Item.Name]"  WordWrap="true" Margins="5,5,5,5"  HorizontalAlignment="Center">
													</Text>
												</Children>
											</Panel>
										</Children>
									</Graphic>
								</Children>
							</Panel>

							<Text Name="BelowLabelPanel" Margins="0,5,0,-3" Alpha="1" Color="color://s:FontColorLight"  Font="[TopLabelFont]" Content="[Item.Name]" WordWrap="false" HorizontalAlignment="Near"></Text>
						</Children>
					</Graphic>

					<!-- Mirror Effect-->
					<Clip Name="Mirror" FadeAmount="1" FadeSize="50" NearOffset="0" Padding="5,5,5,5" Orientation="Vertical" ShowFar="false" Margins="0,-10,0,0" Rotation="15deg;0,1,0">
						<Layout>
							<FlowLayout Orientation="Vertical" ItemAlignment="Center" />
						</Layout>
						<LayoutInput>
							<AnchorLayoutInput Top="FocusBg, 1, -5" />
						</LayoutInput>
						<Children>
							<Panel Name="MirrorContstraintPanel" ColorFilter="color://s:MirrorFilter" Alpha="global://s:MirrorAlpha" CenterPointPercent="0.5,0.5,0.5" Rotation="180deg;1,0,0">
								<Layout>
									<AnchorLayout SizeToHorizontalChildren="false" SizeToVerticalChildren="false"/>
								</Layout>
								<Children>
									<Graphic Name="MirrorArt" SizingPolicy="SizeToConstraint" MaintainAspectRatio="true" >
									</Graphic>
								</Children>
							</Panel>
						</Children>
					</Clip>
				</Children>

				<!--Animations>
          <Animation Type="Scale" CenterPointPercent="0.5,0.5,0.5">
            <Keyframes>
              <ScaleKeyframe Time="0" RelativeTo="Current" Interpolation="Log"/>
              <ScaleKeyframe Time="0.35" RelativeTo="Final"/>
            </Keyframes>
          </Animation>
        </Animations-->
			</Graphic>
		</Content>
	</UI>
</Mcml>
