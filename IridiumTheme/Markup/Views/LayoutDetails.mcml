<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
      xmlns:cor="assembly://MSCorLib/System"
      xmlns:a="assembly://MediaBrowser/MediaBrowser"
      xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
      xmlns:ib="resx://Iridium/Iridium.Resources/ItemButton"
      xmlns:is="file://Iridium_Styles.mcml"
      xmlns:s="file://Styles_DoNotEdit.mcml"
      xmlns:f="file://Fonts_DoNotEdit.mcml"
      xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
      xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
      xmlns:in="resx://MediaBrowser/MediaBrowser.Resources/InfoMarquee"
      xmlns:vsb="resx://Iridium/Iridium.Resources/SimpleButton"
      xmlns:vi="resx://Iridium/Iridium.Resources/Images"
      xmlns:bd="resx://Iridium/Iridium.Resources/Backdrop"
      xmlns:mpaa="resx://MediaBrowser/MediaBrowser.Resources/MPAARating"
      xmlns:mip="resx://MediaBrowser/MediaBrowser.Resources/MediaInfoPanel"
      xmlns:sr="resx://Iridium/Iridium.Resources/StarRating"
      xmlns:lv="resx://Iridium/Iridium.Resources/LabelValue"
      xmlns:st="resx://Iridium/Iridium.Resources/AutoScrollableText"
      xmlns:anim="resx://Iridium/Iridium.Resources/Animations"
      xmlns:dls="resx://Iridium/Iridium.Resources/LayoutDetailsQuickList"
      xmlns:jil="resx://MediaBrowser/MediaBrowser.Resources/JilSelector"
      xmlns:gl="resx://MediaBrowser/MediaBrowser.Resources/GenreList"
      xmlns:slp="resx://Iridium/Iridium.Resources/ShortlistScroller"
      xmlns:dbs="resx://Iridium/Iridium.Resources/LayoutDetailsBannerList"
      xmlns:imb="resx://Iridium/Iridium.Resources/ImageButton"
      xmlns:ih="assembly://Iridium/Iridium"
      xmlns:me="me">

	<UI Name="IridiumLayoutDetails">
		<Properties>
			<a:Application Name="Application" Application="$Required" />
			<lib:FolderModel Name="Folder" FolderModel="$Required" />
			<ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
			<ih:MyShortlist Name="MyShortlist" />

			<Animation Name="MovePanelRight">
				<Keyframes>
					<PositionKeyframe Time="0.0" RelativeTo="Current" Value="0,0,0" Interpolation="Bezier,-0.5,1.0" />
					<PositionKeyframe Time="0.5" RelativeTo="Final" Value="750,0,0" />
				</Keyframes>
			</Animation>
			<Animation Name="MovePanelLeft">
				<Keyframes>
					<PositionKeyframe Time="0.0" RelativeTo="Current" Value="0,0,0" Interpolation="Bezier,-0.5,1.0" />
					<PositionKeyframe Time="0.5" RelativeTo="Final" Value="0,0,0" />
				</Keyframes>
			</Animation>
		</Properties>

		<Locals>
			<lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
			<lib:Item Name="CurrentItem" Item="null" />
			<IntRangedValue Name="SelectRepeaterIndex" />
			<Timer Name="InfoTimer" AutoRepeat="false" Interval="400" Enabled="false" />
			<BooleanChoice Name="HasFocus" Value="false" />

			<ShortcutHandler Name="Blue" Shortcut="Blue" HandlerStage="Bubbled" Handle="true" />
			<KeyHandler Name="JilKey" Key="J" Handle="true" Modifiers="Control" HandlerStage="Bubbled" />
			<Command Name="HideJil" />

			<BooleanChoice Name="ShortlistHasFocus" Value="false" />
			
			<Command Name="AddToShortlistCommand" />
			<Command Name="GetShortlist" />
			<Command Name="ClearShortlist" />
			<Command Name="CloseShortlist" />

			<Command Name="ShortlistFocus" />
			<Command Name="ShortlistFocusLost" />
		
			<BooleanChoice Name="ListHasFocus" Value="false" />	
			<BooleanChoice Name="DummyHasFocus" Value="false" />	
		    <KeyHandler Key="Left" Name="ShowOverview" Handle="false" HandlerStage="Bubbled"/>
			<!--<KeyHandler Key="Right" Name="HideOverview" Handle="false" HandlerStage="Bubbled" />-->
			<Command Name="HideOverview" />
			
		
		</Locals>

		<Rules>

			<Binding Target="[Application.CurrentItem]" Source="[Folder.SelectedChild]" />
			<Binding Target="[ThemeHelper.CurrentItem]" Source="[Folder.SelectedChild]" />


			<!-- JIL Command -->
			<Rule ConditionLogicalOp="Or">
				<Conditions>
					<Modified Source="[JilKey.Invoked]" />
					<Modified Source="[Blue.Invoked]" />
				</Conditions>
				<Actions>
					<PlaySound Sound="sound://sounds:Miniselect" />
					<Set Target="[JilPanel.Visible]" Value="true" />
					<Invoke Target="[JilPanel.NavigateInto]" />
				</Actions>
			</Rule>

			<Changed Source="[HideJil.Invoked]">
				<Actions>
					<Set Target="[JilPanel.Visible]" Value="false" />
				</Actions>
			</Changed>

			<!-- Folder Pref Backdrop -->
			<!-- Backdrop-->
			<Binding Target="[Backdrop.Image]" Source="[Folder.SelectedChild.BackdropImage]" />
			<Binding Target="[Backdrop.Item]" Source="[Folder.SelectedChild]" />
			<Binding Target="[Backdrop.Visible]" Source="[ThemeHelper.Config.FolderShowBackdrop]">
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderShowBackdrop]" ConditionOp="Equals" Value="true" />
				</Conditions>
			</Binding>

			<!-- DETAIL QUICKLIST VIEW-->
			<!--<Binding Target="[ListPanel.Visible]" Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="false" />
        </Conditions>
      </Binding>
      
      <Binding Target="[QuickListPanel.Visible]" Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>-->

			<!-- Backdrop Overlay-->
			<Binding Target="[Overlay.Visible]" Source="[ThemeHelper.Config.FolderShowBackdropOverlay]">
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderShowBackdropOverlay]" ConditionOp="Equals" Value="true" />
				</Conditions>
			</Binding>
			<Binding Target="[Overlay.Alpha]" Source="[ThemeHelper.Config.FolderBackdropOverlayAlpha]" />

			<!--<Binding Target="[ThumbArt.Alpha]" Source="[ThemeHelper.Config.FolderDetailsThumbAlpha]"/>-->

			<!-- Overview/List Items Visiblity/Content -->
			<!--<Binding Source="[SelectedItem.Overview]" Target="[Overview.Content]" />

      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[SelectedItem.IsFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[ThemeHelper.Config.FolderInfoDisplay]" ConditionOp="Equals" Value="Overview" />
        </Conditions>
        <Actions>
          <Set Target="[Overview.Visible]" Value="true" />
          <Set Target="[ItemsTextList.Visible]" Value="false" />
          <Set Target="[ItemsThumbList.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[SelectedItem.IsFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.FolderInfoDisplay]" ConditionOp="Equals" Value="Text List" />
        </Conditions>
        <Actions>
          <Invoke Target="[ThemeHelper.LoadDisplayPrefs]" folder="[SelectedFolder]" InvokePolicy="Synchronous" />
          <Set Target="[ItemsTextList.Folder]" Value="[SelectedFolder]" />
          <Set Target="[ItemsTextList.Visible]" Value="true" />
          <Set Target="[Overview.Visible]" Value="false" />
          <Set Target="[ItemsThumbList.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[SelectedItem.IsFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelperConfig.FolderInfoDisplay]" ConditionOp="Equals" Value="Thumb List" />
        </Conditions>
        <Actions>
          <Invoke Target="[ThemeHelper.LoadDisplayPrefs]" folder="[SelectedFolder]" InvokePolicy="Synchronous" />
          <Set Target="[ItemsThumbList.Folder]" Value="[SelectedFolder]" />
          <Set Target="[ItemsThumbList.Visible]" Value="true" />
          <Set Target="[ItemsTextList.Visible]" Value="false" />
          <Set Target="[Overview.Visible]" Value="false" />
        </Actions>
      </Rule>-->

			<!--Force focus to scroller-->
			<Changed Source="[InfoTimer.Tick]" ConditionLogicalOp="And">
				<Conditions>
					<Equality Source="[Input.DeepKeyFocus]" ConditionOp="Equals" Value="false" />
					<Equality Source="[ThemeHelper.IsMenuOpen]" ConditionOp="Equals" Value="false" />
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" Value="false" />
				</Conditions>
				<Actions>
					<Invoke Target="[ListItems.NavigateInto]"></Invoke>
				</Actions>
			</Changed>

			<Changed Source="[InfoTimer.Tick]" ConditionLogicalOp="And">
				<Conditions>
					<Equality Source="[Input.DeepKeyFocus]" ConditionOp="Equals" Value="false" />
					<Equality Source="[ThemeHelper.IsMenuOpen]" ConditionOp="Equals" Value="false" />
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" Value="true" />
				</Conditions>
				<Actions>
					<Invoke Target="[QuickListItems.NavigateInto]"></Invoke>
				</Actions>
			</Changed>


			<!-- Show/Hide Overview -->
			<Rule>
				<Conditions>
					<Equality Source="[ListHasFocus.Value]" ConditionOp="Equals" Value="true" />
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="false" />
					<Equality Source="[Folder.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="false" />
				</Conditions>
				<Actions>
					<Set Target="[LeftArrow.Visible]" Value="true" />
					<Set Target="[RightArrow.Visible]" Value="false" />
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Equality Source="[ListHasFocus.Value]" ConditionOp="Equals" Value="false" />
				    <Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="false" />
					<Equality Source="[Folder.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="false" />
				</Conditions>
				<Actions>
					<Set Target="[LeftArrow.Visible]" Value="false" />
					<Set Target="[RightArrow.Visible]" Value="true" />
					<Set Target="[RightArrow.Margins]" Value="600,0,0,0"/>
				</Actions>
			</Rule>

			<Changed Source="[ShowOverview.Invoked]">
				<Conditions>
					<Equality Source="[ListHasFocus.Value]" ConditionOp="Equals" Value="true" />
				    <Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="false" />
					<Equality Source="[Folder.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="false" />
				</Conditions>
				<Actions>
					<PlayAnimation Target="[ListPanel]">
						<Animation>
							<Animation Animation="[MovePanelRight]" />
						</Animation>
					</PlayAnimation>
					<PlayAnimation Target="[SelectedTitleBG]">
						<Animation>
							<Animation Animation="[MovePanelRight]" />
						</Animation>
					</PlayAnimation>
					<PlayAnimation Target="[ListViewBG]">
						<Animation>
							<Animation Animation="[MovePanelRight]" />
						</Animation>
					</PlayAnimation>
					<PlayAnimation Target="[PosterPanel]">
						<Animation>
							<Animation Animation="[MovePanelRight]" />
						</Animation>
					</PlayAnimation>
					<PlayAnimation Target="[SummaryPopoutPanel]">
						<Animation>
							<Animation Animation="[MovePanelRight]" />
						</Animation>
					</PlayAnimation>
					<Invoke Target="[DummyNav.NavigateInto]" />
					<Set Target="[DummyHasFocus.Value]" Value="true" />
				</Actions>
			</Changed>

			
			<Changed Source="[DummyHasFocus.Value]" >
				<Conditions>
					<Equality Source="[DummyHasFocus.Value]" ConditionOp="NotEquals" Value="true" />
				    <Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="false" />
					<Equality Source="[Folder.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="false" />
				</Conditions>
				<Actions>
					<PlayAnimation Target="[ListPanel]">
						<Animation>
							<Animation Animation="[MovePanelLeft]" />
						</Animation>
					</PlayAnimation>
					<PlayAnimation Target="[SelectedTitleBG]">
						<Animation>
							<Animation Animation="[MovePanelLeft]" />
						</Animation>
					</PlayAnimation>
					<PlayAnimation Target="[ListViewBG]">
						<Animation>
							<Animation Animation="[MovePanelLeft]" />
						</Animation>
					</PlayAnimation>
					<PlayAnimation Target="[PosterPanel]">
						<Animation>
							<Animation Animation="[MovePanelLeft]" />
						</Animation>
					</PlayAnimation>
					<PlayAnimation Target="[SummaryPopoutPanel]">
						<Animation>
							<Animation Animation="[MovePanelLeft]" />
						</Animation>
					</PlayAnimation>
					<Set Target="[ListHasFocus.Value]" Value="true" />
					<Invoke Target="[ListItems.NavigateInto]" />
					
				</Actions>
			</Changed>
			
			<Changed Source="[Input.KeyFocus]">
				<Conditions>
					<Equality Source="[Input.KeyFocus]" Value="true" />
				</Conditions>
				<Actions>
					<Set Target="[HasFocus.Value]" Value="true" />
				</Actions>
			</Changed>
			<Changed Source="[Input.KeyFocus]">
				<Conditions>
					<Equality Source="[Input.KeyFocus]" Value="false" />
				</Conditions>
				<Actions>
					<Set Target="[HasFocus.Value]" Value="false" />
				</Actions>
			</Changed>


			<!--ITEM COUNTER-->
			<Binding Source="[Folder.SelectedChildIndex.ToString]" Target="[List_Counter.Content]">
				<Transformer>
					<MathTransformer Add="1" />
				</Transformer>
			</Binding>

			<Binding Source="[Folder.Children.Count]" Target="[List_Total.Content]">
				<Transformer>
					<FormatTransformer Format="|{0}" />
				</Transformer>
			</Binding>

			<!-- NORMAL INFO BINDING -->
			<Binding Source="[Folder.SelectedChild]" Target="[MediaInfoPanel.Item]" />
			<!--<Binding Target="[Summary.Text]" Source="[Folder.SelectedChild.Overview]"></Binding>-->
			<Binding Target="[SummaryPopout.Text]" Source="[Folder.SelectedChild.Overview]"></Binding>
			<Binding Source="[Folder.SelectedChild.RunningTimeString]" Target="[SideInfo.Value]"></Binding>
			<Binding Source="[Folder.SelectedChild.MpaaRating]" Target="[mpaa.Value]"></Binding>

			<Binding Source="[Folder.SelectedChild.LastPlayedString]" Target="[LastPlayedValue.Content]" />
			<Condition Source="[Folder.SelectedChild.LastPlayedString]" ConditionOp="Equals" SourceValue=""
			           Target="[LastPlayedValue.Content]" Value="Never" />


			<Default Value="RUNTIME: " Target="[SideInfo.Label]"></Default>
			<Default Value="[Application.LocalStrings.#RunsStr!cor:String] " Target="[SideInfo.Label]"></Default>
			<!-- NORMAL INFO BINDING END -->
			
			
			
			<!-- BANNER INFO BINDING -->
			<Binding Source="[Folder.SelectedChild.Name]" Target="[ItemTitle.Content]">
				<Transformer>
					<FormatTransformer ToUpper="true"/>
				</Transformer>
			</Binding>
			<Binding Source="[Folder.SelectedChild]" Target="[BMediaInfoPanel.Item]" />
			
			<Binding Target="[BGenres.SourceData]" Source="[Folder.SelectedChild.Genres]" />
			<!--<Binding Target="[Summary.Text]" Source="[Folder.SelectedChild.Overview]"></Binding>-->
			<Binding Target="[BSummary.Text]" Source="[Folder.SelectedChild.Overview]"></Binding>
			<Binding Source="[Folder.SelectedChild.RunningTimeString]" Target="[BSideInfo.Value]"></Binding>
			<Binding Source="[Folder.SelectedChild.MpaaRating]" Target="[Bmpaa.Value]"></Binding>

			<Binding Source="[Folder.SelectedChild.LastPlayedString]" Target="[LastPlayedValue.Content]" />
			<Condition Source="[Folder.SelectedChild.LastPlayedString]" ConditionOp="Equals" SourceValue="" Target="[LastPlayedValue.Content]" Value="Never" />


			<Default Value="RUNTIME: " Target="[BSideInfo.Label]"></Default>
			<Default Value="[Application.LocalStrings.#RunsStr!cor:String] " Target="[BSideInfo.Label]"></Default>
			
			<Binding Source="[Folder.SelectedChild.PrimaryImage]" Target="[BItemImage.Content]" />
			
			<!-- IMDB RATINGS VALUES -->
			<Binding Source="[Folder.SelectedChild.ImdbRating]" Target="[BStarRating.Value]"></Binding>
			<Binding Source="[Folder.SelectedChild.ImdbRating]" Target="[BStarRating.ImdbValue]"></Binding>
			<Binding Source="[Folder.SelectedChild.CriticRating]" Target="[BStarRating.RTValue]" />
			<Binding Source="[Folder.SelectedChild.RottenTomatoImage]" Target="[BStarRating.RTImage]" />
			<!-- BANNER INFO BINDING ENDS -->
			
			
			

			<!--<Binding Source="[ThemeHelper.EndTime]" Target="[SideInfo1.Value]"></Binding>
      <Default Value="[Application.LocalStrings.#EndStr!cor:String]" Target="[SideInfo1.Label]"></Default>-->

			<Default Target="[TitleSupportlv.Label]" Value="[Application.LocalStrings.#DirectorStr!cor:String]"></Default>
			<Binding Target="[TitleSupportlv.Value]" Source="[Folder.SelectedChild.DirectorString]"></Binding>

			<Default Target="[TitleSupportlv1.Label]" Value="[Application.LocalStrings.#WritersStr!cor:String]"></Default>
			<Binding Target="[TitleSupportlv1.Value]" Source="[Folder.SelectedChild.WritersString]" />

			<Binding Target="[Genres.SourceData]" Source="[Folder.SelectedChild.Genres]" />
			<!--<Default Target="[TitleSupportlv2.Label]" Value="[Application.LocalStrings.#GenresStr!cor:String]"></Default>
      <Binding Target="[TitleSupportlv2.Value]" Source="[ThemeHelper.GenreString]"></Binding>-->

			<Default Target="[TitleSupportlv3.Label]" Value="[Application.LocalStrings.#AiredStr!cor:String]">
				<Conditions>
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="Equals" Value="Episode" />
				</Conditions>
			</Default>
			<Binding Target="[TitleSupportlv3.Value]" Source="[Folder.SelectedChild.FirstAired]">
				<Conditions>
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="Equals" Value="Episode" />
				</Conditions>
			</Binding>
			<Default Target="[TitleSupportlv3.Label]" Value="[Application.LocalStrings.#YearStr!cor:String]">
				<Conditions>
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
				</Conditions>
			</Default>
			<Binding Target="[TitleSupportlv3.Value]" Source="[Folder.SelectedChild.ProductionYearString]">
				<Conditions>
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
				</Conditions>
			</Binding>

			<!-- IMDB RATINGS VALUES -->
			<Binding Source="[Folder.SelectedChild.ImdbRating]" Target="[StarRating.Value]"></Binding>
			<Binding Source="[Folder.SelectedChild.ImdbRating]" Target="[StarRating.ImdbValue]"></Binding>
			<Binding Source="[Folder.SelectedChild.CriticRating]" Target="[StarRating.RTValue]" />
			<Binding Source="[Folder.SelectedChild.RottenTomatoImage]" Target="[StarRating.RTImage]" />

			<Binding Source="[Folder.SelectedChild.UnwatchedCountString]" Target="[UnwatchedCount.Content]" />
			<Changed Source="[Folder.SelectedChild.ShowUnwatched]">
				<Actions>
					<Set Target="[UnwatchedCount.Content]" Value="[Folder.SelectedChild.UnwatchedCountString]" />
				</Actions>
			</Changed>

			<Rule>
				<Conditions>
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="Equals" Value="Series" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="Equals" Value="Season" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
				</Conditions>
				<Actions>
					<Set Target="[UnwatchedPanel.Visible]" Value="true" />
					<Set Target="[Title.Visible]" Value="false" />
				</Actions>
			</Rule>
			<Default Target="[UnwatchedPanel.Visible]" Value="false" />

			<!--LOGO'S LOGIC
      <Binding Target="[Title.Content]"       Source="[Folder.SelectedChild.Name]"/>
      <Binding Target="[LogoImage.Content]" Source="[Folder.SelectedChild.LogoImage]"/>

      <Rule>
        <Conditions>
          <Equality Source="[Folder.SelectedChild.HasLogoImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season"/>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode"/>
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
        </Actions>
      </Rule>
      <Default Target="[LogoImage.Visible]" Value="false"/>
      <Default Target="[Title.Visible]" Value="true"/>-->

			<!-- Thumb Art Images
      <Binding Source="[Folder.SelectedChild.ThumbnailImage]" Target="[ThumbArt.Content]">
        <Conditions>
          <Equality Source="[Folder.SelectedChild.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ThumbArt.Content]" Value="[Folder.SelectedChild.ThumbnailImage]" />
          <Set Target="[Logo.Visible]" Value="false" />
        </Actions>
      </Binding>

      <Binding Source="[Folder.SelectedChild.PrimaryImage]" Target="[ThumbArt.Content]">
        <Conditions>
          <Equality Source="[Folder.SelectedChild.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="Equals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ThumbArt.Content]" Value="[Folder.SelectedChild.PrimaryImage]" />
          <Set Target="[Logo.Visible]" Value="false" />
        </Actions>
      </Binding>
      
      <Binding Source="[Folder.SelectedChild.PrimaryBackdropImage]" Target="[ThumbArt.Content]">
        <Conditions>
          <Equality Source="[Folder.SelectedChild.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[ThumbArt.Content]" Value="[Folder.SelectedChild.PrimaryBackdropImage]" />
          <Set Target="[Logo.Visible]" Value="true" />
        </Actions>
      </Binding>

      <Binding Source="[Folder.SelectedChild.LogoImage]" Target="[Logo.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsMusicFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Folder.SelectedChild.HasBackdropImage]" ConditionOp ="Equals" Value="true"/>
        </Conditions>
      </Binding>-->

			<!-- Conditions for Title or Fanart views-->
			<Binding Source="[Folder.SelectedChild.Name]" Target="[Title.Content]" />
			<Binding Source="[Folder.SelectedChild.PrimaryImage]" Target="[PosterImage.Content]" />
			<Binding Source="[Folder.SelectedChild.PrimaryImage]" Target="[ListPosterImage.Content]" />
			<Binding Source="[Folder.SelectedChild.LogoImage]" Target="[LogoImage.Content]" />
			<Binding Source="[Folder.SelectedChild.ArtImage]" Target="[ClearArtImage.Content]" />
			<Binding Source="[Folder.SelectedChild.ThumbnailImage]" Target="[ThumbnailImage.Content]" />

			<!-- POSTERS -->
			<Rule>
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Poster" />
					<Equality Source="[Folder.SelectedChild.HasPrimaryImage]" ConditionOp="Equals" Value="true" />
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" Value="false" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
				</Conditions>
				<Actions>
					<Set Target="[PosterImage.Visible]" Value="true" />
					<Set Target="[LogoImage.Visible]" Value="false" />
					<Set Target="[Title.Visible]" Value="false" />
					<Set Target="[ClearArtImage.Visible]" Value="false" />
					<Set Target="[ThumbnailImage.Visible]" Value="false" />
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Poster" />
					<Equality Source="[Folder.SelectedChild.HasPrimaryImage]" ConditionOp="NotEquals" Value="true" />
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" Value="false" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
				</Conditions>
				<Actions>
					<Set Target="[PosterImage.Visible]" Value="false" />
					<Set Target="[LogoImage.Visible]" Value="false" />
					<Set Target="[Title.Visible]" Value="true" />
					<Set Target="[ClearArtImage.Visible]" Value="false" />
					<Set Target="[ThumbnailImage.Visible]" Value="false" />
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Poster" />
					<Equality Source="[Folder.SelectedChild.HasPrimaryImage]" ConditionOp="Equals" Value="true" />
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" Value="true" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
				</Conditions>
				<Actions>
					<Set Target="[PosterImage.Visible]" Value="false" />
					<Set Target="[LogoImage.Visible]" Value="false" />
					<Set Target="[Title.Visible]" Value="false" />
					<Set Target="[ClearArtImage.Visible]" Value="false" />
					<Set Target="[ThumbnailImage.Visible]" Value="false" />
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Poster" />
					<Equality Source="[Folder.SelectedChild.HasPrimaryImage]" ConditionOp="NotEquals" Value="false" />
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" Value="true" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
				</Conditions>
				<Actions>
					<Set Target="[PosterImage.Visible]" Value="false" />
					<Set Target="[LogoImage.Visible]" Value="false" />
					<Set Target="[Title.Visible]" Value="false" />
					<Set Target="[ClearArtImage.Visible]" Value="false" />
					<Set Target="[ThumbnailImage.Visible]" Value="false" />
				</Actions>
			</Rule>

			<!--Logos-->
			<Rule>
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Logo" />
					<Equality Source="[Folder.SelectedChild.HasLogoImage]" ConditionOp="Equals" Value="true" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
				</Conditions>
				<Actions>
					<Set Target="[LogoImage.Visible]" Value="true" />
					<Set Target="[Title.Visible]" Value="false" />
					<Set Target="[ClearArtImage.Visible]" Value="false" />
					<Set Target="[ThumbnailImage.Visible]" Value="false" />
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Logo" />
					<Equality Source="[Folder.SelectedChild.HasLogoImage]" ConditionOp="Equals" Value="false" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
				</Conditions>
				<Actions>
					<Set Target="[LogoImage.Visible]" Value="false" />
					<Set Target="[Title.Visible]" Value="true" />
					<Set Target="[ClearArtImage.Visible]" Value="false" />
					<Set Target="[ThumbnailImage.Visible]" Value="false" />
				</Actions>
			</Rule>

			<!--ClearArt-->
			<Rule>
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ClearArt" />
					<Equality Source="[Folder.SelectedChild.HasArtImage]" ConditionOp="Equals" Value="true" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
				</Conditions>
				<Actions>
					<Set Target="[ClearArtImage.Visible]" Value="true" />
					<Set Target="[Title.Visible]" Value="false" />
					<Set Target="[LogoImage.Visible]" Value="false" />
					<Set Target="[ThumbnailImage.Visible]" Value="false" />
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ClearArt" />
					<Equality Source="[Folder.SelectedChild.HasArtImage]" ConditionOp="Equals" Value="false" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
				</Conditions>
				<Actions>
					<Set Target="[ClearArtImage.Visible]" Value="false" />
					<Set Target="[Title.Visible]" Value="true" />
					<Set Target="[LogoImage.Visible]" Value="false" />
					<Set Target="[ThumbnailImage.Visible]" Value="false" />
				</Actions>
			</Rule>

			<!--ThumbNailArt-->
			<Rule>
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ThumbArt" />
					<Equality Source="[Folder.SelectedChild.HasThumbnailImage]" ConditionOp="Equals" Value="True" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
				</Conditions>
				<Actions>
					<Set Target="[ThumbnailImage.Visible]" Value="true" />
					<Set Target="[Title.Visible]" Value="false" />
					<Set Target="[LogoImage.Visible]" Value="false" />
					<Set Target="[ClearArtImage.Visible]" Value="false" />
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ThumbArt" />
					<Equality Source="[Folder.SelectedChild.HasThumbnailImage]" ConditionOp="Equals" Value="false" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
					<Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
				</Conditions>
				<Actions>
					<Set Target="[ThumbnailImage.Visible]" Value="false" />
					<Set Target="[Title.Visible]" Value="true" />
					<Set Target="[LogoImage.Visible]" Value="false" />
					<Set Target="[ClearArtImage.Visible]" Value="false" />
				</Actions>
			</Rule>
			<Default Target="[Title.Visible]" Value="true" />

			<!-- WHICH LIST TO SHOW DEPENDANT ON OPTIONS-->
			<Changed Source="[Folder.DisplayPrefs.UseBanner.Value]" InitialEvaluate="true">
				<Conditions>
					<Equality Source="[Folder.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="true" />
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="true" />
				</Conditions>
				<Actions>
					<Set Target="[ListPanel.Visible]" Value="false" />
					<Set Target="[BannerListPanel.Visible]" Value="false" />
					<Set Target="[QuickListPanel.Visible]" Value="true" />
				    <Set Target="[ListViewBG.Visible]" Value="false" />
			        <Set Target="[SelectedTitleBG.Visible]" Value="false" />
				    <Set Target="[LeftArrow.Visible]" Value="false" />
				    <Set Target="[RightArrow.Visible]" Value="false" />
					<Set Target="[BannerInfoPanel.Visible]" Value="false" />
					<Set Target="[PosterPanel.Visible]" Value="false" />
				
				</Actions>
			</Changed>

			<Changed Source="[Folder.DisplayPrefs.UseBanner.Value]" InitialEvaluate="true">
				<Conditions>
					<Equality Source="[Folder.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="false" />
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="true" />
				</Conditions>
				<Actions>
					<Set Target="[ListPanel.Visible]" Value="false" />
					<Set Target="[BannerListPanel.Visible]" Value="false" />
					<Set Target="[QuickListPanel.Visible]" Value="true" />
					<Set Target="[ListViewBG.Visible]" Value="false" />
			        <Set Target="[SelectedTitleBG.Visible]" Value="false" />
					<Set Target="[LeftArrow.Visible]" Value="false" />
				    <Set Target="[RightArrow.Visible]" Value="false" />
				<Set Target="[BannerInfoPanel.Visible]" Value="false" />
				<Set Target="[PosterPanel.Visible]" Value="false" />
				</Actions>
			</Changed>

			<Changed Source="[Folder.DisplayPrefs.UseBanner.Value]" InitialEvaluate="true">
				<Conditions>
					<Equality Source="[Folder.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="true" />
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="false" />
				</Conditions>
				<Actions>
					<Set Target="[ListPanel.Visible]" Value="false" />
					<Set Target="[BannerListPanel.Visible]" Value="true" />
					<Set Target="[QuickListPanel.Visible]" Value="false" />
					<Set Target="[ListViewBG.Visible]" Value="false" />
			        <Set Target="[SelectedTitleBG.Visible]" Value="false" />
					<Set Target="[LeftArrow.Visible]" Value="false" />
				    <Set Target="[RightArrow.Visible]" Value="false" />
					<Set Target="[BannerInfoPanel.Visible]" Value="true" />
				<Set Target="[PosterPanel.Visible]" Value="false" />
				</Actions>
			</Changed>

			<Changed Source="[Folder.DisplayPrefs.UseBanner.Value]" InitialEvaluate="true">
				<Conditions>
					<Equality Source="[Folder.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="false" />
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="false" />
				</Conditions>
				<Actions>
					<Set Target="[ListPanel.Visible]" Value="true" />
					<Set Target="[BannerListPanel.Visible]" Value="false" />
					<Set Target="[QuickListPanel.Visible]" Value="false" />
					<Set Target="[ListViewBG.Visible]" Value="true" />
			        <Set Target="[SelectedTitleBG.Visible]" Value="true" />
					<Set Target="[LeftArrow.Visible]" Value="true" />
				    <Set Target="[RightArrow.Visible]" Value="true" />
				<Set Target="[BannerInfoPanel.Visible]" Value="false" />
				<Set Target="[PosterPanel.Visible]" Value="true" />
				</Actions>
			</Changed>

			<Changed Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" InitialEvaluate="true">
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="true" />
					<Equality Source="[Folder.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="true" />
				</Conditions>
				<Actions>
					<Set Target="[ThumbnailPanel.Visible]" Value="false" />
					<Set Target="[InfoPanel.Visible]" Value="false" />
					<Set Target="[MediaInfoPanel.Visible]" Value="false" />
					<Set Target="[BannerListPanel.Visible]" Value="false" />
					<Set Target="[ListPanel.Visible]" Value="false" />
					<Set Target="[QuickListPanel.Visible]" Value="true" />
				    <Set Target="[ListViewBG.Visible]" Value="false" />
			        <Set Target="[SelectedTitleBG.Visible]" Value="false" />
					<Set Target="[LeftArrow.Visible]" Value="false" />
				    <Set Target="[RightArrow.Visible]" Value="false" />
				<Set Target="[BannerInfoPanel.Visible]" Value="false" />
				<Set Target="[PosterPanel.Visible]" Value="false" />
				</Actions>
			</Changed>
			<Changed Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" InitialEvaluate="true">
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="true" />
					<Equality Source="[Folder.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="false" />
				</Conditions>
				<Actions>
					<Set Target="[ThumbnailPanel.Visible]" Value="false" />
					<Set Target="[InfoPanel.Visible]" Value="false" />
					<Set Target="[MediaInfoPanel.Visible]" Value="false" />
					<Set Target="[BannerListPanel.Visible]" Value="false" />
					<Set Target="[ListPanel.Visible]" Value="false" />
					<Set Target="[QuickListPanel.Visible]" Value="true" />
				    <Set Target="[ListViewBG.Visible]" Value="false" />
			        <Set Target="[SelectedTitleBG.Visible]" Value="false" />
					<Set Target="[LeftArrow.Visible]" Value="false" />
				    <Set Target="[RightArrow.Visible]" Value="false" />
				    <Set Target="[BannerInfoPanel.Visible]" Value="false" />
				<Set Target="[PosterPanel.Visible]" Value="false" />
				</Actions>
			</Changed>

			<Changed Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" InitialEvaluate="true">
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="false" />
					<Equality Source="[Folder.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="true" />
				</Conditions>
				<Actions>
					<Set Target="[ThumbnailPanel.Visible]" Value="true" />
					<Set Target="[InfoPanel.Visible]" Value="true" />
					<Set Target="[MediaInfoPanel.Visible]" Value="true" />
					<Set Target="[BannerListPanel.Visible]" Value="true" />
					<Set Target="[ListPanel.Visible]" Value="false" />
					<Set Target="[QuickListPanel.Visible]" Value="false" />
				    <Set Target="[ListViewBG.Visible]" Value="false" />
			        <Set Target="[SelectedTitleBG.Visible]" Value="false" />
					<Set Target="[LeftArrow.Visible]" Value="false" />
				    <Set Target="[RightArrow.Visible]" Value="false" />
				<Set Target="[BannerInfoPanel.Visible]" Value="false" />
				<Set Target="[PosterPanel.Visible]" Value="false" />
				</Actions>
			</Changed>
			<Changed Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" InitialEvaluate="true">
				<Conditions>
					<Equality Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" ConditionOp="Equals" Value="false" />
					<Equality Source="[Folder.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="false" />
				</Conditions>
				<Actions>
					<Set Target="[ThumbnailPanel.Visible]" Value="true" />
					<Set Target="[InfoPanel.Visible]" Value="true" />
					<Set Target="[MediaInfoPanel.Visible]" Value="true" />
					<Set Target="[BannerListPanel.Visible]" Value="false" />
					<Set Target="[ListPanel.Visible]" Value="true" />
					<Set Target="[QuickListPanel.Visible]" Value="false" />
				    <Set Target="[ListViewBG.Visible]" Value="true" />
			        <Set Target="[SelectedTitleBG.Visible]" Value="true" />
					<Set Target="[LeftArrow.Visible]" Value="true" />
				    <Set Target="[RightArrow.Visible]" Value="true" />
				<Set Target="[BannerInfoPanel.Visible]" Value="false" />
				<Set Target="[PosterPanel.Visible]" Value="true" />
				</Actions>
			</Changed>
			<Binding Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" Target="[ThumbnailPanel.Visible]" />
			<Binding Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" Target="[InfoPanel.Visible]" />
			<Binding Source="[ThemeHelper.Config.FolderShowDetailsQuickList]" Target="[MediaInfoPanel.Visible]" />
			<Binding Source="[Folder.DisplayPrefs.UseBanner.Value]" Target="[BannerListPanel.Visible]" />


			<Binding Source="[Folder.SelectedChild.IsMissing]" Target="[MissingIndicator.Visible]" />
			<Binding Source="[Folder.SelectedChild.IsFuture]" Target="[FutureIndicator.Visible]" />
			<Binding Source="[Folder.SelectedChild.IsRemoteContent]" Target="[RemoteContentImage.Visible]"
			         ConditionLogicalOp="And">
				<Conditions>
					<Equality Source="[Application.Config.ShowRemoteIndicatorOnPosters]" Value="true" />
				</Conditions>
			</Binding>

			<!-- SHORTLIST ICON LOGIC -->
			<Binding Source="[MyShortlist.IsItemInShortlist]" Target="[ShortlistIcon.Visible]" />
			<Condition Source="[MyShortlist.IsItemInShortlist]" ConditionOp="Equals" SourceValue="true"
			           Target="[ShortlistIcon.Visible]" Value="true" />
			<Condition Source="[MyShortlist.IsItemInShortlist]" ConditionOp="Equals" SourceValue="false"
			           Target="[ShortlistIcon.Visible]" Value="false" />

			<Changed Source="[Folder.SelectedChild]">
				<Actions>
					<Invoke Target="[MyShortlist.ItemInShortlist]" />
				</Actions>
			</Changed>

			<Rule>
				<Conditions>
					<Equality Source="[MyShortlist.IsItemInShortlist]" ConditionOp="Equals" Value="true" />
				</Conditions>
				<Actions>
					<Set Target="[ShortlistIcon.Visible]" Value="true" />
				</Actions>
			</Rule>

			<Changed Source="[MyShortlist.IsItemInShortlist]">
				<Actions>
					<Set Target="[ShortlistIcon.Visible]" Value="[MyShortlist.IsItemInShortlist]" />
				</Actions>
			</Changed>

		</Rules>
		<Content>

			<Panel Layout="Form">
				<Children>

					<!--Jil Selector-->
					<Panel Name="JilPanel" Visible="false" Layout="Scale" Margins="150,0,150,20">
						<LayoutInput>
							<FormLayoutInput Top="Parent,0,100" />
						</LayoutInput>
						<Animations>
							<Animation Type="Show">
								<Keyframes>
									<AlphaKeyframe Time="0.0" Value="0" />
									<AlphaKeyframe Time="0.4" Value="1" Interpolation="SCurve" />
									<PositionKeyframe Time="0.0" Value="0,-50,0" />
									<PositionKeyframe Time="0.4" Value="0,0,0" Interpolation="SCurve" />
								</Keyframes>
							</Animation>
						</Animations>
						<Children>
							<jil:JilSelector Name="JIL" Application="[Application]" Folder="[Folder]" LostFocus="[HideJil]"
							                 Margins="0,0,4,0" />
						</Children>
					</Panel>

					<Panel Name="CounterPanel">
						<LayoutInput>
							<FormLayoutInput Top="Parent,1,-43" Bottom="Parent,1,0" Right="Parent,1,-25" />
						</LayoutInput>
						<Children>
							<Panel Name="CounterPosition" Layout="HorizontalFlow">
								<Children>
									<Text Name="List_Counter" Content="0" Color="color://is:counterColor" Font="font://is:counterFont" />
									<Text Name="List_Total" Content="0" Color="color://is:totalCounterColor" Font="font://is:totalCounterFont" />
								</Children>
							</Panel>
						</Children>
					</Panel>

					<Panel Name="ThumbnailPanel" Navigation="None" Rotation="30deg;0,1,0">
						<LayoutInput>
							<FormLayoutInput Left="Parent,0.72" Top="Parent,0,275" />
						</LayoutInput>
						<Children>

							<Panel Scale="1,1,1" Margins="257,3,0,0" Padding="0,0,0,0" Layout="Anchor" Visible="false"
							       Name="MissingIndicator" Alpha="0.8">
								<LayoutInput>
									<AnchorLayoutInput Right="Parent,1" Top="Parent,0" />
								</LayoutInput>
								<Children>
									<Graphic Name="MissingImage" Content="image://i:MissingBanner" Margins="0,0,0,0" MaximumSize="100,100"
									         MaintainAspectRatio="true">
										<LayoutInput>
											<AnchorLayoutInput Right="Parent,1" Top="Parent,0" />
										</LayoutInput>
									</Graphic>
								</Children>
							</Panel>

							<Panel Scale="1,1,1" Margins="257,3,0,0" Padding="0,0,0,0" Layout="Anchor" Visible="false"
							       Name="FutureIndicator" Alpha="0.8">
								<LayoutInput>
									<AnchorLayoutInput Right="Parent,1" Top="Parent,0" />
								</LayoutInput>
								<Children>
									<Graphic Name="FutureImage" Content="image://i:FutureBanner" Margins="0,0,0,0" MaximumSize="100,100"
									         MaintainAspectRatio="true">
										<LayoutInput>
											<AnchorLayoutInput Right="Parent,1" Top="Parent,0" />
										</LayoutInput>
									</Graphic>
								</Children>
							</Panel>

							<Panel Scale="1,1,1" Margins="0,0,0,0" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="ShortlistIcon"
							       Alpha="1.0">
								<LayoutInput>
									<AnchorLayoutInput Left="Parent,0" Top="Parent,0" />
								</LayoutInput>
								<Children>
									<Graphic Name="ShortlistImage" Content="image://vi:AddShortlistIcon" Margins="0,0,0,0" MaximumSize="100,100"
									         MaintainAspectRatio="true">
										<LayoutInput>
											<AnchorLayoutInput Left="Parent,0" Top="Parent,0" />
										</LayoutInput>
									</Graphic>
								</Children>
							</Panel>

							<Panel Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="PCLock">
								<LayoutInput>
									<AnchorLayoutInput Horizontal="Near" Vertical="Far" />
								</LayoutInput>
								<Children>
									<Graphic Name="PCLockImage" Content="image://i:Lock" Margins="0,0,5,5" MaximumSize="30,30"
									         MaintainAspectRatio="true">
										<LayoutInput>
											<AnchorLayoutInput Horizontal="Near" Vertical="Near" />
										</LayoutInput>
									</Graphic>
								</Children>
							</Panel>

							<Graphic Name="RemoteContentImage" Content="resx://MediaBrowser/MediaBrowser.Resources/IconRemote"
							         Margins="0,0,5,5" Alpha=".75" MaximumSize="30,30" MaintainAspectRatio="true" Visible="false">
								<LayoutInput>
									<AnchorLayoutInput Horizontal="Far" Vertical="Far" />
								</LayoutInput>
							</Graphic>
					  </Children>
					</Panel>

					<Panel Name="DummyPanel">
						<LayoutInput>
							<FormLayoutInput Left="Parent,0" Bottom="Parent,1" />
						</LayoutInput>
						<Children>
							<me:DummyNavScroller Name="DummyNav" 
												 Application="[Application]" 
												 Folder="[Folder]"
												 ThemeHelper="[ThemeHelper]" 
												 DummyFocus="[DummyHasFocus]" 
												 Command="[HideOverview]" />
						</Children>
					</Panel>

					<Panel Name="ListPanel">
						<LayoutInput>
							<FormLayoutInput Left="Parent,0.5" Top="Parent,0,80" Right="Parent,1" Bottom="Parent,1" />
						</LayoutInput>
						<Children>
							<me:DetailListScroller Name="ListItems" 
												   Application="[Application]" 
												   Folder="[Folder]"
							                       ThemeHelper="[ThemeHelper]" 
												   UnwatchedCountFont="font://is:UnwatchedCountFont"
							                       ScrollerFocus="[ListHasFocus]" />
						</Children>
					</Panel>
					
					<Graphic Name="LeftArrow" MaximumSize="20,40" Layout="Anchor" MinimumSize="20,40" Content="image://me:PivotArrowLeft"
					         Margins="0,0,0,0" MaintainAspectRatio="false" Rotation="0deg;0,0,1" Visible="false">
						<LayoutInput>
							<AnchorLayoutInput Left="Parent,0.5" Top="Parent,0.552" />
						</LayoutInput>
						<Animations>
							<Animation Loop="-1">
								<Keyframes>
									<AlphaKeyframe Time="0.00" RelativeTo="Current" Value="1" Interpolation="Linear" />
									<AlphaKeyframe Time="2.75" RelativeTo="Current" Value="0.1" Interpolation="Linear" />
									<AlphaKeyframe Time="3.25" RelativeTo="Current" Value="0.1" Interpolation="Linear" />
									<AlphaKeyframe Time="6.00" RelativeTo="Final" Value="1" />
								</Keyframes>
							</Animation>
						</Animations>
					</Graphic>
					
					<Graphic Name="RightArrow" MaximumSize="20,40" Layout="Anchor" MinimumSize="20,40" Content="image://me:PivotArrowRight"
					         Margins="0,0,0,0" MaintainAspectRatio="false" Rotation="0deg;0,0,1" Visible="false">
						<LayoutInput>
							<AnchorLayoutInput Left="Parent,0.5" Top="Parent,0.552" />
						</LayoutInput>
						<Animations>
							<Animation Loop="-1">
								<Keyframes>
									<AlphaKeyframe Time="0.00" RelativeTo="Current" Value="1" Interpolation="Linear" />
									<AlphaKeyframe Time="2.75" RelativeTo="Current" Value="0.1" Interpolation="Linear" />
									<AlphaKeyframe Time="3.25" RelativeTo="Current" Value="0.1" Interpolation="Linear" />
									<AlphaKeyframe Time="6.00" RelativeTo="Final" Value="1" />
								</Keyframes>
							</Animation>
						</Animations>
					</Graphic>

					<Panel Name="BannerListPanel">
						<LayoutInput>
							<FormLayoutInput Left="Parent,0" Top="Parent,0,80" Right="Parent,1" Bottom="Parent,1" />
						</LayoutInput>
						<Children>
							<dbs:DetailsBannerScroller Name="BannerItems" 
													   Application="[Application]" 
													   Folder="[Folder]"
							                           ThemeHelper="[ThemeHelper]" 
													   UnwatchedCountFont="font://is:UnwatchedCountFont" />
						</Children>
					</Panel>

					<Panel Name="QuickListPanel">
						<LayoutInput>
							<FormLayoutInput Bottom="Parent, 1, -60" Top="Parent, 0.2" Left="Parent,0.25" Right="Parent,1,300" />
						</LayoutInput>
						<Children>
							<dls:DetailQuickListScroller Name="QuickListItems" 
														 Application="[Application]" 
														 Folder="[Folder]"
							                             ThemeHelper="[ThemeHelper]" />
						</Children>
					</Panel>

					<Panel Name="PosterPanel" Layout="VerticalFlow">
						<LayoutInput>
					    	<FormLayoutInput Left="Parent,0.1" Top="Parent,0.15" Bottom="Parent,1" />
						</LayoutInput>
						<Children>

							<Panel Name="Poster" MaximumSize="400,0">
								<Children>
									<Graphic Name="PosterImage" Margins="0,0,0,5" MaintainAspectRatio="true" MaximumSize="400,0" Visible="false"
									         CenterPointPercent="0.5,0.5,0.5" />
								</Children>
							</Panel>

							<Panel Name="InfoPanel">
								<Layout>
									<FlowLayout Orientation="Vertical" ItemAlignment="Center" />
								</Layout>
								<LayoutInput>
									<FormLayoutInput Left="Parent,0.08" Top="Parent,0.2" Right="Parent,0.5" />
								</LayoutInput>
								<Children>
									<!--MOVIE DETAILS INCLUDING SYNOPSIS, DIRECTORS RUNTIME ETC-->

									<Panel Name="ImagePanel" Layout="VerticalFlow" MaximumSize="480,200" Margins="0,0,0,5">
										<Children>
											<Text Name="Title" Font="font://is:FinalDetailsTitle" Color="color://is:FinalDetailsTitleColor"
											      Visible="false" />
											<Graphic Name="LogoImage" Margins="0,0,0,5" MaintainAspectRatio="true" MaximumSize="400,60" Visible="false"
											         CenterPointPercent="0.5,0.5,0.5" />
											<Graphic Name="ClearArtImage" Margins="0,0,0,5" MaintainAspectRatio="true" MaximumSize="250,0"
											         Visible="false"
											         CenterPointPercent="0.5,0.5,0.5" />
											<Graphic Name="ThumbnailImage" Margins="0,0,0,5" MaintainAspectRatio="true" MaximumSize="250,0"
											         Visible="false" CenterPointPercent="0.5,0.5,0.5" />
										</Children>
									</Panel>

									<gl:GenreList Name="Genres" SourceData="[Folder.SelectedChild.Genres]"
									              Font="font://is:FinalDetailsInfoValueFont" Color="color://is:FinalDetailsInfoValueColor"
									              Margins="0,0,0,10" />

									<Panel Margins="0,0,0,10" Layout="HorizontalFlow">
										<Children>
											<Text Name="LastPlayedLabel" Content="LAST WATCHED:  " Color="color://is:RALItemLabelColor"
											      Font="font://is:RALItemLabelFont" />
											<Text Name="LastPlayedValue" Color="color://is:RALItemValueColor" Font="font://is:RALItemValueFont"
											      Margins="0,-2,0,0" />
										</Children>
									</Panel>

									<Panel Name="ListPosterPanel">
										<Children>
											<Graphic Name="ListPosterImage" Content="[Folder.SelectedChild.PrimaryImage]"
											         CenterPointPercent="0.5,0.5,0.5"
											         MaintainAspectRatio="true" MaximumSize="0,400">
												<LayoutInput>
													<AnchorLayoutInput Horizontal="Center" />
												</LayoutInput>
											</Graphic>
										</Children>
									</Panel>

									<Panel Margins="0,25,0,0">
										<Children>
											<lv:StandOutLabelValue Name="SideInfo"></lv:StandOutLabelValue>
										</Children>
									</Panel>
								</Children>
							</Panel>

					<Panel Name="UnwatchedPanel" Visible="false">
						<Layout>
							<FlowLayout Orientation="Horizontal" StripAlignment="Center" Spacing="10,10" />
						</Layout>
						<LayoutInput>
							<FormLayoutInput Left="InfoPanel,0,-100" Bottom="Parent,1,-180" />
						</LayoutInput>
						<Children>
							<Text Name="Unwatched" Content="Unwatched Episodes:" Font="font://is:FinalDetailsInfoValueFont"
							      Color="color://is:FinalDetailsInfoValueColor" />
							<Text Name="UnwatchedCount" Content="" Font="font://is:FinalDetailsInfoValueFont"
							      Color="color://is:FinalDetailsInfoValueColor" ColorFilter="0,155,255" />
						</Children>
					</Panel>
							
							</Children>
					</Panel>

					<Panel Name="SummaryPopoutPanel" Layout="VerticalFlow" >
						<LayoutInput>
							<AnchorLayoutInput Top="Parent,0.25" Right="Parent,0,-50" Left="Parent,0,-650" />
						</LayoutInput>
						<Children>

							<!--<Panel>
								<Layout>
									<FlowLayout StripAlignment="Center"/>
								</Layout>
								<LayoutInput>
									<AnchorLayoutInput Bottom="DirectorPanel,0,-25"/>
								</LayoutInput>
								<Children>
									<imb:ImageButtonSelector Name="PlayButton" Command="[PlayCommand]" Image="image://vi:PlayButton" MaximumSize="0,50" Visible="false" />
								</Children>
							</Panel>-->

							<Panel Name="DirectorPanel" Visible="true" Margins="0,0,0,20">
								<Layout>
									<FlowLayout StripAlignment="Center" />
								</Layout>
								<Children>
									<lv:StandOutLabelValue Name="TitleSupportlv" ></lv:StandOutLabelValue>
									<lv:StandOutLabelValue Name="TitleSupportlv1"></lv:StandOutLabelValue>
								</Children>
							</Panel>

							<Panel Name="OverviewPopoutPanel" MaximumSize="850,350" Visible="true" Navigation="Column">
								<Layout>
									<FlowLayout ItemAlignment="Center" StripAlignment="Center" />
								</Layout>
								<Children>
									<st:ScrollableText Name="SummaryPopout" Font="font://is:DetailsOverviewFont"
									                   Color="color://is:DetailsOverviewColor" Margins="0,0,0,20" />
								</Children>
							</Panel>

							<Panel Name="InfoPopoutPanel" Visible="true" Margins="0,0,0,15">
								<Layout>
									<FlowLayout Orientation="Horizontal" ItemAlignment="Center" StripAlignment="Center" Spacing="25,25" />
								</Layout>
								<Children>
									<lv:StandOutLabelValue Name="TitleSupportlv3" Margins="0,10,0,0"></lv:StandOutLabelValue>
									<sr:StarRating Margins="0,4,0,0" MaximumSize="0,40" Name="StarRating" ThemeHelper="[ThemeHelper]" />
									<mpaa:MPAARating Margins="0,7,0,0" MaximumSize="65,48" Name="mpaa" />
								</Children>
							</Panel>
							
							<mip:MediaInfoPanel Name="MediaInfoPanel" Item="[Folder.SelectedChild]" MaximumSize="0,45" Visible="false">
								<Layout>
									<FlowLayout StripAlignment="Center" />
								</Layout>
								<LayoutInput>
									<FormLayoutInput Bottom="Parent,1,-50" />
								</LayoutInput>
							</mip:MediaInfoPanel>

						</Children>
					</Panel>

					<Panel Name="BannerInfoPanel" Layout="Form">
						<LayoutInput>
							<FormLayoutInput Left="Parent,0.45" Top="Parent,0.30" Right="Parent,1" Bottom="Parent,0.9" />
						</LayoutInput>

						<Children>

							<Panel Layout="Anchor">
								<Children>

									<Panel Name="BannerOverview" >
										<Layout>
											<FlowLayout Orientation="Vertical" StripAlignment="Center"/>
										</Layout>
										<LayoutInput>
											<AnchorLayoutInput Left="Parent,0" Top="Parent,0.1" Right="Parent,0.7" Bottom="Parent,0.85" />
										</LayoutInput>

										<Children>

											<gl:GenreList Name="BGenres" SourceData="[Folder.SelectedChild.Genres]" Font="font://is:FinalDetailsGenresFont" Color="color://is:FinalDetailsGenresColor" Margins="0,0,0,25" />

											<Panel Name="BOverview" MaximumSize="600,250" Visible="true">
												<Children>
													<st:ScrollableText Name="BSummary" Font="font://is:ThumbOverviewFont" Color="color://is:ThumbOverviewColor" Margins="0,0,0,20" />
												</Children>
											</Panel>

										</Children>
									</Panel>
									
									<Panel>
										<Layout>
											<FlowLayout StripAlignment="Center" />
										</Layout>
										<LayoutInput>
											<AnchorLayoutInput Top="Parent,0,10" Left="Parent,0" Right="Parent,1" />
										</LayoutInput>
										<Children>
											<Text Name="ItemTitle" Color="color://is:ThumbItemTitleColor" Font="font://is:ThumbItemTitleFont" />
										</Children>
					                 </Panel>


									<Graphic Name="BItemImage" CenterPointPercent="0.5,0.5,0.5" MaintainAspectRatio="true" MaximumSize="0,300">
										<LayoutInput>
											<AnchorLayoutInput Left="BannerOverview,1,20" Top="BannerOverview,0,35" />
										</LayoutInput>
									</Graphic>

									<Panel Layout="HorizontalFlow" Name="BRuntimeInfo" >
										<LayoutInput>
											<AnchorLayoutInput Horizontal="Center" Bottom="BannerOverview,1,-5" />
										</LayoutInput>
										<Children>
											<lv:StandOutLabelValue Name="BSideInfo"></lv:StandOutLabelValue>
										</Children>
									</Panel>

									<!-- MPAA RATINGS ICONS-->
									<ColorFill Name="BMPAARatings" Content="Transparent" MaximumSize="0,45" MinimumSize="0,45">
										<LayoutInput>
											<FormLayoutInput Bottom="Parent,1" Left="Parent,0,5" />
										</LayoutInput>
										<Children>
											<mpaa:MPAARating MaximumSize="80,48" Name="Bmpaa" Visible="true" />
										</Children>
									</ColorFill>

									<sr:StarRating Margins="0,4,0,0" MaximumSize="0,40" Name="BStarRating" ThemeHelper="[ThemeHelper]">
										<LayoutInput>
											<FormLayoutInput Bottom="BMPAARatings,1" Left="BMPAARatings,1,25" />
										</LayoutInput>
									</sr:StarRating>

									<mip:MediaInfoPanel Name="BMediaInfoPanel" Item="[Folder.SelectedChild]" MaximumSize="0,50" Visible="true">
										<LayoutInput>
											<FormLayoutInput Bottom="BMPAARatings,1" Right="Parent,1,-5" />
										</LayoutInput>
									</mip:MediaInfoPanel>

								</Children>
							</Panel>
							
						<Graphic Name="OverviewBG" Content="image://vi:PanelBG" ColorFilter="color://is:XC_RALPanelFilterColor" Alpha="1">
						<LayoutInput>
							<AnchorLayoutInput Left="Parent,0,-25" Right="Parent,1,25" Top="Parent,0,-25" Bottom="Parent,1,25" />
						</LayoutInput>
					</Graphic>

						</Children>
					</Panel>
					
					
					

					<!-- Welcome to MB & Update Info Panel-->
					<Panel Name="MBInfo" Alpha="0.7">
						<Layout>
							<FlowLayout ItemAlignment="Near" />
						</Layout>
						<LayoutInput>
							<FormLayoutInput Top="Parent,0.95" Left="Parent,0,-20" />
						</LayoutInput>
						<Children>
							<in:InfoMarquee Application="[Application]" />
						</Children>
					</Panel>

					<Graphic Name="RootMenuBG" ColorFilter="0,155,255" Alpha="1" Navigation="None" Content="image://vi:MainVFBG">
						<LayoutInput>
							<AnchorLayoutInput Left="Parent,0" Top="Parent,0,5" Right="Parent,1" Bottom="Parent,0,75" />
						</LayoutInput>
					</Graphic>

					<Graphic Name="ChildBG" Content="image://vi:TestBanner" ColorFilter="color://is:XC_RALPanelFilterColor"
					         Alpha="global://is:RALPanelAlpha">
						<LayoutInput>
							<AnchorLayoutInput Left="Parent,0" Top="Parent,0,5" Right="Parent,1" Bottom="Parent,0,75" />
						</LayoutInput>
					</Graphic>

					<Graphic Name="SelectedTitleBG" Content="image://vi:SelectedTitleBG" Alpha="1" ColorFilter="230,230,230">
						<LayoutInput>
							<AnchorLayoutInput Left="Parent,0.523" Right="Parent,1" Top="Parent,0.545" Bottom="Parent,0.62" />
						</LayoutInput>
					</Graphic>

					<Graphic Name="ListViewBG" Content="image://vi:ListViewBG" ColorFilter="color://is:XC_RALPanelFilterColor" Alpha="1">
						<LayoutInput>
							<AnchorLayoutInput Left="Parent,0" Right="Parent,1,10" Top="Parent,0,25" Bottom="Parent,1,10" />
						</LayoutInput>
					</Graphic>


					<Graphic Name="Overlay" Layout="Fill" Visible="[ThemeHelper.Config.FolderShowBackdropOverlay]" Alpha="[ThemeHelper.Config.FolderBackdropOverlayAlpha]" Content="image://vi:BackgroundOverlay" />
					<bd:Backdrop4 LoadDelay="280" FadeTime="[ThemeHelper.Config.BackdropTransitionTime]" Application="[Application]" Name="Backdrop" Visible="[ThemeHelper.Config.FolderShowBackdrop]" Image="[Folder.SelectedChild.BackdropImage]" Item="[Folder.SelectedChild]" />

				</Children>
			</Panel>


		</Content>
	</UI>
	
	<Image Name="PivotArrowLeft"  Source="resx://MediaBrowser/MediaBrowser.Resources/PivotArrowLeft"/>
    <Image Name="PivotArrowRight" Source="resx://MediaBrowser/MediaBrowser.Resources/PivotArrowRight"/>

	<UI Name="DetailListScroller">

		<Properties>
			<a:Application Name="Application" Application="$Required" />
			<lib:FolderModel Name="Folder" FolderModel="$Required" />
			<ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
			<Font Name="UnwatchedCountFont" Font="$Required" />
			<BooleanChoice Name="ScrollerFocus" BooleanChoice="$Required" />
		</Properties>

		<Locals>
			<lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
			<!-- DETAILS SCROLLING DATA  -->
			<ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="DetailsSH" />
			<ScrollingData Name="DetailsSD" LockedPosition="0.58" />

			<FlowLayout Name="Layout" Orientation="Vertical" AllowWrap="true" RepeatGap="75,0" Spacing="20,20" />
			<IntRangedValue Name="SelectRepeaterIndex" />
			<ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled" Handle="true" />
			<ShortcutHandler Name="JumpBack" Shortcut="SkipBack" HandlerStage="Bubbled" Handle="true" />

			<cor:Int32 Name="InfoTimer" Int32="1000" />
			<IntRangedValue Name="NavCount" Value="0" />

		</Locals>

		<Rules>

			<Binding Source="[Input.DeepKeyFocus]" Target="[ScrollerFocus.Value]" />
			<!-- Set the UI to be mouse and keyboard interactive. -->
			<Default Target="[Input.KeyInteractive]" Value="true" />

			<!-- WRAP EHS VF LIST LOGIC -->
			<Condition Source="[ThemeHelper.Config.FolderWrapItemList]" ConditionOp="Equals" SourceValue="Always"
			           Target="[Layout.Repeat]" Value="Always" />
			<Condition Source="[ThemeHelper.Config.FolderWrapItemList]" ConditionOp="Equals" SourceValue="Never"
			           Target="[Layout.Repeat]" Value="Never" />
			<Condition Source="[ThemeHelper.Config.FolderWrapItemList]" ConditionOp="Equals" SourceValue="When Too Big"
			           Target="[Layout.Repeat]" Value="WhenTooBig" />


			<!--Navigate to First Unwatched-->
			<Rule ConditionLogicalOp="And">
				<Conditions>
					<Modified Source="[Application]" InitialEvaluate="true" />
					<Equality Source="[Application.NavigatingForward]" Value="true" />
					<Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
				</Conditions>
				<Actions>
					<Invoke Target="[DetailsRepeater.NavigateIntoIndex]" index="[Folder.FirstUnwatchedIndex]" />
				</Actions>
			</Rule>


			<!-- DETAILS Give ScrollingData to ScrollingHandler. -->
			<Binding Target="[DetailsSH.ScrollingData]" Source="[DetailsSD]" />
			<Default Target="[DetailsSD.Repeater]" Value="[DetailsRepeater]" />
			<Binding Source="[Layout]" Target="[DetailsRepeater.Layout]" />


			<Changed Source="[Folder.JILShift]">
				<Actions>
					<Invoke Target="[DetailsSD.Scroll]" amount="[Folder.JILShift]" />
				</Actions>
			</Changed>
			<Rule>
				<Conditions>
					<Modified Source="[JumpForward.Invoked]" />
				</Conditions>
				<Actions>
					<Invoke Target="[DetailsSD.PageDown]" />
				</Actions>
			</Rule>

			<Rule>
				<Conditions>
					<Modified Source="[JumpBack.Invoked]" />
				</Conditions>
				<Actions>
					<Invoke Target="[DetailsSD.PageUp]" />
				</Actions>
			</Rule>
		</Rules>


		<Content>
			<Panel Layout="Form">
				<Children>
					<!-- List Repeater -->
					<Scroller Orientation="Vertical" Name="DetailsScroller" ScrollingData="[DetailsSD]" Navigation="RememberFocus, Column" FadeSize="15">
						<LayoutInput>
							<AnchorLayoutInput Name="ListPosition" Bottom="Parent,1, -110" Top="Parent,0.1" Left="Parent,0" />
						</LayoutInput>
						<Children>
							<Repeater Source="[Folder.Children]" Name="DetailsRepeater" Layout="[Layout]">
								<Layout>
									<FlowLayout Orientation="Vertical" Spacing="50,50" />
								</Layout>
								<Content>
									<me:ListItems Application="[Application]"
									              ParentItem="[Folder]"
									              Item="[RepeatedItem!lib:Item]"
									              Index="[RepeatedItemIndex]"
									              InfoTimer="[InfoTimer]" NavCount="[NavCount]"
									              UnwatchedCountFont="[UnwatchedCountFont]"
									              SelectRepeaterIndex="[SelectRepeaterIndex]" />

								</Content>
								<Animations>
									<Animation Type="Move">
										<Keyframes>
											<PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.5" />
											<PositionKeyframe Time="0.25" RelativeTo="Final" />
										</Keyframes>
									</Animation>
								</Animations>
							</Repeater>
						</Children>
					</Scroller>

				</Children>
			</Panel>
		</Content>
	</UI>
	
	<UI Name="DummyNavScroller">

		<Properties>
			<a:Application Name="Application" Application="$Required" />
			<ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
			<BooleanChoice Name="DummyFocus" BooleanChoice="$Required" />
			<ICommand Name="Command" ICommand="$Required"/>
			<lib:Item Name="Item" Item="null" />
			<lib:FolderModel Name="Folder" FolderModel="$Required" />
		</Properties>

		<Locals>
			 <lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
			<KeyHandler Key="Right" Name="HideOverview" Handle="false" HandlerStage="Bubbled" Command="[Command]"/>
			<!-- DETAILS SCROLLING DATA  -->
			<ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="DetailsSH" />
			<ScrollingData Name="DetailsSD" />

			<FlowLayout Name="Layout" Orientation="Vertical" AllowWrap="true" RepeatGap="75,0" Spacing="5,5" />

			<cor:Int32 Name="InfoTimer" Int32="1000" />
			<IntRangedValue Name="NavCount" Value="0" />
			<ClickHandler Name="Clicker" />
		</Locals>

		<Rules>

			<Binding Source="[Input.DeepKeyFocus]" Target="[DummyFocus.Value]" />
			<!-- Set the UI to be mouse and keyboard interactive. -->
			<Default Target="[Input.KeyInteractive]" Value="true" />

			
			<!-- DETAILS Give ScrollingData to ScrollingHandler. -->
			<Binding Target="[DetailsSH.ScrollingData]" Source="[DetailsSD]" />
			<!--<Default Target="[DetailsSD.Repeater]" Value="[ListRepeater]" />
			<Binding Source="[Layout]" Target="[ListRepeater.Layout]" />-->
		
		    
		</Rules>


		<Content>
			<Panel Layout="Form">
				<Children>
					<!-- List Repeater -->
					<Scroller Orientation="Vertical" Name="DummyScroller" ScrollingData="[DetailsSD]" Navigation="ContainVertical" FadeSize="15">
						<LayoutInput>
							<AnchorLayoutInput Name="ListPosition" Bottom="Parent,1" Left="Parent,0" />
						</LayoutInput>
						<Children>
							<me:DummyItem Application="[Application]"
									      ParentItem="[Folder]"
										  ThemeHelper="[ThemeHelper]"
									      Item="[SelectedItem]" />
						</Children>
					</Scroller>

				</Children>
			</Panel>
		</Content>
	</UI>

		<UI Name="ListItems">
		<Properties>
			<a:Application Name="Application" Application="$Required" />
			<ih:IridiumHelper Name="ThemeHelper" />
			<lib:FolderModel Name="ParentItem" FolderModel="$Required" />
			<lib:Item Name="Item" Item="$Required" />
			<Index Name="Index" Index="$Required" />
			<cor:Int32 Name="InfoTimer" Int32="1000" />
			<IntRangedValue Name="SelectRepeaterIndex" IntRangedValue="$Required" />
			<IntRangedValue Name="NavCount" IntRangedValue="$Required" />
			<Font Name="UnwatchedCountFont" Font="$Required" />

		</Properties>

		<Locals>
			<Color Name="Color" />
			<ClickHandler Name="Clicker" />
			<Timer Name="AnimTimer" Interval="[InfoTimer]" Enabled="false" AutoRepeat="false" />
			<BooleanChoice Name="InFocus" Value="false" />

			<KeyHandler Name="WatchedShortcut" Handle="true" Key="W" Modifiers="Control" HandlerStage="Bubbled" />
			<ShortcutHandler Name="ClearBtn" Handle="true" Shortcut="Clear" HandlerStage="Bubbled" />
			<ShortcutHandler Name="PlayBtn" Handle="true" Shortcut="Play" HandlerStage="Bubbled" />
			<KeyHandler Name="PlayShortcut" Handle="true" Key="P" Modifiers="Control" HandlerStage="Bubbled" />
			<KeyHandler Name="InfoBtn" Key="D8" Handle="false" Modifiers="Shift" HandlerStage="Bubbled" />
		</Locals>


		<Rules>


			<!--<Binding Source="[Item.Name]" Target="[Title.Content]">
        <Transformer>
          <FormatTransformer ToUpper="true"/>
        </Transformer>
      </Binding>
      Binding Source="[Item.Name]" Target="[SelTitleShadow.Content]">
        <Transformer>
          <FormatTransformer ToUpper="true"/>
        </Transformer>
      </Binding-->

			<!-- Watched Toggle Commands -->
			<Rule ConditionLogicalOp="Or">
				<Conditions>
					<Modified Source="[ClearBtn.Invoked]" />
					<Modified Source="[WatchedShortcut.Invoked]" />
				</Conditions>
				<Actions>
					<PlaySound Sound="sound://sounds:Miniselect" />
					<Invoke Target="[Item.ToggleWatched]" />
				</Actions>
			</Rule>

			<Rule ConditionLogicalOp="Or">
				<Conditions>
					<Modified Source="[PlayBtn.Invoked]" />
					<Modified Source="[PlayShortcut.Invoked]" />
				</Conditions>
				<Actions>
					<PlaySound Sound="sound://sounds:Miniselect" />
					<Invoke Target="[Item.Play]" />
				</Actions>
			</Rule>

			<Condition Source="[ParentItem.SelectedChildIndex]" ConditionOp="NotEquals" SourceValue="[Index.SourceValue]">
				<Actions>
					<Invoke Target="[AnimTimer.Stop]" />
					<Set Target="[NavCount.Value]" Value="[NavCount.Value]" ExclusiveApply="false">
						<Transformer>
							<MathTransformer Add="1" />
						</Transformer>
					</Set>
				</Actions>
			</Condition>
			
			<Binding Source="[Item.MpaaRating]" Target="[mpaa.Value]"></Binding>

			<Binding Target="[Title.Content]" Source="[Item.Name]" />

			<Changed Source="[Input.KeyFocus]">
				<Conditions>
					<Equality Source="[Input.KeyFocus]" Value="true" />
				</Conditions>
				<Actions>
					<Set Target="[Title.Content]" Value="[Item.Name]">
						<Transformer>
							<FormatTransformer ToUpper="false" />
						</Transformer>
					</Set>
					<Set Target="[Title.Font]" Value="font://is:XF_DQLSelected" />
					<Set Target="[Title.Margins]" Value="60,0,0,0" />
					<!--<Set Target="[TickPanel.Margins]" Value="2,15,0,-5" />
                    <Set Target="[UnwatchedIndicator.Margins]" Value="2,10,0,-5" />-->
					<Set Target="[ParentItem.SelectedChildIndex]" Value="[Index.SourceValue]" />
					<Invoke Target="[AnimTimer.Start]" />
					<Set Target="[ThemeHelper.DummyItem]" Value="[Item]" />
				</Actions>
			</Changed>

			<Changed Source="[AnimTimer.Tick]">
				<Actions>
					<Set Target="[InFocus.Value]" Value="true" />
					<Set Target="[NavCount.Value]" Value="0" ExclusiveApply="false" />
				</Actions>
			</Changed>

			<Condition Source="[Input.KeyFocus]" SourceValue="false">
				<Conditions>
					<Equality Source="[Input.KeyFocus]" Value="false" />
				</Conditions>
				<Actions>
					<Set Target="[Title.Content]" Value="[Item.Name]">
						<Transformer>
							<FormatTransformer ToUpper="false" />
						</Transformer>
					</Set>
					<Set Target="[Title.Color]" Value="color://is:XC_DQLUnselected" />

				</Actions>
			</Condition>

			<Changed Source="[Item.HaveWatched]">
				<Conditions>
					<Equality Source="[Item.HaveWatched]" ConditionOp="Equals" Value="true" />
					<Equality Source="[Application.Config.ListViewWatchedColorMcml]" ConditionOp="NotEquals" Value="Transparent" />
				</Conditions>
				<Actions>
					<Set Target="[Title.Color]" Value="[Color]" />
				</Actions>
			</Changed>

			<Rule>
				<Conditions>
					<Equality Source="[Item.HaveWatched]" ConditionOp="Equals" Value="true" />
					<Equality Source="[Application.Config.ListViewWatchedColorMcml]" ConditionOp="NotEquals" Value="Transparent" />
				</Conditions>
				<Actions>
					<Set Target="[Title.Color]" Value="[Color]" />
				</Actions>
			</Rule>

			<Changed Source="[ThemeHelper.Config.WatchedColorStyle]">
				<Actions>
					<Set Target="[Title.Color]" Value="[Color]" />
				</Actions>
			</Changed>

			<Condition Source="[ThemeHelper.Config.WatchedColorStyle]" ConditionOp ="Equals" SourceValue="Green" Target="[Color]" Value="Green"/>
			<Condition Source="[ThemeHelper.Config.WatchedColorStyle]" ConditionOp ="Equals" SourceValue="DarkGreen" Target="[Color]" Value="DarkGreen"/>
			<Condition Source="[ThemeHelper.Config.WatchedColorStyle]" ConditionOp ="Equals" SourceValue="Blue" Target="[Color]" Value="Blue"/>
			<Condition Source="[ThemeHelper.Config.WatchedColorStyle]" ConditionOp ="Equals" SourceValue="DarkBlue" Target="[Color]" Value="DarkBlue"/>
			<Condition Source="[ThemeHelper.Config.WatchedColorStyle]" ConditionOp ="Equals" SourceValue="RoyalBlue" Target="[Color]" Value="RoyalBlue"/>
			<Condition Source="[ThemeHelper.Config.WatchedColorStyle]" ConditionOp ="Equals" SourceValue="Red" Target="[Color]" Value="Red"/>
			<Condition Source="[ThemeHelper.Config.WatchedColorStyle]" ConditionOp ="Equals" SourceValue="OrangeRed" Target="[Color]" Value="OrangeRed"/>
			<Condition Source="[ThemeHelper.Config.WatchedColorStyle]" ConditionOp ="Equals" SourceValue="Orange" Target="[Color]" Value="Orange"/>
			<Condition Source="[ThemeHelper.Config.WatchedColorStyle]" ConditionOp ="Equals" SourceValue="Yellow" Target="[Color]" Value="Yellow"/>
			<Condition Source="[ThemeHelper.Config.WatchedColorStyle]" ConditionOp ="Equals" SourceValue="YellowGreen" Target="[Color]" Value="YellowGreen"/>
			<Condition Source="[ThemeHelper.Config.WatchedColorStyle]" ConditionOp ="Equals" SourceValue="Pink" Target="[Color]" Value="Pink"/>


			<!--<Binding Source="[Item.ShowUnwatched]" Target="[UnwatchedIndicator.Visible]" />
      <Binding Source="[Item.UnwatchedCountString]" Target="[UnwatchedCount.Content]" />
      <Changed Source="[Item.ShowUnwatched]">
        <Actions>
          <Set Target="[UnwatchedCount.Content]" Value="[Item.UnwatchedCountString]" />
        </Actions>
      </Changed>

      <Binding Source="[Item.HaveWatched]" Target="[TickPanel.Visible]" />
      <Changed Source="[Application.Config.ShowWatchedTickOnFolders]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Item.IsPlayable]" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchedTickOnFolders]" />
        </Actions>
      </Changed>

      <Changed Source="[Application.Config.ShowWatchTickInPosterView]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Item.IsPlayable]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchTickInPosterView]" />
        </Actions>
      </Changed>-->

			<Changed Source="[Clicker.Invoked]">
				<Actions>
					<Set Target="[ThemeHelper.SeriesId]" Value="[Item.Id]" />
					<Invoke Target="[Application.Navigate]" item="[Item]" />
				</Actions>
			</Changed>

			<!--<Changed Source="[Clicker.Invoked]">
				<Conditions>
					<Equality Source="[ThemeHelper.Config.EnableTVShowView]" ConditionOp="Equals" Value="true" />
					<Equality Source="[Item.ItemTypeString]" ConditionOp="NotEquals" Value="Series" />
				</Conditions>
				<Actions>
					<Invoke Target="[Application.Navigate]" item="[Item]" />
				</Actions>
			</Changed>

			<Changed Source="[Clicker.Invoked]">
				<Conditions>
					<Equality Source="[ThemeHelper.Config.EnableTVShowView]" ConditionOp="Equals" Value="true" />
					<Equality Source="[Item.ItemTypeString]" ConditionOp="Equals" Value="Series" />
				</Conditions>
				<Actions>
					<Invoke Target="[ThemeHelper.OpenTVShowsView]" item="[Item]" />	
				</Actions>
			</Changed>-->
		</Rules>

		<Content>
			<Panel Name="Bg">
				<Children>

					<!--<Panel  Scale="1,1,1"  Layout="Anchor"  Name="TickIndicatorPanel" Visible="[Item.HaveWatched]" MaximumSize="30,30">
            <Children>
              <Panel Name="TickPanel" Layout="Center" Margins="2,10,0,0">
                <Children>
                  <Graphic Content="image://i:TickPoster"  MaximumSize="20,20"  />
                  <Graphic Content="image://i:TickPosterBase" ColorFilter="color://is:XC_WatchedBG" MaximumSize="20,20" Visible="global://s:ShowWatchedMarkerBackgrounds"  />
                </Children>
              </Panel>
            </Children>
          </Panel>-->

					<!--<Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Alpha="0.8" Name="TickIndicatorPanel" Visible="[Application.Config.ShowWatchTickInPosterView]" MaximumSize="30,30" >
            <LayoutInput>
              <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
            </LayoutInput>
            <Children>
              <Panel Name="TickPanel" Layout="Center" Margins="2,10,0,0">
                <Children>
                  <Graphic Content="image://i:Watched"  MaximumSize="30,30" MaintainAspectRatio="true"  />
                </Children>
              </Panel>
            </Children>
          </Panel>

          <Panel  Margins="2,2,0,0" Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Name="UnwatchedIndicator" MaximumSize="30,30" >
            <LayoutInput>
              <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
            </LayoutInput>
            <Children>
              <Text Name="UnwatchedCount" Content="" Color="color://s:FontColorLight" Font="[UnwatchedCountFont]" Margins="0,0,0,0"></Text>
              <Graphic Visible="global://s:ShowWatchedMarkerBackgrounds" Content="image://i:GreenCircle"  MinimumSize="30,30" MaximumSize="30,30" MaintainAspectRatio="true" Layout="Center" ></Graphic>
            </Children>
          </Panel>-->

					<Clip Layout="Anchor" Navigation="Column, RememberFocus" Name="ItemDetails">
						<LayoutInput>
							<AnchorLayoutInput Left="Parent,0" Top="Parent,0" Right="Parent,1" Bottom="Parent,1" />
						</LayoutInput>
						<Children>

							<Text Name="Title" WordWrap="false" Font="font://is:XF_DQLUnselected" Color="color://is:XC_DQLHighlighted" Margins="15,0,20,0">
								<LayoutInput>
									<AnchorLayoutInput Left="Parent,0,20" Top="Parent,0,15" />
								</LayoutInput>
							</Text>
							
							<mpaa:MPAARating Margins="0,7,0,0" MaximumSize="0,40" Name="mpaa" >
								<LayoutInput>
									<AnchorLayoutInput Right="Parent,1" Top="Parent,0,10" />
								</LayoutInput>
							</mpaa:MPAARating>


						</Children>
					</Clip>

				</Children>
			</Panel>
		</Content>
	</UI>

	<UI Name="DummyItem" BaseUI="ib:ItemButton">
		<Properties>
			<a:Application Name="Application" Application="$Required" />
			<ih:IridiumHelper Name="ThemeHelper" />
			<lib:FolderModel Name="ParentItem" FolderModel="$Required" />
			<lib:Item Name="Item" Item="$Required" />
		</Properties>
		
		<Rules>

			<Binding Source="[Item.Name]" Target="[Title.Content]" />
			
		</Rules>

		<Content>
			<Panel Name="Bg">
				<Children>
					<Text Name="Title" WordWrap="false" Font="font://is:XF_DQLUnselected" Color="White" Visible="false"/>
				</Children>
			</Panel>
		</Content>
	</UI>

  
</Mcml>
