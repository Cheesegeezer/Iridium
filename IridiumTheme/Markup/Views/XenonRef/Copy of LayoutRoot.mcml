<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	  xmlns:cor="assembly://MSCorLib/System"
    xmlns:a="assembly://MediaBrowser/MediaBrowser"
	  xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
	  xmlns:is="file://Iridium_Styles.mcml"
    xmlns:in="resx://MediaBrowser/MediaBrowser.Resources/InfoMarquee"
    xmlns:wea="resx://Iridium/Iridium.Resources/Weather"
	  xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
    xmlns:ib="resx://Iridium/Iridium.Resources/ItemButton"
	  xmlns:bd="resx://Iridium/Iridium.Resources/Backdrop"
    xmlns:vi="resx://Iridium/Iridium.Resources/Images"
    xmlns:ih="assembly://Iridium/Iridium"
    xmlns:nus="resx://Iridium/Iridium.Resources/NextUpLayoutScroller"
    xmlns:utv="resx://Iridium/Iridium.Resources/UpcomingTVLayoutScroller"
    xmlns:rip="resx://Iridium/Iridium.Resources/RALLayoutScroller"
    xmlns:rob="resx://Iridium/Iridium.Resources/RALOptionButton"
    xmlns:ns="resx://Iridium/Iridium.Resources/NewsScroller"
    xmlns:me="Me">


  <UI Name="LayoutRoot">
    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
    </Properties>

    <Locals>
      <ih:XNewsItem Name="NewsItems" />
      <ScrollingHandler Name="ScrollingHandler"  HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" />
      <ScrollingData Name="ScrollingData" LockedAlignment="0.05" LockedPosition="0.05" />

      <FormLayoutInput Name="ScrollerHorizontalLayoutInput" Left="Parent,0,35" Top="Parent,0,10" Right="Parent,1"  Horizontal="Fill" />
      <FlowLayout Name="HorizontalFlowLayout" Orientation="Horizontal" AllowWrap="true" RepeatGap="50,0" Spacing="50,50" ItemAlignment="Near"/>
      <FormLayoutInput Name="RootHorizontalLayoutInput" Left="Parent,0" Right="Parent,1" />
      <FormLayoutInput Name="MBInfoHorizontalLayout" Top="Parent,0.95" Right="Parent,1,50" />

      <lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]"/>
      <IntRangedValue Name="SelectedIndex" Value="0"/>

      <Timer Name="FocusViewTimer" AutoRepeat="false" Interval="500" Enabled="false" />
      <Timer Name="ShowNewsTickerTimer" AutoRepeat="false" Interval="2000" Enabled="false" />

      <Command Name="Configure"/>
      <Command Name="CycleRecentCommand" />
      <Command Name="FocusRootCommand" />
      <Command Name="FocusCycleRecentCommand" />

      <Command Name="RecentlyAddedCommand" />
      <Command Name="WatchedCommand" />
      <Command Name="UnwatchedCommand" />
      <Command Name="NextUpCommand" />
      <Command Name="UpcomingTVCommand"/>
      
      <!--RAL Positioning-->
      <FormLayoutInput Name="RALHalfHorizontalLayout" Left="Parent,0.35" Right="Parent,1" Top="Parent,0.3" Bottom="Parent,0.78" />
      <FormLayoutInput Name="RALFullHorizontalLayout" Left="Parent,0" Right="Parent,1" Top="Parent,0.3" Bottom="Parent,0.78" />

      <cor:Int32 Name="backFocus" Int32="[Folder.SelectedChildIndex]" />
      <cor:Int32 Name="Startup"/>
      <!-- Variable that uses the .NET Framework DateTime object -->
      <cor:String Name="CurrentDate" String="[ThemeHelper.CurrentDate]"/>
      <cor:String Name="CurrentTime" String="[ThemeHelper.CurrentTime]"/>
      <Timer Name="MyTimer" AutoRepeat="true" Interval="500" Enabled="true"/>
      <IntRangedValue Name="Hour"/>
    </Locals>
    
    <Rules>

      <!-- Navigation Rules -->
      <Binding Source="[SelectedIndex.Value]" Target="[Folder.SelectedChildIndex]" />
      <Default Target="[Startup]" Value="1" ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Application.NavigatingForward]" Value="true"/>
          <Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
        </Conditions>
        <Actions>
          <Invoke Target="[RootItemRepeater.NavigateIntoIndex]"  index="[Folder.FirstUnwatchedIndex]"/>
        </Actions>
      </Default>
      <Rule ConditionLogicalOp="And" >
        <Conditions>
          <Equality Source="[Application.NavigatingForward]" Value="false"/>
          <Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
        </Conditions>
        <Actions>
          <Invoke Target="[RootItemRepeater.NavigateIntoIndex]"  index="[backFocus]"/>
        </Actions>
      </Rule>
      <Changed Source="[Folder.SelectedChildIndex]" InitialEvaluate="true">
        <Conditions>
          <Equality ConditionOp="NotEquals" Source="[Folder.SelectedChildIndex]" Value="-1" />
        </Conditions>
        <Actions>
          <Set Target="[FocusViewTimer.Enabled]" Value="false" ExclusiveApply="false" />
          <Set Target="[FocusViewTimer.Enabled]" Value="true"/>
        </Actions>
      </Changed>
      <!-- End Navigation Rules-->
      
      <!-- Set Current Item-->
      <Binding Target="[ThemeHelper.CurrentItem]" Source="[Folder.SelectedChild]" />
      <Binding Target="[Application.CurrentItem]" Source="[Folder.SelectedChild]" />

      <!-- Set Main Folder Scrollers-->
      <Binding Source="[Folder.Children]" Target="[RootItemRepeater.Source]" />
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]" />
      <Default Target="[ScrollingData.Repeater]" Value="[RootItemRepeater]" />
      
      <!-- Folder Pref Backdrop -->
      <Binding Source="[Folder.SelectedChild.BackdropImage]" Target="[Backdrop.Image]" ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdrop]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Backdrop.Visible]" Value="true" />
        </Actions>
      </Binding>
      <Binding Source="[Folder.SelectedChild]" Target="[Backdrop.Item]" ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdrop]" ConditionOp="Equals" Value="true" /> 
        </Conditions>
        <Actions>
          <Set Target="[Backdrop.Visible]" Value="true" />
        </Actions>
      </Binding>

      <!-- Backdrop Overlay-->
      <Binding Target="[Overlay.Visible]"   Source="[ThemeHelper.Config.FolderShowBackdropOverlay]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdropOverlay]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>

      <Binding Target="[Overlay.Alpha]" Source="[ThemeHelper.Config.FolderBackdropOverlayAlpha]"/>

      <!-- News Scroller
      <Binding Target="[NewsPanel.Visible]"   Source="[ThemeHelper.Config.FolderShowNewsScroller]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowNewsScroller]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>
      
      <Binding Target="[NewsBGPanel.Visible]"   Source="[ThemeHelper.Config.FolderShowNewsScroller]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowNewsScroller]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding> -->
        
      <!-- WRAP EHS VF LIST LOGIC -->
      <Condition Source="[ThemeHelper.Config.FolderWrapEHSList]" ConditionOp="Equals" SourceValue="Always" Target="[HorizontalFlowLayout.Repeat]" Value="Always" />
      <Condition Source="[ThemeHelper.Config.FolderWrapEHSList]" ConditionOp="Equals" SourceValue="Never" Target="[HorizontalFlowLayout.Repeat]" Value="Never" />
      <Condition Source="[ThemeHelper.Config.FolderWrapEHSList]" ConditionOp="Equals" SourceValue="When Too Big" Target="[HorizontalFlowLayout.Repeat]" Value="WhenTooBig" />

      <Changed Source="[ThemeHelper.Config.FolderWrapEHSList]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderWrapEHSList]" ConditionOp="Equals" Value="Always" />
        </Conditions>
        <Actions>
          <Set Target="[HorizontalFlowLayout.Repeat]" Value="Always" />
        </Actions>
      </Changed>
      <Changed Source="[ThemeHelper.Config.FolderWrapEHSList]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderWrapEHSList]" ConditionOp="Equals" Value="When Too Big" />
        </Conditions>
        <Actions>
          <Set Target="[HorizontalFlowLayout.Repeat]" Value="WhenTooBig" />
        </Actions>
      </Changed>
      <Changed Source="[ThemeHelper.Config.FolderWrapEHSList]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderWrapEHSList]" ConditionOp="Equals" Value="Never" />
        </Conditions>
        <Actions>
          <Set Target="[HorizontalFlowLayout.Repeat]" Value="Never" />
        </Actions>
      </Changed>
      
      <!--SHOW FULL RAL WIDTH WHEN IN HORIZONTAL VIEW-->
      <Condition Source="[ThemeHelper.Config.FolderShowFullRAL]" ConditionOp="Equals" SourceValue="true" Target="[NextUpPopup.LayoutInput]" Value="[RALFullHorizontalLayout]" />
      <Condition Source="[ThemeHelper.Config.FolderShowFullRAL]" ConditionOp="Equals" SourceValue="true" Target="[RecentItemsPopup.LayoutInput]" Value="[RALFullHorizontalLayout]" />
      <Condition Source="[ThemeHelper.Config.FolderShowFullRAL]" ConditionOp="Equals" SourceValue="true" Target="[UpcomingTVPopup.LayoutInput]" Value="[RALFullHorizontalLayout]" />

      <!--CLOCK DISPLAY-->
      <Changed Source="[MyTimer.Tick]" InitialEvaluate="true">
        <Actions>
          <Set Target="[CurrentTime]" Value="[ThemeHelper.CurrentTime]"/>
          <Set Target="[TimeDisplay.Content]" Value="[CurrentTime]"/>
          <Set Target="[CurrentDate]" Value="[ThemeHelper.CurrentDate]"/>
          <Set Target="[DateDisplay.Content]" Value="[CurrentDate]"/>
        </Actions>
      </Changed>
      
      
      <!-- Selection/Info Display 
      <Binding Source="[SelectedIndex.Value]" Target="[Folder.SelectedChildIndex]" />

      <Changed Source="[Folder.SelectedChildIndex]" InitialEvaluate="true">
        <Conditions>
          <Equality ConditionOp="NotEquals" Source="[Folder.SelectedChildIndex]" Value="-1" />
        </Conditions>
        <Actions>
          <Set Target="[FocusViewTimer.Enabled]" Value="false" ExclusiveApply="false" />
          <Set Target="[FocusViewTimer.Enabled]" Value="true"/>
        </Actions>
      </Changed>-->

      <Condition Source="[Folder.SelectedChild.ParentalAllowed]" ConditionOp="Equals" SourceValue="false" Target="[PCLock.Visible]" Value="true" />

      <!-- Initial Focus -->
      <Rule>
        <Conditions>
          <Equality Source="[Application.NavigatingForward]" Value="true"/>
        </Conditions>
        <Actions>
          <Invoke Target="[FocusViewTimer.Start]" />
        </Actions>
      </Rule>
      <Changed Source="[FocusViewTimer.Tick]">
        <Conditions>
          <Equality Source="[Application.NavigatingForward]" Value="true"/>
        </Conditions>
        <Actions>
          <Invoke Target="[RootScroller.NavigateInto]" />
          <Invoke Target="[ThemeHelper.GetNewsItems]" />
        </Actions>
      </Changed>

      <!--<Binding Source="[Folder.SelectedChild.Name]" Target="[FolderName.Content]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>-->

      <!-- COMMANDS -->
      <Changed Source="[Configure.Invoked]">
        <Actions>
          <Invoke Target="[Application.OpenConfiguration]" showFullOptions="true" />
        </Actions>
      </Changed>

      <!--RAL Handlers-->
      <Changed Source="[Folder.SelectedChild]">
        <Actions>
          <Set Target="[RecentItemsPopup.Folder]"  Value="[Folder.SelectedChild!lib:FolderModel]"></Set>
        </Actions>
      </Changed>

      <Changed Source="[Folder.SelectedChild]">
        <Actions>
          <Set Target="[NextUpPopup.Folder]" Value="[Folder.SelectedChild!lib:FolderModel]" />
        </Actions>
      </Changed>

      <!--  CHECK WHICH FOLDER IT IS AND ENSURE THAT TV SHOW FOLDER KEEPS ITS OWN SETTINGS
      <Changed Source="[Folder.SelectedChild]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" Value="true" />
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Application.RecentItemOption]" Value="[ThemeHelper.Config.TvRalOption]" />
        </Actions>
      </Changed>

      <Changed Source="[Folder.SelectedChild]" >
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" Value="false" />
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Application.RecentItemOption]" Value="[ThemeHelper.Config.NonTVRalOption]" />
        </Actions>
      </Changed>-->
      <!-- END CHECK-->
      
      <!-- WATCH FOR RAL OPTION WHEN CHANGED FOR TV SHOW FOLDERS
      <Changed Source="[ThemeHelper.Config.TvRalOption]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="Equals" Value="NextUp"/>
        </Conditions>
        <Actions>
          <Set Target ="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[NextUpPopup.Visible]" Value="true" />
          <Set Target="[RecentItemsPopup.Visible]" Value="false" />
        </Actions>
      </Changed>
      
      <Changed Source="[ThemeHelper.Config.TvRalOption]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="Equals" Value="UpcomingTV"/>
        </Conditions>
        <Actions>
          <Set Target ="[UpcomingTVPopup.Visible]" Value="true" />
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="false" />
        </Actions>
      </Changed>

      <Changed Source="[ThemeHelper.Config.TvRalOption]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="NotEquals" Value="UpcomingTV"/>
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="NotEquals" Value="NextUp"/>
        </Conditions>
        <Actions>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true" />
        </Actions>
      </Changed>

      <Changed Source="[ThemeHelper.Config.NonTVRalOption]" InitialEvaluate="true">
        <Actions>
          <Set Target ="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true" />
        </Actions>
      </Changed>-->
      <!--  END WATCH  -->

      <!--  ENSURE THAT THE NEXTUP BUTTONS ARE ALWAYS THERE WHEN CHANGING THE THE RAL SELECTOR IF TV SHOW FOLDER
      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target ="[UpcomingTVButton.Visible]" Value="true" />
          <Set Target ="[UpcomingTVDivider.Visible]" Value="true" />
          <Set Target="[NextUpButton.Visible]" Value="true" />
          <Set Target="[NextUpDivider.Visible]" Value="true" />
        </Actions>
      </Rule>-->

      <!--MAKE SURE RAL IS ALWAYS SHOWN WHEN RETURNING TO EHS SCREEN
      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Set Target ="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="Equals" Value="NextUp"/>
        </Conditions>
        <Actions>
          <Set Target ="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[NextUpPopup.Visible]" Value="true" />
          <Set Target="[RecentItemsPopup.Visible]" Value="false" />
          <Set Target="[FolderName.Visible]" Value="true" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="Equals" Value="UpcomingTV"/>
        </Conditions>
        <Actions>
          <Set Target ="[UpcomingTVPopup.Visible]" Value="true" />
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="false" />
          <Set Target="[FolderName.Visible]" Value="true" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="NotEquals" Value="UpcomingTV"/>
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="NotEquals" Value="NextUp"/>
        </Conditions>
        <Actions>
          <Set Target ="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true" />
          <Set Target="[FolderName.Visible]" Value="true" />
        </Actions>
      </Rule>-->

      <!--RAL BUTTONS-->
      <!--RAL ALWAYS ON == OFF
      <Changed Source="[Folder.SelectedChild]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="false" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[NextUpButton.Visible]" Value="true" />
          <Set Target="[NextUpDivider.Visible]" Value="true" />
          <Set Target ="[UpcomingTVButton.Visible]" Value="true" />
          <Set Target ="[UpcomingTVDivider.Visible]" Value="true" />
        </Actions>
      </Changed>

      <Changed Source="[Folder.SelectedChild]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="false" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[NextUpButton.Visible]" Value="false" />
          <Set Target="[NextUpDivider.Visible]" Value="false" />
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[NewLabel.Margins]" Value="5,0,0,0" />
          <Set Target ="[UpcomingTVButton.Visible]" Value="false" />
          <Set Target ="[UpcomingTVDivider.Visible]" Value="false" />
          <Set Target="[UpcomingTVPopup.Visible]" Value="false" />
        </Actions>
      </Changed>-->

      <!--RAL ALWAYS ON == ON-->
      <!--ENSURE OPTION UPDATES THE RAL CORRECTLY
      <Changed Source="[ThemeHelper.Config.FolderShowRALAlways]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="Equals" Value="NextUp" />
        </Conditions>
        <Actions>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[NextUpPopup.Visible]" Value="true" />
          <Set Target="[RecentItemsPopup.Visible]" Value="false" />
        </Actions>
      </Changed>
      <Changed Source="[ThemeHelper.Config.FolderShowRALAlways]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="Equals" Value="UpcomingTV" />
        </Conditions>
        <Actions>
          <Set Target="[UpcomingTVPopup.Visible]" Value="true" />
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="false" />
        </Actions>
      </Changed>
      <Changed Source="[ThemeHelper.Config.FolderShowRALAlways]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="NotEquals" Value="UpcomingTV" />
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="NotEquals" Value="NextUp" />
        </Conditions>
        <Actions>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true" />
        </Actions>
      </Changed>

      <Changed Source="[ThemeHelper.Config.FolderShowRALAlways]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true" />
        </Actions>
      </Changed>-->
      <!--END OF ENSURE OPTION UPDATES THE RAL CORRECTLY-->

      <!--<Changed Source="[Folder.SelectedChild]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="Equals" Value="NextUp" />
        </Conditions>
        <Actions>
          <Invoke Target="[ThemeHelper.GetNextUpEpisodes]" />
          <Set Target="[NextUpPopup.Visible]" Value="true" />
          <Set Target="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="false" />
        </Actions>
      </Changed>
      <Changed Source="[Folder.SelectedChild]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="Equals" Value="UpcomingTV" />
        </Conditions>
        <Actions>
          <Invoke Target="[ThemeHelper.GetUpcomingTV]" />
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[UpcomingTVPopup.Visible]" Value="true" />
          <Set Target="[RecentItemsPopup.Visible]" Value="false" />
        </Actions>
      </Changed>
      <Changed Source="[Folder.SelectedChild]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="Equals" Value="added" />
        </Conditions>
        <Actions>
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true" />
        </Actions>
      </Changed>
      <Changed Source="[Folder.SelectedChild]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="Equals" Value="unwatched" />
        </Conditions>
        <Actions>
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true" />
        </Actions>
      </Changed>
      <Changed Source="[Folder.SelectedChild]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="Equals" Value="watched" />
        </Conditions>
        <Actions>
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true" />
        </Actions>
      </Changed>

      <Changed Source="[Folder.SelectedChild]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true" />
          <Set Target="[NewLabel.Margins]" Value="5,0,0,0" />
        </Actions>
      </Changed>

      <Changed Source="[Folder.SelectedChild]" >
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowRALAlways]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.IsGameFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.TvRalOption]" ConditionOp="Equals" Value="watched" />
          <Equality Source="[Application.Config.TreatWatchedAsInProgress]" ConditionOp="Equals" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[NextUpPopup.Visible]" Value="false" />
          <Set Target="[UpcomingTVPopup.Visible]" Value="false" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true" />
        </Actions>
      </Changed>-->

      <!-- CHANGE RAL BACK TO ADDED IF ANOTHER OPTION IS NOT IN Iridium'S LIST
      <Rule>
        <Conditions>
          <Equality Source="[Application.RecentItemOption]" ConditionOp="NotEquals" Value="added"/>
          <Equality Source="[Application.RecentItemOption]" ConditionOp="NotEquals" Value="watched"/>
          <Equality Source="[Application.RecentItemOption]" ConditionOp="NotEquals" Value="unwatched"/>
          <Equality Source="[Application.RecentItemOption]" ConditionOp="NotEquals" Value="NextUp"/>
          <Equality Source="[Application.RecentItemOption]" ConditionOp="NotEquals" Value="UpcomingTV"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Folder.SelectedChild.RecentItemsChanged]" />
          <Set Target="[Application.RecentItemOption]" Value="added" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true"/>
          <Set Target="[ThemeHelper.Config.TvRalOption]" Value="added" />
          <Set Target="[ThemeHelper.Config.NonTVRalOption]" Value="added" />
        </Actions>
      </Rule>-->
      
      <!--TV SHOW FOLDER RAL SELECTOR COMMANDS
      <Changed Source ="[UpcomingTVCommand.Invoked]">
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[UpcomingTVPopup.Visible]" Value="true"/>
          <Set Target="[NextUpPopup.Visible]" Value="false"/>
          <Set Target="[RecentItemsPopup.Visible]" Value="false" />
          <Set Target="[ThemeHelper.Config.TvRalOption]" Value="UpcomingTV" />
        </Actions>
      </Changed>
        
      <Changed Source ="[NextUpCommand.Invoked]">
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false"/>
          <Set Target="[NextUpPopup.Visible]" Value="true"/>
          <Set Target="[RecentItemsPopup.Visible]" Value="false" />
          <Set Target="[ThemeHelper.Config.TvRalOption]" Value="NextUp" />
        </Actions>
      </Changed>

      <Changed Source="[RecentlyAddedCommand.Invoked]">
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Invoke Target="[Folder.SelectedChild.RecentItemsChanged]" />
          <Set Target="[Application.RecentItemOption]" Value="added" />
          <Set Target="[NextUpPopup.Visible]" Value="false"/>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false"/>
          <Set Target="[RecentItemsPopup.Visible]" Value="true"/>
          <Set Target="[ThemeHelper.Config.TvRalOption]" Value="[Application.RecentItemOption]" />
        </Actions>
      </Changed>

      <Changed Source="[WatchedCommand.Invoked]">
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[Application.Config.TreatWatchedAsInProgress]" Value="false"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Folder.SelectedChild.RecentItemsChanged]" />
          <Set Target="[Application.RecentItemOption]" Value="watched" />
          <Set Target="[NextUpPopup.Visible]" Value="false"/>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false"/>
          <Set Target="[RecentItemsPopup.Visible]" Value="true"/>
          <Set Target="[ThemeHelper.Config.TvRalOption]" Value="[Application.RecentItemOption]" />
        </Actions>
      </Changed>

      <Changed Source="[WatchedCommand.Invoked]">
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[Application.Config.TreatWatchedAsInProgress]" Value="true"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Folder.SelectedChild.RecentItemsChanged]" />
          <Set Target="[Application.RecentItemOption]" Value="watched" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true"/>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false"/>
          <Set Target="[NextUpPopup.Visible]" Value="false"/>
          <Set Target="[ThemeHelper.Config.TvRalOption]" Value="[Application.RecentItemOption]" />
        </Actions>
      </Changed>

      <Changed Source="[UnwatchedCommand.Invoked]">
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Invoke Target="[Folder.SelectedChild.RecentItemsChanged]" />
          <Set Target="[Application.RecentItemOption]" Value="unwatched" />
          <Set Target="[NextUpPopup.Visible]" Value="false"/>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false"/>
          <Set Target="[RecentItemsPopup.Visible]" Value="true"/>
          <Set Target="[ThemeHelper.Config.TvRalOption]" Value="[Application.RecentItemOption]" />
        </Actions>
      </Changed>-->
      <!--  END TV SHOW RAL SELECTORS  -->
      
      <!--  NON TV SHOW FOLDER RAL SELECTOR COMMANDS-->
      <!--<Changed Source="[RecentlyAddedCommand.Invoked]">
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Invoke Target="[Folder.SelectedChild.RecentItemsChanged]" />
          <Set Target="[Application.RecentItemOption]" Value="added" />
          <Set Target="[NextUpPopup.Visible]" Value="false"/>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false"/>
          <Set Target="[RecentItemsPopup.Visible]" Value="true"/>
          <Set Target="[ThemeHelper.Config.NonTVRalOption]" Value="[Application.RecentItemOption]" />
        </Actions>
      </Changed>

      <Changed Source="[WatchedCommand.Invoked]">
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Application.Config.TreatWatchedAsInProgress]" Value="false"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Folder.SelectedChild.RecentItemsChanged]" />
          <Set Target="[Application.RecentItemOption]" Value="watched" />
          <Set Target="[NextUpPopup.Visible]" Value="false"/>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false"/>
          <Set Target="[RecentItemsPopup.Visible]" Value="true"/>
          <Set Target="[ThemeHelper.Config.NonTVRalOption]" Value="[Application.RecentItemOption]" />
        </Actions>
      </Changed>

      <Changed Source="[WatchedCommand.Invoked]">
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Application.Config.TreatWatchedAsInProgress]" Value="true"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Folder.SelectedChild.RecentItemsChanged]" />
          <Set Target="[Application.RecentItemOption]" Value="watched" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true"/>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false"/>
          <Set Target="[NextUpPopup.Visible]" Value="false"/>
          <Set Target="[ThemeHelper.Config.NonTVRalOption]" Value="[Application.RecentItemOption]" />
        </Actions>
      </Changed>
      
      <Changed Source="[WatchedCommand.Invoked]">
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Application.Config.TreatWatchedAsInProgress]" Value="true"/>
          <Equality Source="[ThemeHelper.IsGameFolder]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Invoke Target="[Folder.SelectedChild.RecentItemsChanged]" />
          <Set Target="[Application.RecentItemOption]" Value="watched" />
          <Set Target="[RecentItemsPopup.Visible]" Value="true"/>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false"/>
          <Set Target="[NextUpPopup.Visible]" Value="false"/>
          <Set Target="[ThemeHelper.Config.NonTVRalOption]" Value="lastplayed" />
        </Actions>
      </Changed>

      <Changed Source="[UnwatchedCommand.Invoked]">
        <Conditions>
          <Equality Source="[ThemeHelper.IsTVShowFolder]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Invoke Target="[Folder.SelectedChild.RecentItemsChanged]" />
          <Set Target="[Application.RecentItemOption]" Value="unwatched" />
          <Set Target="[NextUpPopup.Visible]" Value="false"/>
          <Set Target="[UpcomingTVPopup.Visible]" Value="false"/>
          <Set Target="[RecentItemsPopup.Visible]" Value="true"/>
          <Set Target="[ThemeHelper.Config.NonTVRalOption]" Value="[Application.RecentItemOption]" />
        </Actions>
      </Changed>-->

      <Changed Source="[ShowUpcomingTV.Invoked]">
        <Actions>
          <Set Target="[InfoPanel.Tab]" Value="UpcomingTV"></Set>
        </Actions>
      </Changed>

      <Changed Source="[ShowActors.Invoked]">
        <Actions>
          <Set Target="[InfoPanel.Tab]" Value="Actors"></Set>
        </Actions>
      </Changed>

      <Changed Source="[ShowMediaDetails.Invoked]">
        <Actions>
          <Set Target="[InfoPanel.Tab]" Value="Details"></Set>
        </Actions>
      </Changed>

      <Condition Source="[Application.Config.TreatWatchedAsInProgress]" ConditionOp="Equals" SourceValue="false" Target="[WatchedLabel.Label]" Value="[Application.LocalStrings.#WatchedLabelStr!cor:String]"></Condition>
      <Condition Source="[Application.Config.TreatWatchedAsInProgress]" ConditionOp="Equals" SourceValue="true" Target="[WatchedLabel.Label]" Value="[Application.LocalStrings.#ResumeLabelStr!cor:String]"></Condition>
     
    </Rules>

    <!--EHS UI PANEL LAYOUT-->
    <Content>
      <Panel Layout="Form" >
        <Children>

          <!--<Text Name="FolderName" Color="color://is:XC_RALPopupItem" Font="font://is:XF_RALPopupItem" Content="" Margins="0,0,0,0">
            <LayoutInput>
              <FormLayoutInput Right="Parent,1,-5" Top="Parent,0.35"/>
            </LayoutInput>
          </Text>-->
          
          <Panel Name="RalselectorScroller" >
            <LayoutInput>
              <AnchorLayoutInput Left="Parent,0.07" Top="Parent,0,85" />
            </LayoutInput>
            <Children>
               <me:RALSelectorScroller Application="[Application]" Folder="[Folder]" Refresh="[Refresh]" Resume="[Resume]" Delete="[Delete]" ShowInfo="[ShowInfo]" PlayTrailer="[PlayTrailer]" ShowMediaDetails="[ShowMediaDetails]" Play="[Play]" ShowActors="[ShowActors]" />
            </Children>
          </Panel>
          
          <Clip Layout="Form" Padding="[Application.Config.OverScanPadding]" Scale="[Application.Config.OverScanScaling]" CenterPointPercent="0.5,0.5,0.5">
            <Children>
              <!--  VF Items Scrolling Panel -->
              <Scroller Orientation="Horizontal" FadeSize="50" Name="RootScroller" Navigation="Row, ContainHorizontal, RememberFocus" ScrollingData="[ScrollingData]" LayoutInput="[ScrollerHorizontalLayoutInput]" Visible="true" CenterPointOffset="0.5,0.5,0.5" >
                <Children>
                  <Repeater Source="[Folder.Children]" Name="RootItemRepeater" Layout="[HorizontalFlowLayout]" ContentName="BaseItem" DiscardOffscreenVisuals="false" >
                    <Animations>
                      <Animation Type="Move">
                        <Keyframes>
                          <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="Log, 2"/>
                          <PositionKeyframe Time="1" RelativeTo="Final"/>
                        </Keyframes>
                      </Animation>
                    </Animations>
                  </Repeater>
                </Children>
              </Scroller>
                
              <!--<Panel Name="HorizontalBG" >
               <LayoutInput>
                 <AnchorLayoutInput Left="Parent,0" Right="Parent,1" Horizontal="Fill" Top="Parent,0.7" />
               </LayoutInput>
               <Children>-->
                 <!--Graphic Name="texturedbg" Content="image://vi:rootBG" MinimumSize="0,225" MaximumSize="0,225" ColorFilter="color://is:RootHorizontalBGColor" Alpha="0.9"/-->
                 <!--<Graphic Name="glow" Content="image://vi:rootBGglow" MinimumSize="0,225" MaximumSize="0,225" ColorFilter="color://is:RootHorizontalBGglowColor"/>
                 <Graphic Name="overlay" Content="image://vi:rootBGoverlay" MinimumSize="0,225" MaximumSize="0,225" ColorFilter="color://is:RootHorizontalBGoverlayColor"/>
                 <Graphic Name="glassbg" Content="image://vi:rootBGGlass" MinimumSize="0,225" MaximumSize="0,225" ColorFilter="color://is:RootHorizontalBGColor" Alpha="1"/>
              </Children>
             </Panel>-->

              <Panel Name="RALButtonPanel"  >
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0" Right="Parent,0,680" Top="Parent,0.91" />
                </LayoutInput>
                <Children>
                  <Clip Name="Buttons" MaximumSize="0,125" FadeSize="5" FadeAmount="0.7" FarOffset="1" Orientation="Vertical" ColorMask="0,0,0" CenterPointOffset="0.5,1,0">
                    <Layout>
                        <FlowLayout Orientation="Horizontal" Spacing="10,0" />
                      </Layout>
                          <Children>
                            <rob:OptionButton Name="UpcomingTVButton" 
                                              Label="[Application.LocalStrings.#UpcomingTVBtnStr!cor:String]"
                                              Command="[UpcomingTVCommand]"
                                              Visible="false"
                                              Margins="5,0,0,0"/>
                            <Text Content="|" Name="UpcomingTVDivider" Font="font://is:XF_RALOption" Color="color://is:XC_RALOption" Visible="false" />
                            <rob:OptionButton Name="NextUpButton" 
                                              Label="[Application.LocalStrings.#NextUpBtnStr!cor:String]"
                                              Command="[NextUpCommand]"
                                              Visible="false"
                                              Margins="5,0,0,0"/>
                            <Text Content="|" Name="NextUpDivider" Font="font://is:XF_RALOption" Color="color://is:XC_RALOption" Visible="false" />
                            <rob:OptionButton Name="NewLabel"
                                              Label="[Application.LocalStrings.#NewBtnStr!cor:String]"
                                              Command="[RecentlyAddedCommand]" />
                            <Text Content="|" Font="font://is:XF_RALOption" Color="color://is:XC_RALOption" />
                            <rob:OptionButton Name="WatchedLabel"
                                              Label="[Application.LocalStrings.#WatchedBtnStr!cor:String]"
                                              Command="[WatchedCommand]" />
                            <Text Content="|" Font="font://is:XF_RALOption" Color="color://is:XC_RALOption" />
                            <rob:OptionButton Name="UnwatchedLabel"
                                              Label="[Application.LocalStrings.#UnwatchedBtnStr!cor:String]"
                                              Command="[UnwatchedCommand]" />
                          </Children>
                  </Clip>
                  <Graphic Name="RALDown" Content="image://vi:InfoPanel" MinimumSize="0,50" MaximumSize="0,60" ColorFilter="color://is:RootHorizontalBGoverlayColor" >
                    <LayoutInput>
                      <AnchorLayoutInput Left="Parent,0" Right="Buttons,1,30"/>
                    </LayoutInput>
                  </Graphic>
                </Children>
              </Panel>

              <!--<nus:NextUpPopup Name="NextUpPopup"
                           Application="[Application]"
                           ThemeHelper="[ThemeHelper]"
                           Visible="false"
                           LayoutInput="[RALHalfHorizontalLayout]"/>

              <utv:UpcomingTVPopup Name="UpcomingTVPopup"
                               Application="[Application]"
                               ThemeHelper="[ThemeHelper]"
                               Visible="false"
                               LayoutInput="[RALHalfHorizontalLayout]"/>

              <rip:RecentItemsPopup Name="RecentItemsPopup"
                                    Application="[Application]"
                                    ThemeHelper="[ThemeHelper]"
                                    Visible="false"
                                    LayoutInput="[RALHalfHorizontalLayout]"
                                    RecentlyAddedCommand="[RecentlyAddedCommand]"
                                    WatchedCommand="[WatchedCommand]"
                                    UnwatchedCommand="[UnwatchedCommand]" />-->
              
              <!--WEATHER + DATE/TIME PANEL-->
              <Panel Name="ClockDisplayPanel">
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,1,-600" Right="Parent,1,0" Top="Parent,0.91" />
                </LayoutInput>
                <Children>
                  <Clip MaximumSize="0,112" FadeSize="18" FadeAmount="0.7" FarOffset="1" Orientation="Vertical" ColorMask="0,0,0" CenterPointOffset="0.5,1,0">
                    <Layout>
                      <FlowLayout Orientation="Horizontal"  StripAlignment="Far" Spacing="5,0" />
                    </Layout>
                    <Children>
                      <wea:SmallWeather Name="MiniWeather" MaximumSize="0,50" Margins="0,0,10,0"/>
                      <Text Content="|" Font="font://is:ClockFont" Color="color://is:ClockColor" />
                      <Text Name="DateDisplay" Color="color://is:ClockColor" Font="font://is:ClockFont" Margins="10,2,0,0"/>
                      <Text Name="TimeDisplay" Color="color://is:ClockColor" Font="font://is:ClockFont" Margins="10,2,30,0"/>
                    </Children>
                  </Clip>
                  <Graphic Name="WeatherPanel" Content="image://vi:InfoPanelTime" MinimumSize="0,50" MaximumSize="0,70" ColorFilter="color://is:RootHorizontalBGoverlayColor" />
                </Children>
              </Panel>
              
              <!-- Welcome to MB & Update Info Panel-->
              <Panel Name="MBInfo" Alpha="0.7" LayoutInput="[MBInfoHorizontalLayout]" >
                <Layout>
                  <FlowLayout ItemAlignment="Near"/>
                </Layout>
                  <Children>
                    <in:InfoMarquee Application="[Application]" />
                  </Children>  
                </Panel>
              
              <!-- MB News Ticker 
              <Panel Name="NewsPanel" Alpha="0.9" Visible="false"  >
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0.1" Top="Parent,0,5" Right="Parent,0.9" />
                </LayoutInput>
                  <Children>
                    <ns:NewsScroller Name="NewsScroller" Application="[Application]" ThemeHelper="[ThemeHelper]" Item="[NewsItems]" />
                  
                  </Children>  
                </Panel>

              <Panel Name="NewsBGPanel" Visible="false" Navigation="None">
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0" Right="Parent,1" Top="Parent,0" Bottom="Parent,0,35"  />
                </LayoutInput>
                <Children> 
                  <Graphic Name="NewsScrollerBG" Content="image://vi:RALBG" ColorFilter="color://is:XC_RALPanelFilterColor" Alpha="0.6" />
                </Children>
              </Panel> -->
              
                

              <!--Security Indicator-->
              <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="PCLock">
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0,15" Bottom="Parent,1,-15"/>
                </LayoutInput>
                <Children>
                  <Graphic Name="PCLockImage" Content="image://i:Lock" Margins="0,0,5,5" MaximumSize="35,35" MaintainAspectRatio="true">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                    </LayoutInput>
                  </Graphic>
                </Children>
              </Panel>
              
              <ColorFill Name="Overlay" Layout="Fill" Visible="[ThemeHelper.Config.FolderShowBackdropOverlay]" Alpha="[ThemeHelper.Config.FolderBackdropOverlayAlpha]" Content="Black" />
              <bd:NowPlayingBackdrop Name="NowPlayingBackdrop" Application="[Application]"/>
              <bd:Backdrop4 Name="Backdrop" Application="[Application]" LoadDelay="100" FadeTime="0.3" Visible="false" Image="[Folder.BackdropImage]" Item="[Folder]"/>

            </Children>
          </Clip>
        
         </Children>
      </Panel>
    </Content>
    <Content Name="BaseItem">
      <me:RootScrollerItem Item="[RepeatedItem!lib:FolderModel]" ParentFolder="[Folder]" Application="[Application]"
                          Index="[RepeatedItemIndex.SourceValue]" SelectedIndex="[SelectedIndex]" ThemeHelper="[ThemeHelper]" />
    </Content>
  </UI>

  <UI Name="RootScrollerItem" BaseUI="ib:ItemButton">
    <Properties>
      <lib:FolderModel Name="ParentFolder" FolderModel="$Required" />
      <IntRangedValue Name="SelectedIndex" IntRangedValue="$Required"/>
      <cor:Int32 Name="Index" Int32="0"/>
      <ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
    </Properties>
    <Locals>
      <Font Name="UnselectedTitleFont" Font="font://is:UnselectedEHSTitleFont" />
      <Color Name="UnselectedTitleColor" Color="color://is:UnselectedEHSTitleColor" />
    </Locals>

    <Rules>
      <Condition Source="[Input.KeyFocus]" SourceValue="true">
        <Actions>
          <Set Target="[SelectedIndex.Value]" Value="[Index]"/>
        </Actions>
      </Condition>

      <Condition Source="[Input.DeepKeyFocus]" ConditionOp="Equals" SourceValue="false">
        <Actions>
          <Set Target="[Title.Margins]" Value="0,30,0,0" />
        </Actions>
      </Condition>
      
      <Changed Source="[Input.DeepKeyFocus]">
        <Conditions>
          <Equality Source="[Input.DeepKeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Title.Margins]" Value="0,0,0,0" />
          <Set Target="[Title.Font]" Value="font://is:SelectedEHSTitleFont" />
          <Set Target="[Title.Color]" Value="white" />
          <Set Target="[SelectedIndex.Value]" Value="[Index]"/>
        </Actions>
      </Changed>

      <Binding Source="[Item.Name]" Target="[Title.Content]">
        <Transformer>
          <FormatTransformer ToUpper="false"/>
        </Transformer>
      </Binding>
      <!--Binding Source="[Item.Name]" Target="[SelTitleShadow.Content]">
        <Transformer>
          <FormatTransformer ToUpper="true"/>
        </Transformer>
      </Binding-->
    </Rules>

    <Content>
      <Clip MaximumSize="0,112" FadeSize="20" FadeAmount="0.7" FarOffset="1" Orientation="Vertical" ColorMask="0,0,0" CenterPointOffset="0.5,0.8,0">
        <Children>
          <Text FadeSize="1"  Name="Title" Content="[Item.Name]" Color="[UnselectedTitleColor]" Font="[UnselectedTitleFont]"/>
        </Children>
      </Clip>
      <!--Text Name="Title" Content="[Item.Name]" Color="[UnselectedTitleColor]" Margins="0,-5,0,0" Font="[UnselectedTitleFont]" >
        <LayoutInput>
          <AnchorLayoutInput Horizontal="Center" Vertical="Center"/>
        </LayoutInput>
      </Text-->
    </Content>
  </UI>

  <UI Name="RALSelectorScroller" >
    <Properties>
      <Command Name="ShowNew" Command="$Required"/>
      <Command Name="ShowWatched" Command="$Required"/>
      <Command Name="ShowUnwatched" Command="$Required"/>
      <Command Name="ShowResume" Command="$Required"/>
      <Command Name="ShowUpcomingTV" Command="$Required"/>
      <Command Name="ShowNextUp" Command="$Required"/>

      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>


    </Properties>

    <Locals>
      <ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="ScrollingHandler"/>
      <ScrollingData Name="ScrollingData" LockedPosition="0.05" LockedAlignment="0.05" BeginPadding="0" EndPadding="0" />
      <ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled" Handle="true" />
      <ShortcutHandler Name="JumpBack" Shortcut="SkipBack" HandlerStage="Bubbled" Handle="true"/>
    </Locals>
    
    <Content>
      <Scroller FadeSize="10" Navigation="RememberFocus, ContainHorizontal" Orientation="Horizontal" ScrollingData="[ScrollingData]">
        <Children>
          <Panel>
            <Layout>
              <FlowLayout Orientation="Horizontal" ItemAlignment="Near"/>
            </Layout>
            <Animations>
              <Animation Type="Move">
                <Keyframes>
                  <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                  <PositionKeyframe Time="0.5" RelativeTo="Final"/>
                </Keyframes>
              </Animation>
            </Animations>
            <Children>
              <me:RALItem Name="NextUpItems"      Focus="[ShowNextUp]" Description="NextUp" />
              <me:RALItem Name="UpComingTVItems"  Focus="[ShowUpcomingTV]" Description="Upcoming TV" />
              <me:RALItem Name="NewItems"         Focus="[ShowNew]" Description="New" />
              <me:RALItem Name="ResumeItems"      Focus="[ShowResume]" Description="Resume" />
              <me:RALItem Name="WatchedItems"     Focus="[ShowWatched]" Description="Watched" />
              <me:RALItem Name="UnwatchedItems"   Focus="[ShowUnwatched]" Description="Unwatched" />
            </Children>
          </Panel>
        </Children>
      </Scroller>
    </Content>


  </UI>

  <UI Name="RALItem" >
    <Properties>
      <ih:DetailsItem Name="DetailsItem"></ih:DetailsItem>
      <cor:String Name="Description" String="$Required"></cor:String>
      <Command Name="Click" />
      <Command Name="Focus" Command="$Required"/>
    </Properties>
    <Locals>
      <Font Name="RALSelected" Font="Futurist Fixed-Width,15" />
      <Font Name="RALNotSelected" Font="Futurist Fixed-Width,12" />
      <ClickHandler Name="Clicker"/>
    </Locals>
    
    <Rules>
      <Changed Source="[Clicker.Invoked]" >
        <Actions>
          <Invoke Target="[Click.Invoke]"></Invoke>
        </Actions>
      </Changed>

      <Default Target="[Input.KeyInteractive]" Value="true"></Default>

      <Condition Source="[Input.KeyFocus]" SourceValue="true" Target="[Label.Color]" Value="White">
        <Actions>
          <Set Target="[Label.Font]" Value="[RALSelected]"></Set>
          <Invoke Target="[Focus.Invoke]"></Invoke>
        </Actions>
      </Condition>
    </Rules>
    <Content>
      <Text Margins="30,0,30,0" FadeSize="20" MaximumSize="800,0" CenterPointPercent="0.5,1,0" Scale="1,1,1" Name="Label" Content="[Description]" Font="[RALNotSelected]" Color="Gray" />
    </Content>
  </UI>

  <UI Name="RALGetters">
    <Properties>
      <lib:Item Name="Item" Item="$Required"/>
      <ih:IridiumHelper Name="ThemeHelper" IridiumHelper="$Required" />
      <a:Application Name="Application" Application="$Required"/>
      <cor:String Name="Tab" String="Info" />
    </Properties>
    <Rules>
      <Condition Source="[Tab]" SourceValue="New">
        <Actions>
          
          <Set Target="[NextUpPanel.Visible]" Value="false" />
          <Set Target="[UpcomingTVPanel.Visible]" Value="false" />
        </Actions>
      </Condition>

      <Condition Source="[Tab]" SourceValue="Watched">
        <Actions>
          
          <Set Target="[NextUpPanel.Visible]" Value="false" />
          <Set Target="[UpcomingTVPanel.Visible]" Value="false" />
        </Actions>
      </Condition>

      <Condition Source="[Tab]" SourceValue="Unwatched">
        <Actions>
          
          <Set Target="[NextUpPanel.Visible]" Value="false" />
          <Set Target="[UpcomingTVPanel.Visible]" Value="false" />
        </Actions>
      </Condition>

      <Condition Source="[Tab]" SourceValue="Resume">
        <Actions>
          
          <Set Target="[NextUpPanel.Visible]" Value="false" />
          <Set Target="[UpcomingTVPanel.Visible]" Value="false" />
        </Actions>
      </Condition>

      <Condition Source="[Tab]" SourceValue="NextUp">
        <Actions>
          
          <Set Target="[NextUpPanel.Visible]" Value="true" />
          <Set Target="[UpcomingTVPanel.Visible]" Value="false" />
        </Actions>
      </Condition>

      <Condition Source="[Tab]" SourceValue="UpcomingTV">
        <Actions>
          <!--<Set Target="[NewPanel.Visible]" Value="false" />
          <Set Target="[WatchedPanel.Visible]" Value="false" />
          <Set Target="[UnwatchedPanel.Visible]" Value="false" />
          <Set Target="[ResumePanel.Visible]" Value="false" />-->
          <Set Target="[NextUpPanel.Visible]" Value="false" />
          <Set Target="[UpcomingTVPanel.Visible]" Value="true" />
        </Actions>
      </Condition>
    </Rules>
    <Content>
      <Panel>
        <Children>
          
          <nus:NextUpPopup Name="NextUpPanel"
                               Application="[Application]"
                               ThemeHelper="[ThemeHelper]"
                               Visible="false"/>
            

          <utv:UpcomingTVPopup Name="UpcomingTVPanel"
                               Application="[Application]"
                               ThemeHelper="[ThemeHelper]"
                               Visible="false"/>

          <!--<rip:RecentItemsPopup Name="RecentItemsPopup"
                                Application="[Application]"
                                ThemeHelper="[ThemeHelper]"
                                Visible="false"
                                RecentlyAddedCommand="[RecentlyAddedCommand]"
                                WatchedCommand="[WatchedCommand]"
                                UnwatchedCommand="[UnwatchedCommand]" />-->
          
        
        </Children>
      </Panel>
    </Content>
  </UI>
    
</Mcml>